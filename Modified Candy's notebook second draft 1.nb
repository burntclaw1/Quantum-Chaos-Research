(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    207222,       3762]
NotebookOptionsPosition[    201383,       3669]
NotebookOutlinePosition[    201807,       3686]
CellTagsIndexPosition[    201764,       3683]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Numerical Calculation: FindMininumCostFlow", "Title",
 CellChangeTimes->{{3.718713698564654*^9, 3.7187137052744064`*^9}, {
  3.7475729787223797`*^9, 
  3.7475730185404563`*^9}},ExpressionUUID->"db21e94a-4d5b-44de-85a4-\
2189ac2807bc"],

Cell[TextData[{
 "This notebook is designed to take two distributions of sand in a specified \
box, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "init"], "(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]],ExpressionUUID->
  "19f9cbb0-a700-4b59-9eaa-fea409db045b"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "final"], "(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]],ExpressionUUID->
  "32f43643-95fd-4deb-adb5-20113f5da990"],
 " and calculate the cost of moving the sand from the initial to the final \
distribution. Cost is defined as the amount of sand moved times the distance."
}], "Text",
 CellChangeTimes->{{3.7187137106772213`*^9, 
  3.7187138091258593`*^9}},ExpressionUUID->"b7678db6-d45f-455b-85ec-\
513458b119c0"],

Cell["\<\
The FindMinimumCostFlow function will output the minimum total cost of \
flowing moving from supply to demand. \
\>", "Text",
 CellChangeTimes->{{3.718837968909587*^9, 3.71883798673643*^9}, {
  3.7188381917295427`*^9, 3.7188382769472013`*^9}, {3.7475730726166506`*^9, 
  3.7475731381142893`*^9}},ExpressionUUID->"41db1386-6c3a-4e02-80a7-\
437487129e45"],

Cell[CellGroupData[{

Cell["Enter Parameters", "Section",
 CellChangeTimes->{{3.718713659939337*^9, 
  3.718713668392317*^9}},ExpressionUUID->"6b7c1d83-4d3a-49ff-8eba-\
e2fc473f6487"],

Cell["\<\
Define the initial and final sand configurations. (These will be \
automatically normalized below.)\
\>", "Text",
 CellChangeTimes->{{3.7187134100605803`*^9, 3.7187134589721775`*^9}, {
  3.7187138265382032`*^9, 
  3.7187138348340445`*^9}},ExpressionUUID->"20bc7c2e-b83f-4d5b-8aa9-\
ecd013b816cc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x1", "=", "1"}], ";", 
  RowBox[{"y1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", "0"}], ";", 
  RowBox[{"y2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", "0.5"}], ";", " ", 
  RowBox[{"p", "=", "0.25"}], ";", " ", 
  RowBox[{"\[Theta]", "=", "0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.732030528018759*^9, 3.7320305301988163`*^9}, {
   3.733793701148775*^9, 3.733793752075521*^9}, {3.73379453747824*^9, 
   3.733794545885833*^9}, {3.7337945876704054`*^9, 3.7337946009734435`*^9}, 
   3.7489099147051525`*^9, 3.748909982229043*^9, 3.7489102241472054`*^9, 
   3.748912084949465*^9, {3.748914401723262*^9, 3.7489144045763044`*^9}, {
   3.7489147918774853`*^9, 3.7489147965147*^9}, {3.873990337461932*^9, 
   3.873990355564694*^9}, {3.873990878511148*^9, 3.873990914210498*^9}, {
   3.87555583102358*^9, 3.875555843913355*^9}, {3.875609105293663*^9, 
   3.875609107493991*^9}, {3.875609145886279*^9, 3.875609148480603*^9}, {
   3.875609202745201*^9, 3.875609216215477*^9}, {3.875609399538727*^9, 
   3.8756094011066103`*^9}, {3.875610311101206*^9, 3.875610321206208*^9}, {
   3.8756308759891157`*^9, 3.8756309051654797`*^9}, {3.875630979382516*^9, 
   3.875630981106518*^9}, {3.8757936773518553`*^9, 3.875793677490267*^9}, {
   3.875793740357883*^9, 3.875793760326046*^9}, {3.875793978051387*^9, 
   3.875793980718894*^9}, {3.876605412007324*^9, 3.876605412443317*^9}, {
   3.876923519352556*^9, 3.876923523288248*^9}, {3.87692415815628*^9, 
   3.8769241583366117`*^9}, {3.878056063426066*^9, 3.8780560666719027`*^9}},
 FontWeight->"Plain",ExpressionUUID->"b6d1e559-02c0-4274-956a-6b1a937d77b2"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.732030528018759*^9, 3.7320305301988163`*^9}, {
   3.733793701148775*^9, 3.733793752075521*^9}, {3.73379453747824*^9, 
   3.733794545885833*^9}, {3.7337945876704054`*^9, 3.7337946009734435`*^9}, 
   3.7489099147051525`*^9, 3.748909982229043*^9, 3.7489102241472054`*^9, 
   3.748912084949465*^9, {3.748914401723262*^9, 3.7489144045763044`*^9}, {
   3.7489147918774853`*^9, 3.7489147965147*^9}, {3.873227586000675*^9, 
   3.873227589127459*^9}, {3.873228517584799*^9, 3.8732285176770363`*^9}, {
   3.873231142563065*^9, 3.873231149492885*^9}, {3.873233139879216*^9, 
   3.873233139988879*^9}, {3.873233664358756*^9, 3.8732336655864553`*^9}, {
   3.873234073762395*^9, 3.873234073930442*^9}, {3.873234358280501*^9, 
   3.873234358489637*^9}, {3.8756092768721437`*^9, 3.875609288854958*^9}},
 FontWeight->"Plain",
 CellLabel->"In[4]:=",ExpressionUUID->"da9295af-244e-4c60-890c-9adc0afec214"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "=", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ")"}], "2"], 
      SuperscriptBox["p", "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"]}], 
      SuperscriptBox["\[Rho]", "2"]]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", "=", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["p", "2"]], "-", 
      FractionBox[
       SuperscriptBox["p", "2"], 
       SuperscriptBox["\[Rho]", "2"]]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"], 
      SuperscriptBox["p", "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ")"}], "2"]}], 
      SuperscriptBox["\[Rho]", "2"]]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"finit", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   RowBox[{
    FractionBox["1", "\[Pi]"], 
    SuperscriptBox["E", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", "x", ")"}], "2"]}], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", "y", ")"}], "2"], 
       SuperscriptBox["\[Rho]", "2"]]}]]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ffinal", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{
     FractionBox["1", "\[Pi]"], 
     SuperscriptBox["E", 
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "x2"}], ")"}], "2"]}], 
        SuperscriptBox["p", "2"]], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p", "2"], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"y", "-", "y2"}], ")"}], "2"]}], 
        SuperscriptBox["\[Rho]", "2"]], " "}]]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ffinal", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   SuperscriptBox["E", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"aa", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "x2"}], ")"}], "2"]}], "+", 
       RowBox[{"bb", "*", 
        RowBox[{"(", 
         RowBox[{"x", "-", "x2"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{"y", "-", "y2"}], ")"}]}], "+", 
       RowBox[{"cc", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"y", "-", "y2"}], ")"}], "2"]}]}], ")"}]}]]}]}]}], "Input",
 CellChangeTimes->{{3.875609362452834*^9, 3.875609362464476*^9}, {
  3.875630944243865*^9, 3.8756309683511887`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"1f2696b0-e746-46e3-b02b-7f37f5ad28ef"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}], "-", 
    SuperscriptBox["y", "2"]}]], "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.875609406933152*^9, 3.875609922946134*^9, 3.875610008609488*^9, 
   3.875610049278322*^9, 3.875610324114811*^9, {3.875630886687756*^9, 
   3.875630909451852*^9}, {3.875630972212187*^9, 3.875630983788144*^9}, {
   3.875793687502449*^9, 3.875793762847867*^9}, 3.875793809432104*^9, {
   3.875793880052947*^9, 3.875793950673831*^9}, {3.875793983274036*^9, 
   3.875794009408383*^9}, 3.875794095504784*^9, 3.875794160894525*^9, {
   3.876262291122809*^9, 3.8762624658306313`*^9}, 3.876303015676037*^9, {
   3.876303046255165*^9, 3.876303060581039*^9}, 3.876303166545682*^9, {
   3.876303296307084*^9, 3.876303348149238*^9}, 3.8763044881038847`*^9, {
   3.876585409633469*^9, 3.876585434130595*^9}, 3.876605200053411*^9, 
   3.876605343580845*^9, 3.876605432412238*^9, {3.876605611648827*^9, 
   3.876605636776754*^9}, 3.876605824432742*^9, 3.8766061874843607`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"883c7750-4da9-4a80-a56b-82f6b3ea094c"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"]}], "-", 
    SuperscriptBox["y", "2"]}]], "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.875609406933152*^9, 3.875609922946134*^9, 3.875610008609488*^9, 
   3.875610049278322*^9, 3.875610324114811*^9, {3.875630886687756*^9, 
   3.875630909451852*^9}, {3.875630972212187*^9, 3.875630983788144*^9}, {
   3.875793687502449*^9, 3.875793762847867*^9}, 3.875793809432104*^9, {
   3.875793880052947*^9, 3.875793950673831*^9}, {3.875793983274036*^9, 
   3.875794009408383*^9}, 3.875794095504784*^9, 3.875794160894525*^9, {
   3.876262291122809*^9, 3.8762624658306313`*^9}, 3.876303015676037*^9, {
   3.876303046255165*^9, 3.876303060581039*^9}, 3.876303166545682*^9, {
   3.876303296307084*^9, 3.876303348149238*^9}, 3.8763044881038847`*^9, {
   3.876585409633469*^9, 3.876585434130595*^9}, 3.876605200053411*^9, 
   3.876605343580845*^9, 3.876605432412238*^9, {3.876605611648827*^9, 
   3.876605636776754*^9}, 3.876605824432742*^9, 3.8766061875107183`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"410943e8-0ef9-4121-a329-68931e0e5014"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ffinal", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"finit", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.873990292424479*^9, 3.8739903286377487`*^9}, 
   3.8739904466766567`*^9, {3.874159135512912*^9, 3.874159135817031*^9}, {
   3.875555862705727*^9, 3.875555892757313*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"aa317fa4-c1f8-449a-a609-2ea7db5867da"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
ejvEdNkOt1esbgutpOi4qwvUpx3pOMT7V6ykOKdKhwfF0PgW1Q6o1OKvnTWr
XDHKOR1Ddduo/T1aS7nB/k2sI43pOKzQolrYXzs/VPeaVM10FNVtYbg9+mtn
Zqq/elShTrfKql/bHbzNpa599jD+sIz2r4W0NXH2K7k//PBXtxQLafHoPAu5
P3zwV5+AipJ9p7LZkTJ/qNXT2lJa2dW68JmZzh9q9QywlFyX3fItUuj8oVbP
q5aSXeyGyo7Hx1B/GKK131y6kPe1bKug/VS3Cb514kpLzaWFLQccbn93EdWt
b5UGir92jn/aeFyMRy3qD4XHjYf/tdPYYcTUpdViqG5aPTV2fnJdERMar/v9
avXU2JlTx3nnzxTd71drj8bOJPPjr6Jlv9+mc4oF7w3lpZj605j5uopWZ2Mp
O61GM/l8XVb710TythBN5fP1R63OJlLL12/jz8rma6xzBelqm3kNbn7Wzdfn
tf7EVOr61GhoxoN1XL3IVHrr7bX727IMrv5WXnpb33fFN39bOl9jnTV+YvHP
PV/T31M9J2p1NpZmW3i0KnNuLdUT62wifY+q+77thyp0fkFanStIexf3skrs
qZtfmmx1ksI1dvqWO3jgq4Nufqk03Ln2XzsN/4sY9UY2v7Q/UfA8IKuMVH5b
dSaebKbVuax0cZ5akseTdlqdDaQ/d416yuNJA+1fQ8lmTePMX6t18STW2VD6
6rWreVGMLp7EOhtJF/bk1VvowNeLykk7L+Z8ClhTj8aTWOcy0uszy/I2JY2h
emKdy0pHYyq973hboPHPIq3OBtK91Ie3fDzfUj2xzgZS/KHmh9z6LqJ69tPq
bChlPYtIWblCF/+00+psJPnafdiTKIt/sM7lJO/Ved1KZfFP0ptHpQ7e38Xa
vzyYfGfZ5JdiVsoP0aVS74HyfGdw4YeFGxx+idHfSz/tleU7LbX6/xZzqm9w
PCfLd8pp/5aI4023DprYS5fvPNbqWSpG7vBpcnWOLt95qOUKyXxnjf1T4oZR
PUO1+nwXr+9JK45zj6d6DtDq8EO0u777+Mb1c6mezbX3+0uM6lzTtEFmaxqf
l63nFtJZY6eJyu927Tu6+Pzh3vaotPSPaNc64/lTQ118fqi5j+KvnbkR6mox
svgc66yQqnbxqecli89TLsUtfJLyVkxY+XWyPB8fkXGs1HvDBzHDNPexPB+3
eHp54YmAz2J1i1UV5fk41rlANHsa1+G9LB9vodX5i/hw6zff13G6fNxI+6dQ
XFG5llvaJV0+jnUuEtdsMi08IC6meg7V6vZWjHofZ/+r7SWqZ3mtPh/EqmJb
s33KnVTPI1odPotmqw5U3V52ItWzmVbnAvHmghlPAl/r8kes8xfxWnJHe6MK
uvwR6/xVzO7w681hWf6YqO2/SOzaYF+EPH8cfjvg98ysFLFK6RymXvSk8pKS
wKzLot+APl/l9aIr8WNLIxwyRMu+nkbyelH102tLJ2fdF0f0v+fTXVYvmqx9
Lk9E382pp3vJ6kUjtPq/ENuZn1p5YKmuXlRB+zdXNJ7d/sTAU2FUz9gh0YpJ
GjurW46qNPuYrl40Xcsvi3mOLi1R37NUTwuvIEW4xs5yyx66VnVdS/Ucrm1/
XzSwqj3Dx1VX30iZfk7RSWNnTXPXirtl9Y1y2n5eiMfvOT+fJqtvHO21NKSk
9KUYajo5W17f2Ia58Op8O6Ze9LWjth8hI3/IS/n4XIuvK0yuHfZMPj7dsJ3C
brOX2aWy8Zmn7SdDeHN7R0CjnbrxWR/rIFzLr5MdXg5RPf8M1uomfK52bVH7
K8upnsWlf/+9FBoH9+/yespVqmc3/FyE91Gt9jR3OU319MLPUTj3ea5DhbO6
+lvhKe1zF+YWBy0YuVtXf9uGx4kQlzlz/GlZ/W0dHlfCnr0dn4my+tuFW9px
KEhOAefk9bcEPG6FKh6Wj+X+8yYe50JBtd7L5f7ze13t70J4GB3a+5DMf9bD
vyPh3KdjlYpl/nMr/t0JP5beN1rTX+c/v2r7+SD08Wg0do7SnurZBf+uhc7+
399VDg6get7GfkDo7rNoqsme3VTP31qdvwo+88f1+lPmANWzAfYzQoyffeRP
ta7+1hv7JSGvRT/LqJa68fnjidaPCQPOLfBEsvHZHfs9IfSTz6mpsvEZj/2k
4NNsdbJ8fCqxX0X2IUYP5PM71rlU49isrQbJ5vcb2G8LIySHckGy+R3r/Fvo
V676EElWL3LA84Iwo2eSOD9JN7/3wPOIYF7B/lrmrBw6v8/B845g3MsyIy6b
jlvhDp6nUKLnALVJzWlUT6xzqRDvOWDjhyNLqZ5Y5z+CdcC5NfFDdfW3hnje
FIysDcJMLuj8J9b5l3BieIuX+cY6/zkPz8uCa1vfu9tk/nM3nseFRX0i7OX+
0xHP++jAnNRyi2XxJ9bZCGV/FL7J48/eOK5AjYuTfUfK4s+xOA5Bv9asqLfP
Xxd/zsNxC3KZL7XaW9+Y6onrA2XRjkOXyhiLG6iee3BchP6LaXeqolMZqifO
f8sh56az2yyOb0b1vIvjLvTBo0tKfK8uVM+3OE5Dzz43Sksb3pzqWaLV2QDd
9mzh5rhBN7/b4jgQHf2xuJmNrP7miONG9HzKwErzZPO7GseZ6FWJeW95/c0a
x6XoUdEL87ay/KghjmPRmVF2Z6fL8iOscwXU+NacOfYTdPlRLxwnI6PNxXUX
NNXlR1hnYyTNNNt88qYuP5qP43C0NXLjtHPfnbh6UXnU9vSBiPljD3L1N1OE
zLIq97kOdTmob5iih3Gt6iumfKPxPNa5AmoQvG7IhV66+hvW2QSp1n6Zqj6u
q79hnY1Rdpixo4Ws/maD8xo0zs994yhZ/NkI50HoqGVfF3n9bQHOm1D3Ca7q
OFm9yBjnWej189FHt8ny9Aicl6Gj/SdeGVisy9M9cB6Hqpomfvm4UZenY50t
ULm1xWlOilpUT6yzOSrsHOpyOfskzdPxeDZHy9bPiNh+rx3V0xvnoUjaPKbX
IeU4qmcmzltR571rO43rvI7qORTnuahhj4UB/icCqZ5Y54pIeUXq63tQV397
g/NoFH7bNGq1rP72R6uzOeoSWXvyK1n9Detsjt6r3paX19+KvtTMD0+wQYrt
7U/We6+rF5F8Hxl1N2h/UlYvMsH1AXTHLrK4qIOuXhSJ6wko7GHdKgnfdPWi
mrj+gE52aybtEJbTetE+XK9AJWsvhSYeaEn1bI3rG2jB26CRyXMkdj2Pxs7O
Rx7N3XwW6iEK1AXXT1BuQsvqOzqZUT3v4XoLcp7Y3KQ4TFd/G4brM8g+3nTf
hA66+ts7XM9Bc797WxV56/L36bj+g04ltF6i0tXfQDeJ1c0eAZ/ZdF7pkLe6
9TbaPyFW0rljBx7fP2PhAfcF8WFlLm6BePIpE7fkC79J/FODixsdSLyUz8SN
9pJ2OGj07M/UtewRcI9kuT3UfsTbD3Uzbh0RXd/F1hvz6XkdqbbNO6x6c5va
D+d1XGS4PT1/IOuXge3Mjh+on4Rxd+XuyZTR5ltovATtNzVJ7rDM0pl7/2sr
dbs/zjb67S7KoX2dy775mxHi3gvbSu8G9s9wLDOdcmhfoe6RZvsPmtP5C9q/
3jusheRgSDm079nz2vMZL7ZSvwHtY0+u29a2dz/Kof281rVGtlqXT8c/tHcy
n/HNreE8yqH9M1+p+boXtvTcJ2ifS9bPg87AnZl+FAro5zLZ1wDtgeew/SPo
J5q1n56rMIex35i2r7CP0Ye2j2P0saTtx/ox+tP2yxn9bWn7Z+zzpe3XMM/X
jrb/kMmMH9p+alP5+LGn7csOtm8wrl9PN+DUnj/y8WlPz3N4eT3iwmKPyXR8
Av++xc3t3vTjdBwCX3xt9IC2I87T8QY86UhmeNyZ9br4k/DnCvuMSoW1aLwE
PLRN3bMtkgPp/A68YcfYOkN8N9FxAlxJzpGA5w7cnm1Pz3OYzPRvTLltGbk9
lpQHH5Xbb0t5EXO/dpRnx8r1sad86k25nvb0PIcrET89x3V/QHUGXuXl9RpT
V9WG+j/lDWZGWGX81xjGG+W7Is6XXxb8neoM3N/4oLVZ/AqqM/AhQqMjUtcs
qjPwcd3PNkprqztXkNpJ9sGBzsCHs+3peQ6I6d+Y8ljGHkvK1ZFy+20p/8Lc
rx3l1xh97Cn/FinX056e5xDg7NN69etGsL6U8ilXH8xdMDKI6kzPW9h2qGhN
+nyqM/AV/zndOtCiK62fAHexa/7ddEQW1Rm4q9njs2K/5jQ/Bf55RfawcnX7
UJ2B55F9naAz8Hdse3qegz3TvzHlixl7LCm3uy6335by6O3y+7WjvO01uT72
lJ9vI9fTnp7n8Lizu2rzeX+qM/BFRz/aeAYfojoDr9j31u52T09QnYG7r7K8
1vPqUqozcLvEwFSbfPo+nfKGqj1XW/YYR3UG/s58xZWW+9ZRnYGryD5l0Bl4
NtuenudgyfRvTHkXxh5Lyg8y9ttSnsbcrx3l0jG5PvaUv/eW62lPz3OI6bJu
96qfy6nOwPtFz4iNMcygOgM//CXo66nwLKoz8Fsm+6e3brKP6gx8v/ebrz/7
u1GdgVdc2nWOX6U1VDfgsaGtUZ0LR6luwL+HytsbU57D9G9Jea8KcntsKQ/5
KrffjvKKm+X3a095Zle5PrDuLl3Za8LLRx2/R1DdgB91/Xp8wYAnVDfgs5eP
TUsvyqO6AX/S9fCs0qJkbt1dunLc8+bTulTvSHUDPu9UA2nsqCiqG/D/qkuW
aiRS3YDH9B7T+GmZJdz6unRlNNO/JeXePnJ7bCl3XCG3347yPDf5/dpT3n+i
XB97et4CP96A8+MNeAQ33oCnceMN+DZuvAEvw4032j833oCHvzt7Yf+dYN06
JcLvc+MNeEduvAEfxY034Px4A86PNzhn4AjnD4F34vwh8GJf1h8Cd+D8IXAD
zh8Ct+D8IfDrnD8E7sj5Q+AS5w/puRBK1h8Cd+b8IfAozh8CP8D5Q+DLOH8I
PI3zh3DOAD+/A+fnd+BzuPkd+CRufgduz83vwE25+R34HW5+By5y8zvwm9z8
DjzflJ3fgftw8zvwP/+x8zvwQdz8Dpyf34Hz8zucMxDNxavAi3LYeBV4fjAb
rwKfxsWrwJ25eBV4Qy5eBe7FxavUTi5eBa7i4lXgxly8CnwCF68CN+fiVeBn
uHgV+D4uXgV+jYtX4ZyBXVz+BfwGl38BV3P5F/CpXP4FfCGXfwHvz+VfwD93
YPMv4J/msvkXPV+CbU/PT/Di8i963oKCzb+AV+byL+B3uPwL+HEu/wLemsu/
4JwBvj4D3IurwwAvw9VbgN+qw9ZVgNty9RPgg7g6CfDjXD0E+FquvgH8JFff
AD6Aq2MA9+fqFcB9uLoEcL7+ALwWV2cAXomrJ0B/wwbJ6w+0DobYOhitdyG2
3kXrWoita9H6FWLrV7ROhdg6Fa1HISeujgT8H3UnxNWdEHC2jkTrRYitF9G6
EGLrQrT+g9j6D63zILbOQ+uf0hDTkw/DPN5QPXH+ayVFNW1iKB+3WtzWWgqq
nvsxUjZu62l/F9ZS5VVDJj0+oBu3j/929NFa8uq/80T+Td24DdcWMmyk0ORL
zyqjz1RPbT6YYCPl2X5JiH77m+qptbPURjqRzOoJ9qv8DPaOGmxKx+1xYv/Z
rQvNps5MpHpOIvYXP3cUVkTZUz3B/l9o+awDcTOonmD/4EibBzv+6PQMI/b7
3El+PNZCpye+L3NJ8XKZJPe3+P2OudTz/bDCTJm/nfjXnhQL6Xeis6KlzN8+
0j6AipL1rzYf0k7r/K3WTmtLKelMq519snX+VmtngKX0c+uJJjVSplJ/q7Xn
qqU09NGlGgqLhdQPdCb1ugm7WT+wnti/veaxnvO7rqV6kvcmUu1J/ynt37XQ
rVsj9p8Wl+dmZOylej4k9h+Qxl7vscqC+gGw36/b1DpfOur8wCNif+9M/5r/
yfxAGLG/3ouPtefI/AB+XuUll3kJ7eTxA34uxlLtKKu3U2TxA7bfWHrQ//aL
dFn8gO03kWY3tvB6MkMXP2D7K0iZRSts3m3QxQ/43ANTacnd/RvCLj+iOuP8
2lTq4RL8a5bHG6pzHVKv2zGfndfqEPtDvnTsUnVfMdV5PbF/Q1enKhZSLNUZ
7M9M6H1kVVo9Oq9NIPZXSLh4HBmHUZ3B/sfbmnm3H6Wb1zoS+6dEP9/0WTav
HSX2t9i0/dMS2byGf0dlpKFLxBbyeLiu1v6ykmF9n/byeBjbbyCVU0eXC5XF
w9h+A8n0obDui5MuHsb2G0p2/Vv3WtFTFw9j+42kG01vq40Tm9J4GOtfTnKu
4rXl8D3dd2GOkXpdo3lsnHaM2D8n65TtjkneNE6rQ+yf1XWzw0G7Qqoz2B/W
1PBLyNFVVOffxP5CA6l+4lpdnAb231grFH66rovTHhD77QPb9Zgpi9M6EPtP
p4RtlMdp+Pye7+KvBl085PndOG3/P0SbpMDU9rL8rr22n1/i7c29n7jL8rua
2vv6LXq43P5+IV2X3/3A6yXEu54HHZe91OV3mVo7S0WDPbbT/MzGUp2x/gqp
dcYUdfvus6jOHUm9znQfm3esIvbvb+szvVdeKNV5DLF/+IlFEdXau9G8ox2x
/05qqPOrRk+ozvbE/pJfzi9nuenyjm/E/ml9Zm/9Ics77hD79zw94bJIlnfc
J/af69O9tzzvGK215614oMmeBHn9oZr2uh/E+r8XB8rrDze1/XwWm71f2fmY
rP6A9S8Qp3do2WpfY139oYa2ny/i9Pnp5/Z01dUfvuN1QeKXCz27DX+4Srdu
kNizeHhQOzvnQ1Q3W2JPXLsN86t5BlDd/iP21HyeHza8TmWaFyNiT6W4r3dn
/6fLi+2JPTemTes9WJYXFxN7Om1cPLGDLC/O0PZfJO69dL+DPC+eqv0dpYjz
ltoy9a41+LwOMSp9Zri83tVca0+G6Lpq8sdLsnpXDDkPpK7zPvGirN5VXmvn
E/G/VV0HWFTW1bvctf28EGt4tjt6+ckmqpszsWd6yZE3R+afpbpNJ/bMGeR9
pCg/hOrmSOyp+TWx0bSRurpNJLHnkltK3l5Z3UZB7CnzyX+rKKvbOBN7GpkU
SPK6zXu8vk6cX6npXnndxkT7N1fwtJVzO8kX9yNMNZb3YyvhF2lPBNuP8uta
SpnYTqEtY6exNBbfl/Dwi/y+8gVLct1HFXPty3U9TvXxI9fdenaS93SVTh8v
ct2fjP6W6DG57nrmedmiyeS6b5jna4dMtQdPXRauX5WPB3s0DB9IJSxZZsvU
A7PxeBMmX5SPNzuyzrlQuB4hH5+2UlM8noUyzHi2lHri8S+s2S4f/8bSO/x7
ER48k/9eFJIz/n0JIczvK1/IJfak9Fp1une7LVQ3Y2LPhOo5AddvjqG6NSP2
xDO/d0vUm9jznvEPtugTsSeb8Sd2yJ3Y84zxP/ZoCfYPwqumcn9lLz3D/g1N
6C33b3ZSDvaHQvYTuT+0lbD9JULf3nL/aUn0/C30YfytsdQL+2fBn/HPCikY
+3PBlvHn+SI+9+i74Mf6f4VI6mwNuHpgNrE/7DYzv6BcYv/t3fL5yBiZEPs/
MfOXJWpO7N/MzHe2qA+xf3KMfH60Q7OI/XZH5POpPdpK7M9pKJ9/7SV8blI5
5HdcPl/bSficPyPUeap8freVgnA8gG6skccDlpKh9q8hasjED8YSPhfQANkw
8YZCaoTjE2TDxCf54hkczyBDNp5RdCd1tlSuHtid2N+zMhMvoWxifwgTXxkj
sL8pE49ZIiNi/0ImfrNFUcT+A0y8Z4caE/uvM/GhPUol9h8NlceTUN82RWMj
5fGnndQNx6tocJQ8XrUlfqMCqsvEt5ZEfxO0dKc8HjYm+pugIUz8rJCw/cbo
dhd5vJ0vYv3Lo4psfK5IJXW2TVw9MJXYP6stE/+j7sR+RyZfMEZg/0Mmv7BE
04j9OUw+Ykv0N0ETB8jzFzsUTew/yuQ79kT/8sh9vjw/spcicT6FZj6X51N2
0lOcf2nslOdfpB5obYlu+cjzNUuif0X0WpTnd8ZEfwtkyOSDsJ/CAsVOlOeP
+SLW3xyV1mDyTUUjUmd7z9UDwX7Xh0w+i54R+08y+S+pB2rs38vky5YI7J/F
5Ne2RH8L1PWwPB+3Q+WI/eYf5Pm7PdHfHPXIlef7pB6YYIM+PMj9GDhSV6eK
wHUD5JghrxvYYv0/WqP/IuR1BkupAa5LoIlMXcJYmoLrGMiVqWNAfdsKXYuV
1z3yRe0+uBArtHkgUych7xGs0Ep99UCN/dk2TB0GRRL7nZm6jTEC+wcwdR5L
BPYPZOpCtmgqsf8JU0eC+rYVqt1MXnci698SbCRWT3vUifD1D1lO7ldKMpPX
tfLFfBKnVR769HbN7BQ6f2XqjSfzBew3csXvQ9j2v8l+CgumH8hD84TN5Hx4
sF9B9GfrbPbIgPDuZiwn94X4+wL9uPVXEowjti6qUMD5e+eZ80IVCjhXMJXh
UM9MV2ay75EVwBeQ7wuwPFu5kOOHSf8Sd104328Ecx4m/JNS+X6iID7n+oHz
LUcx/WieI8lfKveWx2/5YiDJs4YyeVY+Pfcynn3/S+wvFntzccsz0v9NNj5U
nCH9RDHPXaGA/rdxfA/hBzgukvs9xz2X+SQO7MbZ/5jEqyW92PuF98ibufu6
Qvhq7rrHSZzGrmNRKKCfDVx7OE/yBTknEx5gIXm+45j8C+pmL4SNTN6RT8/J
7LLubHjrxWcodyb5wugpWze0+kZ/j2J7knckOOwa8CwhlcYzCeS6wcx18+n5
me3Z/gV7ku9MWjp767kRJ2k/tUkcfmNaIw9re10cBfdbxTi+5pHMnZSPJ8/l
ScvQkaVPEil/T+L8sB3du47eupdynG+mCOPY+xImkPuK4e6rO8k3dxDdmO+M
a/zbngm3FlytF+3KfJdcw9sZttz9pcXDtsz3xzXcJ+fpb5NwO/o9UODVfm7c
22vgEA/m++Mafsx3st/8SH/6PVDaT8RBKTu/Bf0eKHBHsyr/ZQ+Fdenkn4bP
L97mWWODNf0eKPCjl9SKX6cd6fdAgW94e69qmK+Bmvn+uIabrXDuk5K6g36n
Evj1uZ5fKlc3UDHfH9fwRemtHl92dFQy3x/XcCvvVjdHfrLyYL/bbiEZbf7k
4Nqgshv7nXcLacXVgRNPrRnown7P3UKqUVBxSvCqTayeGp79svDMtY+PWT01
vOqSl7GWOTmsnhrueKBj9qrKh1k9Ndws2vbatgpqbj2zhRR2+cX8ahXCWT01
fJ7R1Gpfknazemr4sBu3k0NTF7F6avi7x189fbxqqxk9NRxtSzufvnwRq+ff
8wpCVze93ng3q6eGp43u2jx7WpgH+z13C2nE3Eb9Qw8o3VmdTSSbvk/Uh6Pn
cTqbSAuqnOvuvUDidDaRzP3T2lav9ofT2US6k7BopvPIdkpWZxOp0H57h/oj
OqtYnU2kAykjU1dZ2apZnU2k8AzP0E3+OzmdTaT8oStO3Cwt4nQ2kUp7/5l5
rau5wOpsItWaNSqmYV4ep7OJ1D8/r6CMwVJOZxNp1c4GDtbxeZzOmusOyZwU
vc1MxepsIg3NWWH/WFXE6WwiTR5e8uPzonhOZ0Opdnj+t9JfVzmdDaWFxe1z
3X+Yu7I6G0obHTxiNgd28WB1NpQa9R1Tb3LUek5nQ6nzmhejrRpu4nQ2lO5s
bfWng3Ikp7Oh1D1pYIUa2ws4nQ2ldzdedx/1x1NgdTaU6tokWojb/DidDaXn
Tcc/O3LTWWB1NpT+DPHLOVTlLqezobS2TI2gzDBnNauzoVTzYvCnoWX8OJ0N
pbnvCyo26OapZHU2lBLGrxrZOCOf07lE9Cl8sH5XozLurM4l4o8bwuAm1z05
nUvExGFt+/WeuYjTuUQ8u7XPHvHpRU7nEnH+06GT53re4HQuEfMDapSkV47m
dC4RW/V0jGzeqSGdr4F77dxmZz1uDqezhi8NMXHYGM7pXCJmH/96IGzeRE7n
EjGtzcsaca4mAqtziejqGT35QeOJnM4lYovdcadaNgvndC4RM7eaO7dfOJvT
uUSMLqiTX8ulAeefC8U+f1r/ietSj9O5UCx7f+6SDDSG07lQdOh9QZ2/Yyen
c6EY+rq+Yd/przmdC8WT95Wxg4LyOZ0Lxbt1NsxNtjnD6azpJ2hz1sDGXTid
C8Xhw86eiEzcyulcKObWu5sx/cIxTudC8T/B2HrYq3WczoViyDTzJgsHNuV0
LhQ3HUm8unjlOk7nQvH7nJTrW7sf43QuFA/uMKqbuzeW07lQnFT0o9+a7505
nXPFmhmVmo7t78bpnCvu77DOcYjHfE7nXLFKmY3Pq1w7xemcKwa2cjzY81YJ
p3OuOKne2I7nYozUrM4aHuBnmpaewemcK66t8idqvtMITudcMVw1NPDCgmOc
zrnimGERaw6mXeN0zhUjjVY65nZJ4HTOFYNVDaqe3dae0zlXzM8+vHWdRQKn
c66olL7ZJwy+yumcK27cuCki585RTudcMX3/vEU7xwzndFYoDIZEV70515Pz
J7mCpV79FYprc4b1XT17mSv3XITvep+LQrGr4893v+5e8OCel1BB7/PSZHI7
vpysmVRexT1HYbbe56hQLOrm0KlzrKWae75CkN7nq1CMqyY0Pj0gi3/uwlS9
z12h2B337ohZwASBGw/COr3jQaGotaNxf/XPs/w4ESL1jhOFYl7X55/uFd3l
xolCMedz0qfazof58SNE6x0/CkWlnf6+F3b48ONKmKV3XCkUFS+mzvN7kMjN
U7lCsd7xptE5zNPm3sK7XJyQK7TXOw41/64UHPpSkMrFabnCKr3jU6Hou+Px
7tau47m4IlcQ9Y7bQqGdfj8sWOv3w4K1fj8szNPvh4VD+v2wcE2/HxaC9Pth
obd+Pyxk6ffDQqp+PyxM1++HhTX6/bDwTr8fFjbo98OCr14/XCL01h9XCE/1
xxVCkv64QrioP64QxumPK4Ri/XGF0Ex/XCH8I64QOuqPK4Rn+uMK4bL+uEJA
+uMKoZ7+uEJ4qD+uEGL1xhWGaLj+OBld1R8no3j9cTKaoT9ORn31x8nok/44
GQ3XHycjw5t642TUXn+cjH7oj5NRxaF642R0QH+cjJrpj5PRUv1xMkrUGyeb
oLH68z50WH/eh0bqz/tQjv68D7nX0Jv3oTv68z6Uoj/vQ9WG6c37kEsfvXkf
8taf96EQ/XkfStGf9yHPoXrzPhSrP+9DCXrzPgvkrb+Oge7rr2OgUfrrGKhV
rt46BvLVX8dAy/XXMVAX/XUMlKq/joFS9Ncx0Br9dQxklqW3joH89dcxULb+
OgYq0l/HQKf11TFCrFAxqb9xdTbN89JbZ0Nz9dfZULH+OhsK1V9nQ0P119nQ
Gf11NmRwWW+dDd3RX2dDnfTX2ZDZPL11NpShv86GupE6G6Onho+4Ex/dof4Z
N8+okXkpAVXgfqVb1U+1yVpv576i+aXrAVm6+mSdhYvyX/cf4hG9useYv+sp
gaf3sUhZGOGvrHPatvWJAAPKy8wN+lNRo5uv9rykQlqfVEZLU6podHOeVnC1
qXca5TvOuiepw63Vp1ff3xzuUAbslMJCK5qNHmCgbjXE6kY97wqUF8546z7x
2w6Vr/Y8FCvKB77w+xodWk5lGXKhqoO3rg75Zvm7hYvPd1BefzO8dUBWNco/
VCwcuq7JKI/lvUp8UgKoPtLUMtvqzA8zccfrnok+CgspnpwXinWzoXzqo48z
x7167GExZNXmrBRzytcGbd/u9CRHiXUzpLy96525T80Oq9pNbzRmclYxrTfe
fuDc2buMWu3T8VZJQ+87lDtJF+8VGIarz2j1MUHAjTbNXhwfX0e9OXFFXriD
FeUXTS8/HP5ygwqfX1mJcgsT7/LGLq+VVlp9qlFu3LTWpBdnTIk+NSkvG51y
9ueCQvcSsv4bcxOpDznPc6l2nFhQrqqW8mOSR2cV1sGI8sDvMeUXfrFRO1XZ
fn2Dww9a9ysebHQ+4e95ZRm7ok8FZFFu712h3vFnRepnHd9f77wB1tubSIsU
SxJrWdmoY7T3W4nyZLuXgseZQBU+R7Iq5eOyhJUtGm0i91uT8hM/VvUznxLi
8Ut7XxWJnYZSY3J+Jr6vcpT/HtXdLS51hNpeO85/0Xra2MDec0rrFaj9mqs3
16ffszOUJtxYEOAzw1PA9sO+AEPpieP2369Mc1TY/qqUG6b9nmpyoRyxvwbl
wmfn+xVz84md5Yk9JeJycv5kBa3Of2jdqc39pMq/YhwEZ+24yqN8V/6i1IvT
ZgrPtfbAfoQSMfNRwOZF24YRe2pQvi6z0491Mzsp8brJUlpvkch5jDZaHd5T
PiAzrtLNXhtI//CetFCst7jJ0z5hy5T4ve9nWk9QkvMGa2v9ki7vPlF6/tu0
Wc7u/lo/VoVy89jnyqr3kj3wOVC6vPii66Yk75fflQ+11zWjfItNtymHp5VR
j9D2Y0B5nmHRlOgz19WZ2vaFNJ81rzdyZb0rgwTnKoda1wO/pOFtLLdkZxw7
LOD1W7B/JFeoT87DmZvh3noD+CsN/9Rrndu6a0eEL1q/XYHyyovbSSdWhQjO
7g99qL/S8Nz69c84ptkL+dr2urwy+3Nr8zePFqjxuavVKE+aMbbNl4U7VeO0
96XLE9Fld7vCgjXKWlo9QbdCIWPIA/fMt+s8Rmnb21DuaDXZpc3MO0p8Tpw5
5S3sc0NOv3qkwnoaUn6wbZlx4b13qS9o/UMxzfu2DF/fymi/s+Cr1e0O5cGH
vrxoNXiFgM+lhf01hUJTci4f1s2E8ljHM6Xz3ywWZmu5FeXFb14URrWuI7TR
6laJ8v88xpj7hy5WF2h1q0b5rKDBu/LH71Fh3WpSbuvp/Ov08HCiD+hQIowP
32cy3TlCeVl7XxaUd5i48r+wzzGqnlp9jCiffODZF1WrMeojWj/8g+ZlBR2T
K347X6Q227nkRjL1YyXCpn2fl7ad3o3oAPuJSoRfk/C5eWfHba3qTf1biXDc
O9Apqnc5okMlypNO+aVfrDBOjXWoSrnRgeTS7WPWqfD4qUl5avzWcr3CgpXq
01vGyPwbeumeduiAv6fqivZ+y1F+1v7jWrGCpTpOey4h9W/oZLkzPYOXx6lH
ap8v9W9oanbqlt89ywj4fGew3xBdIOfU4fuifg+htGOdniqc1fi+qN9DlnmL
vHt2HajC90X9HqoZdbVKucvtif3g90zQudYvC87e3K4Kyzg/5jH1eybo9s/e
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
11vvQr76613IXX+9Cznpr3ehifrrXShFf70LndVf70LL9Ne70P2eeutdyEV/
vQtdKtBb70K1kpg6IeVjSJ0Q7+/VvWfv+aieX+w4Fw+831JXJ2ywN3DBbclL
SfbfUj4yx/3d0OKqKrxvVveefa6T0cSho46o8DkIuvfsRzp9Ml3X31T9UHtf
uvfsFhv9KmxWNlJ3IPvVga+v4BWycO0R1Vpte917dlWEy6NzPWqo8DlNuvfs
9yeY3TUcMUyJz+vR1QMHN3va70P7xR54H6buPfusC56/LKsEuWu7kb1n9xHX
G+ysd9UV7+vTvU9v97VJVPmsi0q8n1n3Pr3mBYerVtejVFgf3fv0CXs73uiQ
7aSWyL5B4OXT6934WHGlOkVrp+59+p7xSWlT6+0hOujep9/adKLTwXu7VF5k
Xy7wnsmD12ytpyA66N6nFx+Ky3/QpLESjzfd+3T70/fef75QzUN7W7L36Z3n
/5x/v+FtN7xfUffe/I6F/ezeESUqvP9Z997cp+LliAFzItX4vBLde/OATpv7
21fLVxue0HZE+Z5dSRcPXTQX8PlQuvfm4/v6nkQuK8h96d6b+02s9fH9i2Ql
PkdJ99580cXsOn4zdnng34XuvXn7Hvs2vX070B3vSyxH7DSUpj4siV7fJked
p71h3fvxWXP693mwSyns1fajez8ec/JKQlicHzmHS/d+vO7+56aDA+ur8DlH
uvfj+8d0amBsUVmJ9de9H3d9G/YuLf6a+xwt170Hd334vUEjFCjcJPs8gW9o
/FPaODWMXFf3Hnz0jh67WyRMVmJ9dO/Bry/btzwjpK4Hbq97r32n76EJS66N
8HjK5e/3Sf5+isu7W5C8eyOXX/9pgPO+HC6Pbk7yx2guX44k+fI2Li/+T54X
h7xNBb6I7OddyuW/1iT/XcPluWtInnuPy2dDyplq7VnP5a2KMGz/MS4/VYT8
p73fB1weqlBYfvurD15WUEvGFVP/5pvP5H5Sk2eFxb7unvz4rvK03E9qeHOj
lO/+Pi9VjeV+UsOtf48b1t8oRZ0j95Ma7nSi/YzIRd2ElnI/qeGGkbWPb768
S/gu95Ma/iItX+rb+5rQXu4nNbzLpva/bw4IIrrp3u877jg3u1jdVJgg95N/
1/kvGGpz/1skmY90+abvBA9h8NA01VG5n9TwdNcq4QdfHVU+lvtJDb/td9R9
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
k6NwvogcsUkcZT71X5wvIv7FMTfsskzhc91U51OsjyTa9dcPEesggflr8fZr
cK6kevEc0B+N8kBJLwbXN/XfKTA4W17thfCZ6sXwvkrh0cV5Ed37/oL3iWAC
+tpTfjjwlJCvOXsXjc8KqsIDnTLjeqJzFivkgf7ylDcW/OjqMnBKDbovK/gV
hfqMzjjQjDfeA30qZbzRJzQne4z0HSjljW433VJ3lixD81EIpxwbgv016/V9
SCX7m4fyPp6UTyaEBQQEfbTFOCZ42zvNHOb6Bs1TIczvH1Z/Z/JO9BwpUJ90
yid79VeWDD/uhOav4c2SqnZF5Mfhcyt/w9MhdcbXqWj+Gj64ojhpbsFWFE81
fAboD0t5ZqWnh29W/NpmPPP0fCvrC5ajED5r+BeT9s8Kf4RxT8Mr0kcecbCa
hvBBg/qSU55pcflO8preP6P1qvnbDs6mq8cJaL1q3uxNp6o3lrfQetX8M88z
iz/FHkHrVfNZhdamvU5LfJjmr7JRn3HJHtTmWLGN9W/N+Kftq6npD2q9kB/U
/IrvfTsWtuyCeIKaX2DyxawlN3YgP6j5tcYRq5xk/XYlO+ozLs5TxVukWZ4Y
N34n8o+KbzNtmsPf5feRf1R8Y8Rr56m2T5F/VPyCPs51k78/hfyj4seOvjWi
tdoO+UfF5wdl1uWsicD5Lv4j6PNI+efrI0maTu7WyA8qfmiXIfcc5X3DRbtL
bEFRrqy/s2TvNTszVd7fWbLjvuGinZtq/Dm7mlu5hJ1NArzxvuKMo+R+pvko
b9C3mvKr+Re6+/zlOh0/j9z2ZVtVVjN2NcsjPQP7nPKul0mtLjzxCWzGu4KW
B7UYOH4pfr5QH2fKx6yPzhpuz3bF+EbWDV4SPULlhvGN1CTUPckNdMf4RoQ2
cvyhPG3Sb73/Y+U+uRlPS+wTcPGgzZBmPM2za2Pxn04YB3AfZMrfXM5PaRdV
dAPHC2Jz7GOD2xkjHC9I9R+rtjgWmKD5syT25kSjV5aPsL5AhDR5XKC8LpJE
L4ktrcfxhXRnK4+a/fK4Ga/bMOxGSt2BULQulgxptels63X1kA806ztM+V6H
3TGp039bguMvUXb2CPgmKQXxZ+31mR6XO1VkIb6qJJu7Hy0b9HgLWq+SXFx+
fUnkHknfofko4g36COt54LgXExf9MyiiGQ/s6poUtuVHX+QHJbkUsGvX0Kqv
kB+U5KpLK3547h7kByW5ZehwbYSsL7Bkh32BKT+cFh21eW/OMOiHJv727tWE
gS3HQD80vTdYmXlupH1r6Aet/Vr1ofzBtZHN+OG2YdueVweWYT2RVII+v5Q3
VlaHzuFed2rGG29vSLYO9JT4IeWN12bvOZ5XergZb5w19gfbdSmGzXhjw/NH
9gdk/Xwl+28p3qa0ny/VW7sAO9Vb94FxqN5qCO5L9dYsME+qt74D66J6q/I1
8AMj2YvE7/qRf4SxwM9Uh60HvwvVYQvA70h12Fvgd6c6rFXMZ/aJlpcGgP1G
9VYPsD+p3loI9jPVW13A/qd66yb4vDCSfbZYLwKst0lvBc8j1WHb9pA/v1SH
/R0871SHnWUsxweqw9qGy/GE6q2XFHJconrrWoBjVG/1BrhH9dYSiJOMZH8p
1iGB62KFnQCHqQ7r+UCO21SHrQA4T3XY33PlcYHqrbNBfKF6aw2IR1RvDYXx
i5HsGWK9GjhPhaBMlMdHqsOamcvjKdVhvz0mj79Ub80EcZzqrcbJIO4zkt1Q
rFME76vl/15yXkF12IMX5TyE6q3hkK8ykj1brL8Hx1HzBZ5yXkTzeLOX//XI
oT4S8QqGyRj9/kyA6xMUlxlmQ8jS/Gu1L1FcZpgn09L8GmuzmuXxlj0dumZq
TwfEMxnGP2eAsHQRzusyTAS4nubf7KfLx6f5N9NQ+Xxo/u25tXz+NP/mvOJz
61Vxixzl/JPqy16H5HyV6stxJnJ+S/XlZMCHpT8Vd1f8LhWuV8UdATyc6sIG
feW8nerClZFynk914afgXEB14QPp8nME1X9PdJafR6j+W2wsP79Q/bc/OO9Q
/dcKnI+o/hv2+f3J5YnfaUI/qLkOt+TnNar/nl8qP99R/bdvjfw8SPXfiIny
8yPVf+ddkZ83qc7rliY/t1KddxM451KdNwqci6nOew2eoxnJ/iV43qnO2wjO
6VTnLV0qP9dTnXdXsjwPQHXerwfI8wZUz60wlecfqJ7bHuQrqJ7rAvMbjGTP
/jx+kuWz5fkTqufGFsrzLVTPjV8tz89Q3bbxT3meh+q2e2BeiJHsD0E8orqt
8rY870R1208gT0X12Q0w38VI9iEgvlN9duEleT5N/NPyt0zAi/T5PeFqe5Cv
E++rPaeDczTVKa72FIzsCM+hcYgPGEf6U/EPAJ5QHeQuGIf+bRHfA0Tz4Qzm
y+dD34eZ3OeJx9KBwViH4v7JmHbyesImnB/gnnfQvdcN7Wrurc21vV8sjmum
Z8387PgMc2CO56DSFtu4/wGj4m/y
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
+X3mGkGx98rgeKI85J/B8Ud5y93B8V+5wbnBsU65zYnMdYfGm2ox1WTqX83N
HOs0HtRjUu6tHFw9LPUNNMbaKv9OPJZ+y9wT+P8xX+C6QK9Xrq46TDVmJY61
ifNV1QWqETYpXgT3mjQOr+HonzhPa4B3JB7bv2fuP2h+NQuuJRUr1CdVv1T1
88XBMV95yEXBsV1r9yXB8Vnr+2XBa4Hyscs17hPncm9k7j8oFl2gnDtxLvFT
5ppL8/fPyv8Sz0c1fJolnr9/ZO51aF43D65NFB/KcCxMnF9dGrzuKK+4K3j9
1Vy4M3j9VW52S/BapvwqBPdeFBN2Z+51KCa/n7kHohi7LXMNrth4OMtrK/xq
5v6G4ufLmdcpxd4NmXu/imkP8vmzEtdK73G9VOI4vxifnXjuNwnuS2u9+Gtw
j0ixcSuvKZY4hq/HlyeOgS/ifyeOA7tw8cRx9c3MfR6tHZ9lea2nnDxzn0dx
+BB+IHGMPZC5DlWN83HmelBxbB8uk3jd+TZzbas8ZFXmPEoxaknm9Vpx6aPM
fQmtQfsz1+CKXapV1edZzfm64PxKefgNwTmVctfi0T3EfhqT0b28Hnpe0T3N
YXqO0b3O4fiq4LVbtUCR4BxMOfzVwTmYcvXbo3uvQ3BRjlGJc/6bg3OtrfmY
VGxRzVI6uoc7mGulonu+g3DJ6H7uQHxPdB95lPLP4H6gcvgy0T3WkYpL0X3V
Afim6J5pf3xjdM+0Ly4R3Vd9RteD80zVGsU5JiWuZW6I7sP2wdcH54rKq6+N
7nv2VDyM7nU+r/Ec3TN9Tn9jdF/1Wb0Xq6HZC18X3fd8WjEqug8+QvdDOVbi
Nev84HxMeX55xeLE9cjMzL1i/d6ywT151b8zMvda9bwmZO4Jd1Sczty/VUx+
InhfRjXp1HzMd9Pfnblv3AlvwSUT9/2mZO4Ja315JXOvWPd2UuZedGc8OXMv
uouedXDPU/2Hx4L3fZS3tAzeZ1Guol6G4qrug/YINB5fVC4cvAehHkKZ/P6r
tzAvcz9f979V8J7UvDwOK06qbm0fvF+jmr118F6VcqTHg/duVNfPyrwXoHve
IXgfSrV/u+C9FdX4R/M+pOqaUsG9U/U6jmTumav2eSfzfpNqtzrBeyjKz2sH
75uort+Rea9K+z7bM+9nqa+4M/N+lvqQ7+LyiWvD0hyjE/crHgjeuxmdz33l
BqrX6gbv46j/sDfzPpfqqQ8z72eprtyVxwrVgG9n3iNT3ac1RWuQ6qziefxX
b6FEcF9afYmHg/eG1P/5lPfWSFz3PRS8r6ReUy28InG/Qj1b9b1V66nX3DDx
HkPj4D1E9UM+ybzHodqwYfA+o3omx7jePHFtWDN4j0m9iLWZ94CUM6zJvO+j
uLE5896c5vu6zHtDikUtgtdB1YxaZ7XuqJdVLeT7MpyXZt5j0nxclnn/RfN0
eeZ9KMWH+Zn3hhQTFmXex1GsWJzHec1f1UH/691WD/mejmJP5n0oxasamieJ
e27lgveJ1KO4P3j/SP2H+4L3m9RnqBi8x6R+woLMe1KKvcWC+/nq1RSO3hfR
XCsavTejOXtl9D6K5niR6P0VzcGrovdONJe/yPJ+I5+zJ/OegmqWlbho4ri6
KfM+keJPleB9PfUJV2TeU1O8rRq85zgxX/u0xin+Vw7ef1SfcGHmPS/F0v8D
JWUVBQ==
            "]], Polygon3DBox[CompressedData["
1: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
cnrut+8vI+/SE+pt7cH0is4x55pzxl7FmmRtcs7ay+hx9brOaXsf67/aqEau
T+Fh9dquAb2tNc5aZwZlb6Tn1Tu7JvXCrinXlpmc/sHv6Hf1HpnFeM+8d9Yw
vaf3yHvlPTWLUXOshdZEtUgNO62ImqC2qWGnF1FD1TbvqffWe2rv7TPwWfgM
zHrsKe0tfQb21q4ZewnXgGvJNWvv4BxxLbum7R3McFzrejCzJD2u3kyPZlZ6
YSW8m57U7OyySnhV+xmzOD3Holp4VLOzNpXwrno4s1Q9st5Oj2v2pefR++qB
zer0MHpjPZ7ZpZ5R76fnsTfXs+qFfuvZi/C0eqXfMoYi5oje5gbXcBEZ0QF8
n+vh2UVknPulWLOuXdeU2Y6ex2xCT6sX0kOZTeiB9VZ6KLMOPbDeSo9mr61n
1rvZA5hFWBOtjWqoWqoGm32pwWqxmmSWoyapTWqy2YoaoVa45u0t1Ry1R82x
N7bGnFGEp7L23MbvfqqER/s2hV9dWoaH+1c1NEPtUHPsTb9Q53j9dSU8yHf8
7sdK+NUvUmiS2mQGZa+tBqlFapi9rxqlVqlR9sZ6HL2OHsjeS81T+9RMey09
j95HT2SvpmaqnWqu2YCeSm+lJ9Yb2/OZTVgj7QX1VHorPZe9nBqkFpmh2Lur
eWqfGYHZgz2V2aWe2V7rmxT3Rh9rL+c9MX/V03uvrLHWWntYswY1SC1SI81y
1VC1VI0yO1Jz1V411ixGDVVL9UR6a3tke2VrsNmENdXaak01e1Rj1Vprrtmd
NdparcaaPXycotcwQ/9nNTIBs4Ef8vO0p/BZ+cy2TOEhfY4+z6/gL1O8/sZn
zOvjrUOujUr0KGq62m4maT9rzbP2WfPMZqx51j5rgNmMeaLnfm5N4/Vor6kS
PYv6qIfRy+jZ7PXtic2K7VHslfXgenE9q72wmajZ6ORK7D2YQZpFquFmuWb2
7iW4x2GWb+bmXoeZvVmcGd6qrL9me2aaZpuTKrF3MSg/j+2zfnbNej0j65ke
9tD8vMyCbrLmZb07JEXNsfaYGZq9WVPcSzEDttaYyT2X559ZnRmzewXuCZg9
d8r1x3qhdzKzXprrkXtDN2Z9VW+tzd3yfJ6f65UZtXsL1kCz6/vy8/J5mIXY
4zTI9cNe1B7GXsaeyd5XjevN6xvK0L794XtcW3DHutC8XvD1ZWjh7t5j3xtu
D+/mPYbbwVfB+zoHXHvwdfCucFefNdyuLjTD+diqjLx1nxT567XwtXXRL7rf
0wHuAO/hM4bbw1fXRQ/XMNc/vf2wXP+sd/ZC9oBNcj20d++b9WJN1id7mD1y
vbWe6qE35Pmtt7bHNst/N+vLnt5zXl/N519TFx5dr16X168Z+PqsR5elyHTN
dlfDF6bIwM3CzYAvSJGRmJU3rER2Ysbo3ogZhdmjHti9mXaV8MZmku7lmHGY
Vep59b7eI++VGYx7KWY2ZjN6Wr2tHkgvZIbg3o+ZidmCGY57Y2YAZjtmNO7t
mema3ZjRuFfXuBLZzW97eEVkRGYx9oz2jvYoZkf2lPaW9pRmS3pwvbge3t7D
Hsteyx7K7MGeyd7JHtte257K3sqeyuzJTMi9v1MqkRXZA9kLuednNmRG5t6Q
GZHZmZ7cXqdvJby6Hl4vb4a5c4o9NPfS1MctUuQ77jWacS+uxR7JK7l+NU+x
p+PejnsoLVLsqazN9VD/Zl5jNm4GsKQWmb699spcX9zzce/HDN+9KTMCswIz
gq1T9Oz27vYo26fIDMwO7IG2TbGn696umV4txZ6ve79mfhun6GnsbexZdkzh
0e3l+mV9cI/ZvWYzx5RiT9i9YTPEIkWm697z1ZXIet0zde/UzHDzFHvO7j2b
GW6aoqd+M38/s1gzjHV5PZnFmhE0L6InNzsYmaKfv7SI/nxEirnlHDNP8R6p
hSPKuHfu0VyV/Y97N95ztXxIGc/CPRv9YptK+DN7QnvDQVkvz4XvLMJPfq2+
pZgrzhnzkCWuQXgC3BaeCl9eiXM8d0qKc/0MP2tYiv38C4vIn4am2E+6oIj8
abieCr6oiHxpSIr86Jwi8pNGeb7Wz3rkORfk+WuWdV8KL65H16s/AB8In1lE
PmCmclkRGYhZi5lKmyLuqVnLqBRj/s4xr8Fr8ZrNvu5P4fX0/Hp/v4Pfxe9g
trYyhbedU4S+e81eu5mOWZB76u3y+nK9mbl0KsK/m8X0T5Gv6Sn1lifk9Vwv
67GZR7O8vs1CzGBaFJERmc2Y+dgP2B/odx9OMXedw/Zrj1jD4MlF1Iv+ea3q
aZqaaaZYy67plnXxzFvADcp4njNyvXnQz4Bn5vo01O8Az871ZDh8cdYC308P
5f76tBRrwzVyHuOrU9R6a7C1eHmKuecctD6tSPH3GzOLqF+PpcgjHiqiXqyC
h1Wip7C+2vM4384q4/rn5PoygvFL4MdT9BqziqifapJeZnAZWjUr199hjF8E
L02xXz21iHpcL9/Pm8u4XjM1/4DF/saszb9RaV9EpubfrtgT2/80y/r/aIr9
wylF1PPF2R+Mh6+oi0yuYxH33Kxuboo8ZiS/a8XYouwfxsGXwwuzfxjrGq2L
TPKtXA/1J8tS7L9PK6K+T09Ru6xh58MLsp8YowbURQ/pXGxcxvM5JM+XW8rw
ZgNSzD3npHPziRR/r2IPp39pkutdw1x/rNF6tVFl1O7zc/00I6qmmJOTcn2x
nqohaon3ZKcU1+S19YS3SuFpRuf6rNeZlOJ6nfPO/da5fnvPPk8xB52LPtNN
UsypGbl+Wt+dUzOz3umVnCPOFefwZinmiHPFOaj3GpxiLbvmXHt6DmvRyDK8
SMtcD9V756LPzGfnHPxDinvaK/sF77U1T+88qIxa6JxwbnjP9X7Ocee6z1Cv
5DP0WTon9W6u4cm5PukFnaPOVeeYXtI54dzwGW8Dj07x9z9qoFroHHIuOYe2
Y2xMilqhRqlVE1LMRee4c31QCq2xJlmb1AC1wDlVpvCA1voJZXjDsSnWgjXI
WqQGq8VqnNmtNcxaZg0zex7H8WdUYg25ltRQtdQ5pneemOLvFVwjrpUnU/QG
9gzOTzVILVKjNkqxplxbrpkdUqxp17aaVZfCU+pFJpbhNZ0z7k1dUsZcGpii
9qq5au9k36MSmq12/w9rnjq9
            "]], Polygon3DBox[CompressedData["
1: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
gk1mT8hnintZ7fS7j3PO/wEfhwzK
            "]], Polygon3DBox[{{1712, 861, 956, 2229, 1555, 1556}}]},
          Annotation[#, "Charting`Private`Tag$3950#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFmnW8VFXbhuccZs6aeejuLn0VBVFRAUEwQEDsLkAMDGwJE+wGMTBfu1sR
sFBSUkAEMbBQMQmVEOS77vfev9/3x+K5ZrFmz95rr3jue52Wg4cffl55Lpf7
hn8qEU+LXO6/+Vzuo5TLVS7kcpeU5XJ78Dngi+Hd4SrwpfCe8H1wQ747jliT
cjn1XamvAY+G94GHca1r4HwxlytRfxHcmfovKfupnlik/kJ4N3g1pQ9chVji
2n/Aqyk/8LkvsSqxOu1HwXvDtfQAlLV8LlB/LnEX6l+h1IEX8mAvw7Xh+fCr
cF34Y/gtuBH8BfwaXA9eCr8I14TnwC/pN+C5cDnXHwbvRF37Ui43BD6W5zuG
cgG8kZinzTlwB12P+6pLGc7nStSfTdyZ+q8ovXS/xEmUhvBKrr8K7g1XEPek
vw6He3DNCq6Rz/piE+VPyu+UzZS/KOsol3H97cRLiUdTlsJ3cJ1duc5V+n3i
+dSXwacRO/B5uu6HOJjPX8EP0H44vAo+jzgk4wep/5v4K+UXykzu6WNiG/rg
HNqsya7Th1KD++xV9L38S/mJsi+fK1PfjVifuI26HynzuG4PYpnGHKU7vJ1+
mAvvC+fUH3ynGt/pSdyt6O92JO5IaQov4V6Gcg9V4VV8dyNxA+XbLP5G+Yby
kMYlcQZt5sM94XLiBsqxcBPim5QG8AraTIYbw19Vcn9/T/mO8jz1zXVN6t+B
O8Lr4bfV13oX8FR4F3gt/IbGCvwz3J77vAs+jLoZlC7wFupfgFvoniu5P2fA
U3iu6RoHes/Un0T9XPgGtaXfm8D/VORyR1H/AXwV9e3g8fChcFt4HDwQ3gGe
AB+usQZfB/fWs8LXwr30TPCtcF+4GXwL3AduCd8O99O8KXgu99DYhsfAPeH6
8Fh4P/UB/CB8nPoAfkBzBO4A3w8foz6DH4KP17PAt8EHqz3vdDE8i2ffAa4O
/8Ez1uH916ZULfdYqJPx01ojaLOc/nlOaxP8JfwEnODF8JS8++pr+CmtNfAy
+Bmta/Bn8ONwBbwIfgwuwAvgZ+HK8OfwI3A5PBt+OO95NLOS18tK8Efwo3Be
4xpeBHeG/4b784wfwddRt5Cym+Yt9R/Du2vdgOfAO+l54Q/0/jR34NnwfzTf
4VnwjhrT8Ey9V81JuBbXvwLuRt27emcar9S/B7fS+gkvh/fRnISXwXvBW+FP
4b3hbfD7cGuttfA0uI3mKbwA7qR1Bz6c31oI30LdofB8+Ca4HzwHvhZeSjkQ
LhGXUA6Ai8RPKAfBQVxJOQSuQVxB6Q9X0xgu+VnOYgx8xucBcHXiGspJcHPi
95Rj4EbEzykD4ZrEnygnws2IP1JOgJsSv9C9wrWIP1NOhlsQf6WcCrciHs3v
DYb7M+568SzvwaOpX085A95BaxH178OX6/1n+875fN6f+mnEK6hfRzkdbk9c
SxkKtyP+QTkNbkscWfBafgHxiOR7aMlzl/F5JNyFNr9QTlE98fe895o2xO90
r3BD4reUo+AGxG8oR8L1ibcVvL4OIzahTISPor4vz3aH5hpxP8qN/N/z7PlV
iTfqOfTeqL8aPojYmPr74COpbwTfCx8Bd+M7nfi8hTYnwifDjbj/Q+GBcDV4
D7gVvIE2neA6emb4ALgnXIk21Yg3cc0DuOYlBfflxcSdaHc28b+03Yv4pvpK
8wN+Bj5NcwJ+Gh6i+QS/BJ8N7we/C4+Cd4afhYdq3sBPwYM1L+GX4XM03uFH
4BM1D+BJ8IWaK/Bb8EVwV3iy7k3zFX4FPlf9AE+BL9Fc0f3CJ8FN4ZvVh3nv
Vxoneh/aq8vhn4mt8x5vZ2lNpQyCry78/76lPWtLmffd9Vrrs/qc1lDafUK8
k2uMyb6ra/yWXVPXvqLgcXU5sUcxWzuJRWIq93euLDjHqKv1oOi6o5LvU/eo
ff1Y2iwjjqPNcfCn8HjN42yfuho+DF4A3wz3gWfqfuCD4dnwWI09eBY8Bj4C
XgTfCg+Cv4Tv19yFP4Pvho+Hl8N3aR7DK+AJmq/wF/BEjfeC85DbNFfgz+H7
4GvhK+Hria1LngeLGUv7F72XqR9qljt3VN6oXEp7/HfZ+9HzL8n6Xf3/S9b3
G7P+r1Tu+q/LnHv9lfVVK37rTD0bv9UWHqH7g0cRC+X+3DHvXPHegvMZ5XV/
J19P11WOpbVB9auz+1LOVy0bR2XZPat+a5nzEv3+5uyee2fPpnxPz1czG3u5
7HnFdbJ9VHlh7Ww/FXfPe+7fzb3dUHDdTcTaBa8b/fO+zy3Zs2/N7kP3tnvR
81fPMpr2h+l38v6+rqP5vCEbx8rJDuTza8TztT/Ar8LDtd7DU+HL4ObcV4ty
39O+eeced2lNy+oblzvfbEqpTmlFaV3u/u2Ut6a4s2Cd0qzcfV49eS/7ktgx
efz/mpyrqo3y1V2T7/8X4p7J+eFvxC6U4zReknWPfqsB5Z6C70H9dnvB+f5F
xPLkPfRTYqXkPX258vnkvXsFsSx5z11GTMn7+2fEdRXWHXPgtRXWI7P13YL7
Q++qdfbMDbJ7aZg9u9baO4kD8u6nJlkfiptn/dYnWcusJR5IOVPjjtg/Waes
Ix6SrGXWE5+nvAEXGddvhvNCre0vJK+ZQf3LyethVfi55HW7BD+ZvN5WwE8k
r9UF+KnktTTB7ySvFfXhd5NziQbwa/A7cHV4Nr97SLa/aJ+ZR/2NPOOLyWt1
ZeoD3hn+Qr+TvG5Xob5lsrb6kVg/Oef5Vu+R0lXziNggOUf6TnXSTRpr/GaN
5JztK2K95NzpG2LN5BxvFbFWci73NbFFsr77gdg8Weeu1junHKy1ldguWef+
RGyfrG3XELdVOO+dzO+/l5w3NuT+i8l54EpiLjmv+yQ5T1K+VEb7IfBl8DaN
pYLHhcb/6cl6+V+952SdnqP9Gck6fTtxULKu30r8Rzkk353Id0ck64jqtD8l
2RP4R2MkOf8vUH9Csq7fTDwp2SvYQhyZrEdq0GZUsvapCY9O1iO14COT58tf
ui/K3VqTqB+TrB3qwmOTNUU9+Npk7VAfviZZU9RRLgM/qjED3wQ/pn6Dx8HP
wU3g8RrHcFP4LvgFzXn4FvgJuDF8M/w43Ai+NFmbVIUvSdZHVeBzkvVOBXxx
slaqDG+usJ+wKFmbSXcshrdUWEt+rPWGcp7WzUy3as85nbixwtpzAfWbKuwJ
LIQPTfY0NhC3Vzi3X6o9usJ+xXz4zwp7GvPg9RX2OuThbKiwBzJXY6foXGMH
xnMpWWt8Tnw1WVe24/+fSdaSbeDh8PWav/B9yetzc/i8ZP1YhC9KznMCPjdZ
SyZ4YvLa3qJoL0J7o3TtmWFt9hb1jyav863gx+C34dbw/fDrcEt4crIebA8/
yffqa8xLl1H/IdxW+QzXXMz/zYJfT879ajBf3k7ON+rBVZP19Xu02Rvup+vA
H/K9PeBNXLNysq5/l/orwhrsfbi25ir10+C9knXKMvgCeIT2DrVPzp/XaQ9M
zuF/0/qRnN+uLzoPUU5yQNH52HX0x3PKi5P9gQ+oqwI3g9/Rs+T9u2u4t52S
/ZD5yqXh/TWW4N2T9dRSuHOy5loinyRZcy3W2A77Sovgr5V7qU+UGyd7Lwv0
HsP+11TlI8n9/Lbyf7gD/CHcKNnTmA53SPZPFsJXwjdoH9FvFex33UrcJ1m7
fUp972TN8mXRz69+KM/aay7sKo1VcL6j/Glgskb7jjaHJeug7+F9C56/Z9K+
e8Hz+gy4R8Fz+ay89weNpRFwl4Ln8iC954LXh1PgPQteH07Ne+/W/jihYC9P
Omu1/KVkP2oefHyydvsBHpCsQ7+VhkrWXJ/DPZP7diV8ULL2/FpaMlmjfQHv
n6xbv4K7Juvf5XC3ZA27Au6erFU/g4dqfdd+AZ+crCt/gk9N1qRr4H7Jmvcb
uC98PLxKuixZe/5YtD5bCd8r3UR9N60J8s+S/auZ8IPwk9oj4LuTNdFW+IFk
3bQdfiRZT5UzlifAD2svoP6hZC2Wo/6eZB20jfppyXt045J1vcbFEsbaR2E/
S5pROlS52+/ED5L9hCYla0DlYvISH07WfWXKDcL+kbTn9cl5zl/wm8navBZt
JiXr8drwG8laviY8NVmb1C3ZX5N+qQM/Dr8I5+Hp4fEkfSqdqtxjpDQ1be6B
/+a3bk3WwhuL1sH67jDa3J6slzdJZyfr7s1F59J6xpsL9tGkQaS95Xlpf9Fa
II+0Cm26F62F5Z/K072w4Hxfvq40hXJs5dojM00hbVEvm9fKV65LztX/LFp/
6x2dwP9vrbD/OaXo9VJrSCK2Sl4DZ2tNCntSWktbJ3uPc+A2yV7lR0X70tKP
exCbJHueM4rOl4L6fYgzkvVd85I9B+Wb0v7yhxvBvxTtnyu/+DTsg0jzjM3y
Z3nEdxR8rqCcdnzBnka9rF572Q9l9pOnJ/tRzUr2DKWbJxXtkWpfnRvWqDOy
PejDZK3alP8/t2BtJ6+7LLwfaM3PZR61+np5OB/apDkRPmNQrrV72FvR2v5w
2PdXTrU0nHvpvEN6ULmNcpwLw2cPyv8vCJ9PSBf8W7JfrDX/0fBZiHKqUtg7
03s5P3yG8T+NEPavNWe3lewva62+h/rNeedRtcJ+kPaICfDGvPOHirDnrveV
C/vX2hPvh7fnnfs9AOcKziHfCPuzyrU6h/0g7XEPhs9ClE/eB2/LO997KHzO
oXzyn5J9bY237SX749pbx9Pmr7z1xb3w1rzzxonwv3nnlnfDm/LOkWqG9y3t
X5tK9vH1fu+i/u+8tcmIsM+rnP+asJeqfH5k2A+V1rskfNYibXVZ2N9X/hNh
v1LjfEzY61SuXj3sLWp/rBr2IrUX3Bo+o5IerBz2NDUvbgufUUkbjg37vMr/
7wj7LJoXl4bPnJTDVwt7oNrTbw9rZs2pK8PervTF8PD5k/L8cfCfeeu1umEP
VPt+7bAPqL2+TtgfVA5QHj4/UN5yVdg7lt5pl/Wt9tY7w+cf0n2jwn6xNE6N
sGeq/f3ysBcsXXN12I+WPqof9luVCxXCZzbKDRaE55XOhl4LnyUoh++QjSvt
WV2K9qH2Js4MewHK5T4M7/HKA3cLe47KK+RNlbL2HcO+ofKrp8Jngco//5ON
Q+3RO2fjWXtlw7Dnq312Tvi8RPnkrpnvqfxtS8nnOtJcu4R9WO25M8LehPLh
Vln/a29tm80p5QBPhM9KlQ83DnvK2rsfD5+bKh9uGvZwlRs0Cnu72us/COcx
yoGbhT1i5RItwj6y8qXW2XxRLtEmG/Pa61uGvWnlErPCvoly+CfDZ7TK25uH
PWjlHlXCPrv2/Wnh3Eg59nvh3Ei5/QvhMx5pvafD57jSNZ+EfQet2wOK1oaH
EJeFvSHt3c+Ez4CljxaGfUntZc+GzyekofLhcz7lk5XCZ2DKe+uF/Xrl5K+E
z6ikARuEfX/lkC+Hz6ukGV8KnzlJS74YPouSxpR3Lc3bj7hTtp4o/5kcPnuT
putUtNfTmTgpfE4mzfhW+PxMmnFK+MxMevD9cL4oLTM1fI4lLfl2+HxLWvLV
sOcrHbpjtqYph5wPb8n7XHheOMeVz39csjelPeWd8JmZdOi14XMjeRSjw+cx
8hZeD5/PSf/uHfa+lXvsFfa1lZN0D/vgyse6hP1o5UX7hv1u5XIHhc825L3s
Gfa+lSd0DXvlylX2CfvsymFOCvuqyt+OCvutyqmOC/uz8mqODfvC0lnHhP1i
5VdHh31q5VcHhn155Vd9wuco8oIODvvI8pROCPu/8jp6hH125ZC9w/67cr/T
w+dz0rlDw+dt0rbnhM/qpK9PDZ9nKx8YFD7DVh4yJHyGJz9tcPgMT37aKWEP
+n/5QPgcUZr97PAZobR8r/B5gPLb/cLnBMqHe4bPJ5Qznxz2ppW7nhE+U5Q2
3z98TqCceVj4zFK6/qzweaT0/vFhj1t+V/vwPi69c0j4XE3+Vf+why6f7Ybw
uZ38on5hz10+22Phv7GQLzEwfO4oL+768JmfvKbDw369NLLmsvxC/f3CxeHz
b3mSfcNnWvLlBoR9fHlrm0vW4dLvh4XP/+TLbS1Zr0o/HhE+I1S+fWTY61dO
fnP47x7ktZ4X/hsL+Rg3hf8WRF7rjeFzSvlj/weFn09m
            "]], Polygon3DBox[CompressedData["
1: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
O1yt82+K5qedMutd1gj4oYZwZ+Ebote/HTPr4zui1+9umfnqmmg+a5dZf02K
5rO2mdcL7sGztcnvPS5aXzfJzMdXROvxppn5jfUPfdQsMz/dHr2+ds3MX7wj
fdElf/dTtC0pWoP9pr7+V7T+75hZX70q/IHwYZnzlTHRfFpdeJey+/xz+Djz
WPypa5SFH0ezlM1HaLlH0RjEknBJ+DE0mvB64YLwvcKjyo6pu3Wt1pWOtV/V
XoWxQ8PA58JF4fuFT2R9Eq4Uvk/4BOFfhDPhB4VPEn5Nz7dY+PDM+dmd0Xqu
e+b1413hFcInEAPC04Q/Fj5K+EjhWcJfCh8nfKzwbOHlwqOIKeGZwl8IjxQe
Ify28GesF8JHC08X/lT4aOHhwm8JfyI8XHiY8BvCS4WPFD5CeKrwEuEjhM/Q
9qbwMuFh2j9K7e8If8VaJTxSuKvw4cLf6H3rlL0GHyb8dfDa3Ev4GOHvhRsK
f0g8ZOaH/sm5GbFbX/19vY5P0laj0noEXQI3kE9U1TZe+3dm5prGefyw3hHf
zfL4WJ8cL7fl8X2e/v9TMCfBD8QV8QXHwhFFnX9FwffcU/u/w0Har6Kte/J8
gGtP0Dnbi3+uy7y2co9rtH+Xzn9QbT20/zZzR/gh4d2EZ5TNQdyH+8Ht5M+8
K5y1d3IOTS6NBt+u5PnxgPZ31e+nl825cC8cC9fWSO4bNC76DE3aO1jTolXp
U96FfqSvPyDGtP8dfK22xcIXZc6HuiU/UyPtx8zPer7+b9W527RdoP0LM+v7
gs4Zm5nLyceStnGZr0n/0s/ci2vye67DvRgvuI5jnfWczeCMzHOkP1wfnc8u
U9s1amsfnZ9+LDypbM6H+4lRYpXxGVPwPbvqXn20VdP1J+qc93X+CnHJetY3
baN1rG3w3GEO/ZSPd+1KvxO5y4/J68mUfH0YCgerraRjPdXWJTl//Eu/XaT2
m/V/I+tjHiO7JfftydpfqPaduabwmcLvlf3srF8/aRuj/bMyt6/TdnZm/fKk
9vtof6bOf0D4KdYv4VnCU4T/y7MSi8L1hHsIv6PnqCxb/+8mPJt3E24i3Ed4
vnAoW2OSK80K1p7NhPsKLxDOhFswZ4QXCce8/wcJL6XfhHdEcwh/KlxNuIPw
gcKfCVcXbi7cT3ihcBViRXgf4SXCZeGOaAThz4VrCA+IjqX1ws2F+wiPFP5R
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
            "]], Polygon3DBox[CompressedData["
1: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
oj1bFGt2OpmPjTLJnIi5sVw8zZZpW0LdTte3O52scfUzyRoaa+nedDKOG7AB
jgemk2+Lb46tBbEmlHVuFX/W8Sf6y9HfHv2tYP9lK1gW28UOppP52DiTzMWY
kyvFM2yVumx1u9Xlu49e7uOOuEb2hpoa7EL2ONvCPmLl2UA2jX3KZsV4Zu3Y
dex9NiPGKGvPrmez2dPxvt3HKexa9i57KuaHus5sXOxF7HnWOf5fsHZNjj0u
xnpu8v13anbyvR/f/YvdTxY7jY2Vz9f2OW3/UluB9WH3sR65yT5dl/VivUUr
bVPatmVj5LPUTde2lbpxrALrH/Mj/n9Q149NjufF3o55ydvEN0ns+ezJdPI/
Sd/s5H/G+N9xmd9oqS7HfYyN/1VEfTU5oovj8WoWavuCtmnWlU1gH7AXWXU2
jD3GNrMPY9xHf6xDVvJ8use+k07W0XqZZH+IfSL+h71A3aOxHsZ4cK4SG8we
kK/X37yYGzFf5Q3Fpawrq6DunPjmYmvZHFaGncXuYavZO6wcGxDzlK1h77Gy
rD+bEuOSvRvvQ+yW1xCD2enyiurOVXc/W8fmssrsPPYg28Dms53pZK8ryCTf
E/FdsVo8F2PP2E2r22vsVtV2iLYP841sYeyr4i35Z+oqsRLyKurOV/dQ7IVs
AfsHMgse8A==
            "]], 
           Polygon3DBox[{{2286, 1299, 1100, 1099, 1416, 2113}, {2106, 1406, 
            1045, 1046, 1407, 2107}, {2040, 1275, 1433, 2343, 1880, 1881}, {
            1876, 1875, 2337, 1383, 1384, 2338}}]},
          Annotation[#, "Charting`Private`Tag$3950#2"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[
           0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
          "Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0k0vHVEAgOFTvYqi9QeKLhoRQURExL3+wGVjeVl1x4Il1hb8AhbWJPaI
pQax5xb1LSKtXt8sfPOcRDJvnpnMmTlnTub7z/7Ovg8hhGE9KZ7f6UgT+SGU
cZoVnGcdV5jiOtt5zC7espeJTyHka8h5JUdZz3G2cYodnGU3l/ifOb5oTQ+6
1t+8ELL8x9884Xoczw3muMlT/uEZt3jObV5wh5fc5RX34ru5zxsecOGjZ/mq
Qz3GexqwrlX2cJEZzjDNSSY5xlqOsJzfNBj3kj1xLvuSiXvKNLNMcpm1nGM5
D4w/5rO+6j6uXylr/MJWlrKFJWxmMZv4mY0sYgML456zIK6NXh1qaKpQzQSr
6LPDDzrCLxfn7//BGzc2Sts=
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0j1I1HEYwPHn3rzzvGyOKGjL8OaQmgVrc6vxQtClyymHaLOGCEu786XG
HKKxhuaiQiRE7Tqv87yIJumFWioz8PPH4cvnmX48PPxOVaqjV1MRMa1/yaDf
+qwfPRFH+Z8nWcpHlHmc53mGFznEyxzhBU2YxzjFSd7mTdZ5l8t8xOd8ylcs
FyJ2mU5HbPCvfmomG7HJe3zP+2xwlh84xyYfcIs1tljnvD6aF9jmIre5xA4f
cifZhV1WcxFfmbHDJ+7pl97YcZ0v+JJP+Cx5h495hzXe4K3kHV7nFVY0bh7m
JZ5NbsTTPMdjHGSRJzjgDl+4r3790Xd1MxFH2GGJbfaxxSKb7GWDBW5wXXnz
Gnv4jjmuMssVZviWab5mitfc4Vvq8D8cACvBS0c=
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1435, 1759, 756, 1434, 2344, 1656, 1436, 2345, 1657, 1437, 
        2346, 1658, 1438, 2347, 1659, 1439, 2348, 1660, 1440, 2349, 1661, 
        1441, 2127, 2446, 1442, 2350, 1662, 1443, 2351, 1663, 1444, 2352, 
        1664, 1445, 2353, 1665, 1446, 2354, 1666, 1447, 952, 1667, 1760}], 
       Line3DBox[{1449, 2128, 2447, 1448, 2355, 1668, 1450, 2356, 1669, 1451, 
        2357, 1670, 1452, 2358, 1671, 1453, 2359, 1672, 1454, 2360, 1673, 
        1455, 2129, 2448, 1456, 2130, 2449, 1457, 2361, 1674, 1458, 2362, 
        1675, 1459, 2363, 1676, 1460, 2364, 1677, 1461, 2365, 1678, 1462}], 
       Line3DBox[{1464, 2131, 2450, 1463, 2132, 2451, 1465, 2366, 1679, 1466, 
        2367, 1680, 1467, 2368, 1681, 1468, 2369, 1682, 1469, 2370, 1683, 
        1470, 2133, 2452, 1471, 2134, 2453, 1472, 2135, 2454, 1473, 2371, 
        1684, 1474, 2372, 1685, 1475, 2373, 1686, 1476, 2374, 1687, 1477}], 
       Line3DBox[{1479, 2136, 2455, 1478, 2137, 2456, 1480, 2138, 2457, 1481, 
        2375, 1688, 1482, 2376, 1689, 1483, 2377, 1690, 1484, 2378, 1691, 
        1485, 2139, 2458, 1486, 2140, 2459, 1487, 2141, 2460, 1488, 2142, 
        2461, 1489, 2379, 1692, 1490, 2380, 1693, 1491, 2381, 1694, 1492}], 
       Line3DBox[{1494, 2143, 2462, 1493, 2144, 2463, 1495, 2145, 2464, 1496, 
        2146, 2465, 1497, 2382, 1695, 1498, 2383, 1696, 1499, 2384, 1697, 
        1500, 2147, 2466, 1501, 2148, 2467, 1502, 2149, 2468, 1503, 2150, 
        2469, 1504, 2151, 2470, 1505, 2385, 1698, 1506, 2386, 1699, 1507}], 
       Line3DBox[{1509, 2152, 2471, 1508, 2153, 2472, 1510, 2154, 2473, 1511, 
        2155, 2474, 1512, 2156, 2475, 1513, 2387, 1700, 1514, 2388, 1701, 
        1515, 2157, 2476, 1516, 2158, 2477, 1517, 2159, 2478, 1518, 2160, 
        2479, 1519, 2161, 2480, 1520, 2162, 2481, 1521, 2389, 1702, 1522}], 
       Line3DBox[{1524, 2163, 2482, 1523, 2164, 2483, 1525, 2165, 2484, 1526, 
        2166, 2485, 1527, 2167, 2486, 1528, 2168, 2487, 1529, 2390, 1703, 
        1530, 1761, 1762, 2551, 1531, 1763, 2488, 2227, 1532, 2169, 2489, 
        1533, 2170, 2490, 1534, 2171, 2491, 1535, 2172, 2492, 1536, 2173, 
        2493, 1537}], 
       Line3DBox[{1541, 2391, 1704, 1539, 2392, 1705, 1543, 2393, 1706, 1545, 
        2394, 1707, 1547, 2395, 1708, 1549, 2396, 1709, 1551, 2397, 1710, 
        1553, 1765, 2398, 1711, 1773, 1767, 2399, 1712, 1556, 2400, 1713, 
        1558, 2401, 1714, 1560, 2402, 1715, 1562, 2403, 1716, 1564, 2404, 
        1717, 1566}], 
       Line3DBox[{1565, 2507, 2185, 1563, 2506, 2184, 1561, 2505, 2183, 1559, 
        2504, 2182, 1557, 2503, 2181, 1555, 2229, 2502, 1766, 1554, 2228, 
        2501, 1764, 1552, 2500, 2180, 1550, 2499, 2179, 1548, 2498, 2178, 
        1546, 2497, 2177, 1544, 2496, 2176, 1542, 2495, 2175, 1538, 2494, 
        2174, 1540}], 
       Line3DBox[{1568, 2186, 2508, 1567, 2405, 1718, 1569, 2406, 1719, 1570, 
        2407, 1720, 1571, 2408, 1721, 1572, 2409, 1722, 1573, 2410, 1723, 
        1574, 2187, 2509, 1575, 2411, 1724, 1576, 2412, 1725, 1577, 2413, 
        1726, 1578, 2414, 1727, 1579, 2415, 1728, 1580, 2416, 1729, 1581}], 
       Line3DBox[{1583, 2188, 2510, 1582, 2189, 2511, 1584, 2417, 1730, 1585, 
        2418, 1731, 1586, 2419, 1732, 1587, 2420, 1733, 1588, 2421, 1734, 
        1589, 2190, 2512, 1590, 2191, 2513, 1591, 2422, 1735, 1592, 2423, 
        1736, 1593, 2424, 1737, 1594, 2425, 1738, 1595, 2426, 1739, 1596}], 
       Line3DBox[{1598, 2192, 2514, 1597, 2193, 2515, 1599, 2194, 2516, 1600, 
        2427, 1740, 1601, 2428, 1741, 1602, 2429, 1742, 1603, 2430, 1743, 
        1604, 2195, 2517, 1605, 2196, 2518, 1606, 2197, 2519, 1607, 2431, 
        1744, 1608, 2432, 1745, 1609, 2433, 1746, 1610, 2434, 1747, 1611}], 
       Line3DBox[{1613, 2198, 2520, 1612, 2199, 2521, 1614, 2200, 2522, 1615, 
        2201, 2523, 1616, 2435, 1748, 1617, 2436, 1749, 1618, 2437, 1750, 
        1619, 2202, 2524, 1620, 2203, 2525, 1621, 2204, 2526, 1622, 2205, 
        2527, 1623, 2438, 1751, 1624, 2439, 1752, 1625, 2440, 1753, 1626}], 
       Line3DBox[{1628, 2206, 2528, 1627, 2207, 2529, 1629, 2208, 2530, 1630, 
        2209, 2531, 1631, 2210, 2532, 1632, 2441, 1754, 1633, 2442, 1755, 
        1634, 2211, 2533, 1635, 2212, 2534, 1636, 2213, 2535, 1637, 2214, 
        2536, 1638, 2215, 2537, 1639, 2443, 1756, 1640, 2444, 1757, 1641}], 
       Line3DBox[{1655, 1772, 1771, 2550, 1654, 2548, 2226, 1653, 2547, 2225, 
        1652, 2546, 2224, 1651, 2545, 2223, 1650, 2544, 2222, 1649, 2543, 
        2221, 1648, 1758, 2445, 1647, 2542, 2220, 1646, 2541, 2219, 1645, 
        2540, 2218, 1644, 2539, 2217, 1643, 2538, 2216, 1642, 2549, 1769, 
        1768, 1770}], 
       Line3DBox[{1775, 2088, 2230, 2552, 1774, 2658, 1991, 1776, 2659, 1992, 
        1777, 2660, 1993, 1778, 2661, 1994, 1779, 2662, 1995, 1780, 2663, 
        1996, 1781, 2664, 2231, 2553, 1782, 2665, 1997, 1783, 2666, 1998, 
        1784, 2667, 1999, 1785, 2668, 2000, 1786, 2669, 2001, 1787, 2336, 
        2762, 2002, 2089}], 
       Line3DBox[{1789, 2232, 2554, 1788, 2233, 2555, 1790, 2670, 2003, 1791, 
        2671, 2004, 1792, 2672, 2005, 1793, 2673, 2006, 1794, 2674, 2007, 
        1795, 2675, 2234, 2556, 1796, 2235, 2557, 1797, 2676, 2008, 1798, 
        2677, 2009, 1799, 2678, 2010, 1800, 2679, 2011, 1801, 2680, 2012, 
        1802}], Line3DBox[{1804, 2236, 2558, 1803, 2237, 2559, 1805, 2238, 
        2560, 1806, 2681, 2013, 1807, 2682, 2014, 1808, 2683, 2015, 1809, 
        2684, 2016, 1810, 2685, 2239, 2561, 1811, 2240, 2562, 1812, 2241, 
        2563, 1813, 2686, 2017, 1814, 2687, 2018, 1815, 2688, 2019, 1816, 
        2689, 2020, 1817}], 
       Line3DBox[{1819, 2242, 2564, 1818, 2243, 2565, 1820, 2244, 2566, 1821, 
        2245, 2567, 1822, 2690, 2021, 1823, 2691, 2022, 1824, 2692, 2023, 
        1825, 2693, 2246, 2568, 1826, 2247, 2569, 1827, 2248, 2570, 1828, 
        2249, 2571, 1829, 2694, 2024, 1830, 2695, 2025, 1831, 2696, 2026, 
        1832}], Line3DBox[{1834, 2250, 2572, 1833, 2251, 2573, 1835, 2252, 
        2574, 1836, 2253, 2575, 1837, 2254, 2576, 1838, 2697, 2027, 1839, 
        2698, 2028, 1840, 2699, 2255, 2577, 1841, 2256, 2578, 1842, 2257, 
        2579, 1843, 2258, 2580, 1844, 2259, 2581, 1845, 2700, 2029, 1846, 
        2701, 2030, 1847}], 
       Line3DBox[{1849, 2260, 2582, 1848, 2261, 2583, 1850, 2262, 2584, 1851, 
        2263, 2585, 1852, 2264, 2586, 1853, 2265, 2587, 1854, 2702, 2101, 
        2102, 1855, 2703, 2106, 2107, 2588, 1856, 2266, 2589, 1857, 2267, 
        2590, 1858, 2268, 2591, 1859, 2269, 2592, 1860, 2270, 2593, 1861, 
        2704, 2031, 1862}], 
       Line3DBox[{1866, 2705, 2032, 1864, 2706, 2033, 1868, 2707, 2034, 1870, 
        2708, 2035, 1872, 2709, 2036, 1874, 2710, 2037, 1876, 2338, 2767, 
        2096, 2098, 2038, 2100, 2341, 2768, 2099, 2097, 2764, 2039, 1879, 
        2125, 2126, 2775, 2040, 1881, 2711, 2041, 1883, 2712, 2042, 1885, 
        2713, 2043, 1887, 2714, 2044, 1889, 2715, 2045, 1891}], 
       Line3DBox[{1890, 2605, 2281, 1888, 2604, 2280, 1886, 2603, 2279, 1884, 
        2602, 2278, 1882, 2601, 2277, 1880, 2343, 2774, 2124, 1878, 2600, 
        2090, 2108, 2110, 2109, 2766, 1877, 2104, 2105, 2103, 2763, 2337, 
        1875, 2599, 2276, 1873, 2598, 2275, 1871, 2597, 2274, 1869, 2596, 
        2273, 1867, 2595, 2272, 1863, 2594, 2271, 1865}], 
       Line3DBox[{1893, 2282, 2606, 1892, 2716, 2046, 1894, 2717, 2047, 1895, 
        2718, 2048, 1896, 2719, 2049, 1897, 2342, 2770, 2050, 2117, 2339, 
        2769, 2112, 2115, 2051, 2095, 2720, 2091, 2114, 2120, 2283, 2772, 
        2119, 2118, 2123, 2771, 2052, 1898, 2721, 2053, 1899, 2722, 2054, 
        1900, 2723, 2055, 1901, 2724, 2056, 1902, 2725, 2057, 1903}], 
       Line3DBox[{1905, 2284, 2607, 1904, 2285, 2608, 1906, 2726, 2058, 1907, 
        2727, 2059, 1908, 2728, 2060, 1909, 2729, 2061, 1910, 2730, 2111, 
        2062, 2116, 2731, 2113, 2286, 2773, 2122, 2121, 2287, 2609, 1911, 
        2732, 2063, 1912, 2733, 2064, 1913, 2734, 2065, 1914, 2735, 2066, 
        1915, 2736, 2067, 1916}], 
       Line3DBox[{1918, 2288, 2610, 1917, 2289, 2611, 1919, 2290, 2612, 1920, 
        2737, 2068, 1921, 2738, 2069, 1922, 2739, 2070, 1923, 2740, 2071, 
        1924, 2741, 2291, 2613, 1925, 2292, 2614, 1926, 2293, 2615, 1927, 
        2742, 2072, 1928, 2743, 2073, 1929, 2744, 2074, 1930, 2745, 2075, 
        1931}], Line3DBox[{1933, 2294, 2616, 1932, 2295, 2617, 1934, 2296, 
        2618, 1935, 2297, 2619, 1936, 2746, 2076, 1937, 2747, 2077, 1938, 
        2748, 2078, 1939, 2749, 2298, 2620, 1940, 2299, 2621, 1941, 2300, 
        2622, 1942, 2301, 2623, 1943, 2750, 2079, 1944, 2751, 2080, 1945, 
        2752, 2081, 1946}], 
       Line3DBox[{1948, 2302, 2624, 1947, 2303, 2625, 1949, 2304, 2626, 1950, 
        2305, 2627, 1951, 2306, 2628, 1952, 2753, 2082, 1953, 2754, 2083, 
        1954, 2755, 2307, 2629, 1955, 2308, 2630, 1956, 2309, 2631, 1957, 
        2310, 2632, 1958, 2311, 2633, 1959, 2756, 2084, 1960, 2757, 2085, 
        1961}], Line3DBox[{1963, 2312, 2634, 1962, 2313, 2635, 1964, 2314, 
        2636, 1965, 2315, 2637, 1966, 2316, 2638, 1967, 2317, 2639, 1968, 
        2758, 2086, 1969, 2759, 2318, 2640, 1970, 2319, 2641, 1971, 2320, 
        2642, 1972, 2321, 2643, 1973, 2322, 2644, 1974, 2323, 2645, 1975, 
        2760, 2087, 1976}], 
       Line3DBox[{1990, 2094, 2765, 2340, 1989, 2657, 2335, 1988, 2656, 2334, 
        1987, 2655, 2333, 1986, 2654, 2332, 1985, 2653, 2331, 1984, 2652, 
        2330, 2761, 1983, 2651, 2329, 1982, 2650, 2328, 1981, 2649, 2327, 
        1980, 2648, 2326, 1979, 2647, 2325, 1978, 2646, 2324, 1977, 1388, 
        2092, 2093}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{549, 757, 2344, 550, 770, 2355, 576, 2451, 784, 590, 2456, 
        798, 604, 2463, 812, 618, 2472, 826, 632, 2483, 840, 646, 2495, 854, 
        2392, 660, 868, 2405, 674, 2511, 882, 688, 2515, 896, 702, 2521, 910, 
        716, 2529, 924, 730, 2538, 938, 744}], 
       Line3DBox[{551, 758, 2345, 552, 771, 2356, 577, 785, 2366, 591, 2457, 
        799, 605, 2464, 813, 619, 2473, 827, 633, 2484, 841, 647, 2496, 855, 
        2393, 661, 869, 2406, 675, 883, 2417, 689, 2516, 897, 703, 2522, 911, 
        717, 2530, 925, 731, 2539, 939, 745}], 
       Line3DBox[{553, 759, 2346, 554, 772, 2357, 578, 786, 2367, 592, 800, 
        2375, 606, 2465, 814, 620, 2474, 828, 634, 2485, 842, 648, 2497, 856, 
        2394, 662, 870, 2407, 676, 884, 2418, 690, 898, 2427, 704, 2523, 912, 
        718, 2531, 926, 732, 2540, 940, 746}], 
       Line3DBox[{555, 760, 2347, 556, 773, 2358, 579, 787, 2368, 593, 801, 
        2376, 607, 815, 2382, 621, 2475, 829, 635, 2486, 843, 649, 2498, 857, 
        2395, 663, 871, 2408, 677, 885, 2419, 691, 899, 2428, 705, 913, 2435, 
        719, 2532, 927, 733, 2541, 941, 747}], 
       Line3DBox[{557, 761, 2348, 558, 774, 2359, 580, 788, 2369, 594, 802, 
        2377, 608, 816, 2383, 622, 830, 2387, 636, 2487, 844, 650, 2499, 858, 
        2396, 664, 872, 2409, 678, 886, 2420, 692, 900, 2429, 706, 914, 2436, 
        720, 928, 2441, 734, 2542, 942, 748}], 
       Line3DBox[{559, 762, 2349, 560, 775, 2360, 581, 789, 2370, 595, 803, 
        2378, 609, 817, 2384, 623, 831, 2388, 637, 845, 2390, 651, 2500, 859, 
        2397, 665, 873, 2410, 679, 887, 2421, 693, 901, 2430, 707, 915, 2437, 
        721, 929, 2442, 735, 943, 2445, 749}], 
       Line3DBox[{8, 1441, 23, 1455, 38, 1470, 53, 1485, 68, 1500, 83, 1515, 
        98, 1530, 113, 1552, 1553, 128, 1574, 143, 1589, 158, 1604, 173, 1619,
         188, 1634, 203, 1648, 218}], 
       Line3DBox[{561, 2446, 763, 562, 2448, 776, 582, 2452, 790, 596, 2458, 
        804, 610, 2466, 818, 624, 2476, 832, 638, 953, 2551, 962, 846, 652, 
        2501, 955, 963, 860, 2398, 666, 2509, 874, 680, 2512, 888, 694, 2517, 
        902, 708, 2524, 916, 722, 2533, 930, 736, 2543, 944, 750}], 
       Line3DBox[{563, 764, 2350, 564, 2449, 777, 583, 2453, 791, 597, 2459, 
        805, 611, 2467, 819, 625, 2477, 833, 639, 2488, 954, 847, 653, 2502, 
        956, 861, 2399, 667, 875, 2411, 681, 2513, 889, 695, 2518, 903, 709, 
        2525, 917, 723, 2534, 931, 737, 2544, 945, 751}], 
       Line3DBox[{565, 765, 2351, 566, 778, 2361, 584, 2454, 792, 598, 2460, 
        806, 612, 2468, 820, 626, 2478, 834, 640, 2489, 848, 654, 2503, 862, 
        2400, 668, 876, 2412, 682, 890, 2422, 696, 2519, 904, 710, 2526, 918, 
        724, 2535, 932, 738, 2545, 946, 752}], 
       Line3DBox[{567, 766, 2352, 568, 779, 2362, 585, 793, 2371, 599, 2461, 
        807, 613, 2469, 821, 627, 2479, 835, 641, 2490, 849, 655, 2504, 863, 
        2401, 669, 877, 2413, 683, 891, 2423, 697, 905, 2431, 711, 2527, 919, 
        725, 2536, 933, 739, 2546, 947, 753}], 
       Line3DBox[{569, 767, 2353, 570, 780, 2363, 586, 794, 2372, 600, 808, 
        2379, 614, 2470, 822, 628, 2480, 836, 642, 2491, 850, 656, 2505, 864, 
        2402, 670, 878, 2414, 684, 892, 2424, 698, 906, 2432, 712, 920, 2438, 
        726, 2537, 934, 740, 2547, 948, 754}], 
       Line3DBox[{571, 768, 2354, 572, 781, 2364, 587, 795, 2373, 601, 809, 
        2380, 615, 823, 2385, 629, 2481, 837, 643, 2492, 851, 657, 2506, 865, 
        2403, 671, 879, 2415, 685, 893, 2425, 699, 907, 2433, 713, 921, 2439, 
        727, 935, 2443, 741, 2548, 949, 755}], 
       Line3DBox[{573, 951, 952, 574, 782, 2365, 588, 796, 2374, 602, 810, 
        2381, 616, 824, 2386, 630, 838, 2389, 644, 2493, 852, 658, 2507, 866, 
        2404, 672, 880, 2416, 686, 894, 2426, 700, 908, 2434, 714, 922, 2440, 
        728, 936, 2444, 742, 958, 2550, 959, 960}], 
       Line3DBox[{743, 937, 2549, 957, 729, 923, 2528, 715, 909, 2520, 701, 
        895, 2514, 687, 881, 2510, 673, 867, 2508, 659, 2391, 853, 2494, 645, 
        839, 2482, 631, 825, 2471, 617, 811, 2462, 603, 797, 2455, 589, 783, 
        2450, 575, 769, 2447, 548, 756, 950, 961}], 
       Line3DBox[{965, 1182, 2658, 966, 2555, 1196, 994, 2559, 1211, 1009, 
        2565, 1226, 1024, 2573, 1241, 1039, 2583, 1256, 1054, 2595, 1269, 
        2706, 1067, 1282, 2716, 1080, 2608, 1294, 1093, 2611, 1307, 1108, 
        2617, 1322, 1123, 2625, 1337, 1138, 2635, 1352, 1153, 2646, 1367, 
        1168}], Line3DBox[{967, 1183, 2659, 968, 1197, 2670, 995, 2560, 1212, 
        1010, 2566, 1227, 1025, 2574, 1242, 1040, 2584, 1257, 1055, 2596, 
        1270, 2707, 1068, 1283, 2717, 1081, 1295, 2726, 1094, 2612, 1308, 
        1109, 2618, 1323, 1124, 2626, 1338, 1139, 2636, 1353, 1154, 2647, 
        1368, 1169}], 
       Line3DBox[{969, 1184, 2660, 970, 1198, 2671, 996, 1213, 2681, 1011, 
        2567, 1228, 1026, 2575, 1243, 1041, 2585, 1258, 1056, 2597, 1271, 
        2708, 1069, 1284, 2718, 1082, 1296, 2727, 1095, 1309, 2737, 1110, 
        2619, 1324, 1125, 2627, 1339, 1140, 2637, 1354, 1155, 2648, 1369, 
        1170}], Line3DBox[{971, 1185, 2661, 972, 1199, 2672, 997, 1214, 2682, 
        1012, 1229, 2690, 1027, 2576, 1244, 1042, 2586, 1259, 1057, 2598, 
        1272, 2709, 1070, 1285, 2719, 1083, 1297, 2728, 1096, 1310, 2738, 
        1111, 1325, 2746, 1126, 2628, 1340, 1141, 2638, 1355, 1156, 2649, 
        1370, 1171}], 
       Line3DBox[{973, 1186, 2662, 974, 1200, 2673, 998, 1215, 2683, 1013, 
        1230, 2691, 1028, 1245, 2697, 1043, 2587, 1260, 1058, 2599, 1273, 
        2710, 1071, 1419, 1420, 2770, 1084, 1298, 2729, 1097, 1311, 2739, 
        1112, 1326, 2747, 1127, 1341, 2753, 1142, 2639, 1356, 1157, 2650, 
        1371, 1172}], 
       Line3DBox[{975, 1187, 2663, 976, 1201, 2674, 999, 1216, 2684, 1014, 
        1231, 2692, 1029, 1246, 2698, 1044, 1403, 2702, 1404, 1405, 2763, 
        1383, 1384, 2767, 1395, 1422, 1423, 1421, 1386, 2769, 1414, 1412, 
        2730, 1413, 1098, 1312, 2740, 1113, 1327, 2748, 1128, 1342, 2754, 
        1143, 1357, 2758, 1158, 2651, 1372, 1173}], 
       Line3DBox[{977, 1188, 2664, 979, 1202, 2675, 1000, 1217, 2685, 1015, 
        1232, 2693, 1030, 1247, 2699, 1045, 1406, 2703, 1408, 1409, 1410, 
        2766, 1411, 1393, 1401, 1402, 1400, 2768, 1396, 1397, 1399, 1398, 
        1394, 2720, 1387, 1417, 1415, 1418, 2731, 1416, 1099, 1313, 2741, 
        1114, 1328, 2749, 1129, 1343, 2755, 1144, 1358, 2759, 1159, 1373, 
        2761, 1174}], 
       Line3DBox[{981, 1190, 2665, 982, 2557, 1204, 1002, 2562, 1219, 1017, 
        2569, 1234, 1032, 2578, 1249, 1047, 2589, 1262, 1060, 2774, 1433, 
        1275, 2775, 1073, 1424, 1287, 2771, 1086, 1427, 2609, 1300, 1101, 
        2614, 1315, 1116, 2621, 1330, 1131, 2630, 1345, 1146, 2641, 1360, 
        1161, 2653, 1375, 1176}], 
       Line3DBox[{983, 1191, 2666, 984, 1205, 2676, 1003, 2563, 1220, 1018, 
        2570, 1235, 1033, 2579, 1250, 1048, 2590, 1263, 1061, 2601, 1276, 
        2711, 1074, 1288, 2721, 1087, 1301, 2732, 1102, 2615, 1316, 1117, 
        2622, 1331, 1132, 2631, 1346, 1147, 2642, 1361, 1162, 2654, 1376, 
        1177}], Line3DBox[{985, 1192, 2667, 986, 1206, 2677, 1004, 1221, 2686,
         1019, 2571, 1236, 1034, 2580, 1251, 1049, 2591, 1264, 1062, 2602, 
        1277, 2712, 1075, 1289, 2722, 1088, 1302, 2733, 1103, 1317, 2742, 
        1118, 2623, 1332, 1133, 2632, 1347, 1148, 2643, 1362, 1163, 2655, 
        1377, 1178}], 
       Line3DBox[{987, 1193, 2668, 988, 1207, 2678, 1005, 1222, 2687, 1020, 
        1237, 2694, 1035, 2581, 1252, 1050, 2592, 1265, 1063, 2603, 1278, 
        2713, 1076, 1290, 2723, 1089, 1303, 2734, 1104, 1318, 2743, 1119, 
        1333, 2750, 1134, 2633, 1348, 1149, 2644, 1363, 1164, 2656, 1378, 
        1179}], Line3DBox[{989, 1194, 2669, 990, 1208, 2679, 1006, 1223, 2688,
         1021, 1238, 2695, 1036, 1253, 2700, 1051, 2593, 1266, 1064, 2604, 
        1279, 2714, 1077, 1291, 2724, 1090, 1304, 2735, 1105, 1319, 2744, 
        1120, 1334, 2751, 1135, 1349, 2756, 1150, 2645, 1364, 1165, 2657, 
        1379, 1180}], 
       Line3DBox[{991, 1381, 1382, 2762, 992, 1209, 2680, 1007, 1224, 2689, 
        1022, 1239, 2696, 1037, 1254, 2701, 1052, 1267, 2704, 1065, 2605, 
        1280, 2715, 1078, 1292, 2725, 1091, 1305, 2736, 1106, 1320, 2745, 
        1121, 1335, 2752, 1136, 1350, 2757, 1151, 1365, 2760, 1166, 2765, 
        1389, 1390, 1391}], 
       Line3DBox[{1167, 1366, 1388, 1152, 1351, 2634, 1137, 1336, 2624, 1122, 
        1321, 2616, 1107, 1306, 2610, 1092, 1293, 2607, 1079, 1281, 2606, 
        1066, 2705, 1268, 2594, 1053, 1255, 2582, 1038, 1240, 2572, 1023, 
        1225, 2564, 1008, 1210, 2558, 993, 1195, 2554, 964, 1181, 2552, 1380, 
        1392}], Line3DBox[{1175, 1374, 2652, 1160, 1359, 2640, 1145, 1344, 
        2629, 1130, 1329, 2620, 1115, 1314, 2613, 1100, 1299, 2773, 1428, 
        1430, 1429, 1085, 1286, 2772, 1426, 1425, 1432, 1431, 1072, 2764, 
        1274, 2600, 1385, 1059, 1261, 2588, 1407, 1046, 1248, 2577, 1031, 
        1233, 2568, 1016, 1218, 2561, 1001, 1203, 2556, 980, 1189, 2553, 
        978}]}, {}, {}, {}, {}, {}}},
    VertexNormals->CompressedData["
1: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
K09gzVU8Ca1TZNB0VYLjx35D8OStPAfRkH3wLzXJ7ZjuvW17cXJSGTC44WD8
Vb+X0PgjSj63Nmmek80cJ9aO+Y+v2VCNr8uyOWzXsPoPlczXb4g/87LxPDx9
9bPYFvKifj9FoOJrrAsPaE9OFTLi5rfuE9leyJIY8erVz7NGbaQhRvxLvKKj
9acRHA8DhymfL+lvFhuCnanfTxEE2/4SxxC8x0d8bmVbLHxto3f2mbN/iTfB
r6vlp8mgtVQ+01a9RNAg9STBZGYPcGAkUnF2ggzuc2b9NJ5dAoav8/kc84UH
CEyaWy6bQQZjU5bHz+xMBxtbMnplK/qJYAdX7PsRMig+Fw9znbam6iKEsobb
6ujvAtbZbZwXlW8EcLyN8vsI/728SmdVmADCkj9IvaV/Oj3n/0eFEafWJ/PH
3VxIfeK6B7U+H+ifmte/nY/rJCpMN7D6JJZ4wUh94rrKLvHnWH2WCrLuQuqT
pvOY9WP1qcR9rgSpT4Banxalcv/Q+lxtY/UHqU9wizqlPhNX9HWh9VkVLuGP
1Cf4zZEfq0/3r57rzJD63CtmIYnUJyhp6ozVZz3/YTu0Pn8PHS1F6hP8wseJ
1edNQC4crc/PQtkBSH2CUXIbsfoUX6xPZc/s80h9gh8Z6vM0R0UUUp8AY31K
jvkPI/WJr4tan4KJb+SR+sTzsPYqG9Y/4/TXOCP9E88nKeEu1j9dT3iOIv0T
z+efV6VY/+zfInoX6Z+4H4XF/snDrjj/L3EAvy61f1aFS2Yh/ROg9s9jbGxB
aP+M9r+hjPRPcMti/7zzJDoV7Z/vY28/Q/on+HuW0j+jxg2w/skj+bkc6Z/I
FJmN9c/V0YmFaP98epxDHemfoEX6ijC0f0bJcGH9c/+dQ9eR/glGh1D6p8mk
8Va0f3KpbFiH9E8wfrF/qlSIYf2z5fvycqR/Aoz9c/Kazejy3Gx8XdT+GTke
8Rbpn3geqPv7gb0cf7Iy/uL6UnOAMLa/H33M+QnZ3/F8ivNlYvs7gYvU9jQ4
C/dzwkL1Erq/7zPslUL2d9pz9cObj6D7+7DbpVLZOzcA6v4+Hf8R29+ZVNf1
Jl5lBq8u7u/Nyunv0P199QO2CGR/B8mplP09U8BJDt3f36TbjXwNuge2S0xg
+3tf2TYfdH9v2KNtiezv4J5/lP19LW9pJbq/89ZuIyD7O3h9L2V/X9G1LBLd
3znPzcog+zvgsbi/q1pQ9vf0Cm1uZH8HqPt7ZR6rMbq/f+VT9EH2d3xd1P29
7s6p68j+jufBXLyNiPJP+AyZA+GfeD6p/DO3CX6K8E/a75sW+ae72f27CP/E
/dzu4SSh/DPJo0wT4Z/4dauHlmP8c/3WsYZ1fLTvaxqPUPhnEFnrKcI/ASr/
1BK8XYbyz4W3Kcm8H+YAuUX+GWqdPozyz5VThscQ/gnmvKHwz5RF/qk9u72q
y3YnOL7IP18v8s8maPsqhH+CSlT+yUnhn2mTXo8R/glQ+efboucY/9T//coG
4Z94nKZSs44o/0Sq+SHCP2m/c1nkn3MVf/UR/onnQW1zCzYflYSf3IjMR3g+
13GTsfmI5cIGF2Q+ov1eT7fQH52P3AQMbyDzEe5nyntdKDoflXedyvjhyopf
N9sm5jg6H312V3s2VlCL408hRxt0Ptok6fq6/+9RgDYftRxF5yMOUpEKMh8B
jPPRd7a3ksh8BFDnIyWhTxA6Hx3dX5i3yr4coM5HxZfepKDz0dyaGH9kPgKo
89E1Ke1MdD46v3FQD5mP8Lylk8ZC0flIXobz3PnVNH3eSZNDB52P6ok3xZD5
CF8vdT4692J7NJsA7XeLZtI/PqO6R3xZSfdYZzVN/1zUN1ja/DQfBh7E80nV
MTrueV8euOSD+6HqFaJM4NAa6Xv4dam6hIrH3YPiArTvXx69Ycb0h5k53fBm
8WYcZy/2wHSGga1DmyIF+PH1ljtm30P1hDn7tR5vfp4AqHrC3Xtj+ahu8KLY
hG0/iyZuL1kzjOkDTdDdVUd3i+C49b+vmA5QCEowdxaV49cNXpz3X2u+E9Em
SuD43exBbK53z2Y3at1zHF/XA7FEbH4Xusy8Bpnf8TzcSFMQ47VTznv1cnis
65wU7XccizpSvs9n82hSBl63VL1o73mhF5cSR/E8U3WhetvLOQMNY7h/qv4z
fYrpkM5V2u8uqTrPqc8uhq65IB4/Vc/p4mrp1jK8i+NU3YbzA48D8zgtD1R9
pl93hVDxt0wcp+ow3cfvTsyHBOA4VW8RMRAF3/JK4ThVV1H9s/02/8JTWt4W
9ZOppvU3TC7S6vDU3OUou6PNeQPrMn3BnRW4/sanFvMarcPfqYGs9Dqblj/n
3BOkDv07n/oP0OlpKqkWTQts/kU8p4a6F6Routljr8uT3zoOkfoUbinLbKbp
YzxsZqNV7GWklS3JBuXsNB3swv7Xa+SUJ0izhqufzJM24PNygkHtEXeAE/gr
bCJx46YZfl4H237rqU4dHsA8pIv7dS1NByi4YxrBlAgTJ7cZlVz9Tnvut/ND
XN4Tdmniv3fPQjZWqOB4abJZzkbJxypuDz8E6bwJxeM/0R5MjLpWrByw3Uig
2Y2mb2QleWH90IhbaIle9NEq/RPaD/Xy4nrp9aKgP49PzSP98Ors1Al6vWjI
c3PRMaQfEm7xH26j04tc+xSCz92qJq1vjdorl0/Ti3SuPFF6f+4AlM22alan
i6YXaTxqPtiSfwUSf/M2kvPQE+jAPAXfrvXZQ1kiEDjwyPHnqsg2yLuR0g83
tJDfFtc8BXQdZJ6Xd6dDfMMUexKPqmpg5X7gddBaof0vtXH/3Z/LR4W9S4id
thc42Idq8HgO1vK/aikXI5pzh4yyBtD0Ok2vJ2O5TiYq8/8sLA9K0XQ5bavs
y57I5zdi/5Os03T6WyPpOqYXuRFyPen1IvtXXJ3oft0fcHScXi8SchweWYns
13/fBYjS60XCN9++vYLs11zQrFI0nV5kHvJo1cNEGYiLXzyWaROtThS9pa6y
+7yBhCKOt46vyIHCGxafa2rSXjv1qAcStf4hwr1qGqoZb8LwBsHlq3tk/wJf
8mTU7m1FeKh8fQ2KHzR8fco/lAlMl732XH14PfzGDqHb6L7/qNara1U6sJVp
s8yNphzIYtE/16AUV4wRALiST5nJTWjg8cDn3XxOyCcRTYoDp2+L0vQ3DbbU
hYebPqmssnZQsCqn6W9iVlmzT5D95Z1htOJqOv1NecQT45OPprcs0Yv0ytnk
UD55Qz1khF4vOtbxOe0zwidhwwCHp3R6URVbWezMp0rSg5NzgTM8NL0o9PDy
sIJPd6HvtvXh7rdoetGVzw66NhbMcO73nH1KyCuvjjFFhxQ66iKTLAP7K256
4DqjATv8K7mK7SNFfh8+Rx4GT1mcy910zA+OHftw7QyCHw2W+PssygBMER9R
vq9jDSvfvd04jeDrDTpnT39hBQNTv9u0jHLBu3lvYnn+Rvpm7eUQB+gm2oaT
7r2GzpMp8dgwr5GVFOYGzAiz+W820PQ3JSdAY42ABlHk/BZb7VM0/S2LT2BB
AOE/aTlC7+bp9LeH7R/eovPOpdnAJXqReNjhFei8s+OQeBu9XuTJcfnbb2Te
eXpoUJxeLyovOF9xGJl3dC15Hg3S6UVW/Ls4ft4ugdL/+MjZXEqDOhbnHTCk
em6HKxFObD50hDVGBhbly8rAnjN36pGp57oAr7DbWfqj4Ao87p0e8gHB7W4Z
wadYvEHxoxnyHiP5sM4Fl98uLWTwOZkjaG/+Q7DtwMbPb1uewAYqQ7LH5sjg
/t2sQd/f64JPs/N3PAkxgN1O7QqeQ/xEWtm+VViYBKRDIv9Zrx+HskrKKfz8
zOeeHGN7YJfwvo6FOpr+VtPhO9mD8HMDycK0y3T6W5rFwPI8hJ+35z9ViKfT
317ULMyg8zjbhltL9CK3d9d00Xkc5otjpteLeDTvulcg87gJZ4k+vV50gnmz
8Sy3KOTLszx1L51etEHavUNQuRdq3+a4CwotgS7rUOZxke0JrYfYrGG/1xP+
avkH4cE5r0l0HrcjbCz8ZBkMC/VeIsn63Ie3HKoTq0XyY7LRQeQhMQ7Ub9J1
c0yvh+uf63A4bCKDhfO5tcTcTHCg4/mqZScy4OqBr+x72pA8GPpuieq9DRpX
/K75aHAbLvx5pOoY2p8B4VEfaWkwMrj5wR/d7bC8lxw2P14c8a9O740GXj5W
Tmyg099atevLlJH58Yvc4/sr6fQ3k/tzamRkflx2rSKfXn/be64F04u+8tUq
5Bw0wPfxCv+B/ahe5FyxLns4WwjPc0EQaWgFqhdtPHzJ6HYi7fdEft83D9pI
QxPCna2rjo7TznN7rub8vmMEunHcYNen90zQe1WKXiRcaMsp5u4M88VL/jUJ
bYT6E/4aoXpRhECBjs/JGNiWq/GN/TcbGPLhaMz6RwZ3BsWW7W4NAl/2Kb8w
aYuFzco35n78SwYf+0y1jX6sAtvnfIf6KlNhx4jT1QbHyWBYGdO2fuNXYBjb
MjPDmWB4w5ZdcqFTZFDnneO/Y0OGoMmbSzfuBe6D19hbbEPnSn476NO3pDJg
PlL42iG/l9CfRX0jSOJIgHzmOJHvjeCnVXT628UZFSKqbzRrcYnR629D1caY
XiSe+2U1vV60k0vYEq1PWdMVk/R6kXf3xmZUL/rOc25Mh04vmpNj59zEIwr1
a091iNLpRbcvt3x7QeyFNNNrm9RCS4C+I5T6dE0S1/ylZg0f8ZfXZ0s6CN55
XNqG1ucLFi0mSDwK5r0fE/HP4h547U34fMMMgquf6zP6fgfeYZP4dVroPbi+
Iq3sHFKfX2d9nmr0l4FF/sy/uYOywfK2waM3LyHzoyzn9+0v00DlMf/kkkoA
/P235q3hKBncFLTOTc/eGvz5na8nxTUcaOpmOoDqbzFlNRc45BsBcbsr8us2
5BMrF/W3Y8wbdzmrMAERZ27zmDU9w9fLvnmlNaq/bchSazWPlsPzs6G2AtOL
tlU5LNGLJLb5yaL9s6N8+h+9XhTiZ/x4BOmfZ3zinKPo9KJmffGUUKR/ah9V
Zl+XRNOLpF4nV2bcK4Fi9bS2RbqnAWGL/dNmzfY75hkAPDFyS7CpVwasHj+V
guKWa92/PEjwgadaOX/Yr/MCP4Qk84PouoYP6K175wFbz/4hmk0Wgce/Epgl
a8ngoS+eM4MLEeDgOZ30F1NZIDmU4L2rhwy+KVnpYCkeAxaOqEoOST4Be0z+
KalOk8Hb3axyJj2GYJHMZSX7x/vATy5aomh9pnXc6XFC6rMw+bW4ud9LYHKx
PotbFEakkPoU3DC+i4tOf7t5vXUDWp9jP87spNffTq2udEH398yEb2P0etH2
59e90f29JWbrKl46vUgt+tXLX8j+zh4XnPucTi9yyy6wX9VVSRo3f+7sS6cX
eRFP1D3+cxfSBHcDjY9uAEaLff4WW6vO7QfL4P2eYGe1Pgt4U1ARw6+G3rxo
FGEB/7M67s8fcgIsEJOyQPdrHsGSz+OxjrDfvj9i4RmPwWcaIU6keTLYI3ol
5nXKBfCigLyM2+0XYFJu/t1Vs2Tw5d6qdh9LTzDWWeJgkdMt8M639bFXED9+
KtvVlq+TRj4HNwVs1baDqvd8sf7pfFeX6PQ9Gmi98nzdOjr9zdk9SW0v0j8F
mSWDWOj0t+tXaz6h+pvvQ+5X9PpbK/HDAZR/lkW6rqfXi+5P8jvOIPyTaUzN
QZ5OL7rVPK23E+GfR2e0nTbS6UXjw78PbL16mRRXvVI7/S1NL3Kbvyaxp08G
0hdiNu+Qo+lFWkm3FPVnsyHrJ6FVmaH5QGceJf78Tw8POooLw/dENjHJSG0F
s+7FYueHbA68zxE/KwV31+S/Wpt5FIzRjctE68qjS89HeU4SFBD999Ta1Blc
u2u/JdqHr6Vk2un5q4MP3ZTKVh7SB886Pg1F7S+4SNTMBEwCKw+/nazuGwPe
u1P0N8tPrB0A+v2a1/zHI3T6G9MKHkIOsr/vSUvns6LT38IvFoai+luCiLcT
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
GwPSCH8QlCYZ0us5fAOn4tFzRTP02+vb6fQfcSOEdv3dBrVHaZuXutP0IkfN
/aFZPCnQfWPf9nsPMiDnxf3aNEsNKL86BLnrf5meOs0Ms76OxHCPvD356L6m
rx9bQrZZC1cFNmLPm4ks6l1vby7VFV9/fI/yDfDoSw0TUTkh+MoJEPve0FDt
wwo3dwjglXXoF9Ish2BDynUjkupJmmWagGrel8rWCX38vv88f3f7ySeFxOBD
Cdo5j2l1MnoxnhX6MqbSp/P3wQgHra7OSjBVr08YVvY7PZNiQ1eHao1utZ+R
fU33T4OkJl3dFvV07Eb58FV+0gd6fWai0jTmEcKHWaJSh5Lp9Jw2O6HN3Qgf
zhf4NCFIp//I3LojnKrjBm0Vey/JS6cXsb4rUCMpLEDBLroPdmnMQYSHlO9J
q411ps47qcLRG9fp1UK68PZxvQaUr8of/Pg+DuFpjhqbRjqOWcARTM0O6PzV
t6h3PWfQFX+usjqTjvBhn9b4nAuWZ+Cs5yIbRxF88Hpvj//h9WAhaOw31rwR
PslhiJ1jdvH0Xsug/HSgXEyfO+NNJuTyaZG31Eed8Fu3HUhWVrvofZdWJyyP
Y+7ZRlsQj5uBR65so9XVl/oMfgDhaXNb+NSU6Orw8PzrWJSnWd84fJ2+bn10
50X/R9eXx1Px/f/bskSUivRWodBu3++dsYVUyNJqyb4kS2QvSyQRlQhJKVHI
krLfO0RZUhJaLCkqZS9lX34zc8fM7X6+v/cf7x6d93mfeZ3XnPs6z+fzzOt1
EH53c8uBf/SZIvXon6Ywv/vjY6pLr+dwRRx+P7NnkOJg9TS2kk7/ObHd8oAQ
zO+21X+zfL/xNvUUxo8CSF4p6WwqUG3ioZ8Ne6Sg2lvJKJ8KSLjr2e8ZAClW
Gwu7nw2B8gu5Da8g+JaNMvQ50xy6YnDb39L2GpQ8J5SRvUDoXTcYdMWu/9xm
Tg0lgm/jj3276JoGeY5w2JnC/PqYaPPVlHxTMGfxYliw5GEI3D6lhryvxNet
63cfYgKl7i5eEuiZp/qERaB2XkiY1ok74gtEihZz9EoS64RLS+WUzLJCcrvx
92dedOsqxvc473WYd5xlCeXKo1uH+z6y6yO8o/tnVj/9ut3c5XwE0R80djP9
o+dsnmj5UGrISbHX6hsqodN/zqR+vPM7lI86FTmwQplOL+r2Wclpcq2d6tcy
+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
XMQbcN16JWQQSEHxf9eYkH3m+YfAupAYmR98edSn/TQ/yyrtO6+jsAY4U7OG
97M0kW8uzvTgtne3OvnoZ80YaX9iPau+XL7hynopkq4N28w6u434fJ11Pg4X
yHxWndbmO/M0oBH38zLJU+NKEVzlVjNnTIXXDeF+TltdLinbZVSaQlLVEpWX
xuMGlcspLl3mQoWGi+4BzRvEvYHnE9IyDzK9qFzO1feQe00h/lzd/P3teRfq
KTJK39ZeHCfy/cXT9zbt/3uZanPqfbRhyXkqhOX1fP/8ZcDsCz+UlVsyardi
NfQ1WnoeaX8ubslrOm8C2dlx/WhLtYeK4uc3T8LtbYaV7yknAdBz88s/1+qC
oA6pGuYmuJ373bPu61X6YO6v/n27gg9BO8SnjZE89F25WRFcUpPAKd1bq6Iy
/lD1XtSgz/0a3itNMbcBDBf2rDYkHaJOL513n0uv2p0ZS/a7btQ3sCEIt/+7
0YQvqBVE8un49PjIJzuifkJQkxan2y61uh0pp8p28+P+iWnu45XpVC8/dyZg
deEwgTNnbt7d/HjPhVKZM+s7y35Y4H4+Z+GQ7n6QUmF9/sAvLtsU4jyl3NVz
38r5ytGbZZxcF3rw58aqfBfjl2OiWi8ElHxa/51YDzZC76411FCv9CgEqco+
prpGYd9RSKg8ax3Tg6QlDh92TNCA7AplBJH2smmjdA/rS9D+BrmS4uF4SHwZ
ubF2fhQUNc4u/7ToBc7Zba2QOJ0NOXQeiZ38Mwru1A+W5MkOBe0t75/MqA6H
pHco6urA4xzPSlOUurMbDCn/4Lx9xWbou1vuIKo/l3Q5P9JIAiaELnqHRoRT
92F1llrTfa85ArXkYyJcW1eME/fNGb1ybv2S/ZjkblpEjtAkdPvs47b5qh62
anqzGdX9dUQe0KWhMlXP3zblYU6eeSrycrifxXcPqg5zPiw9mveIbUbCB/ez
southlzA54r4D34xm6OL8HGuOVkOJJqJUP6Lfy697ugk/twhe+UWXwUxat6W
XkFNKyb896gp9zPuO/k79Sz/uvuafxqp1+Mm0Xm9kRvTf8jpCj3sZA/r4T4G
2WnNr0J0mGcNLEJ5no+gU35fH9088Qh6IcN8a+grjFs2sjNFCSaC3Vdy89oO
1UDR8+r1HDBOEOptHR9pugeGbEtQtShIg3ZJXfaUnhgFOVneD5soHgS7XAIz
riiTIIuoifuIPvPpxtnvA1oVAEvtRy0ehzTqyCuan6egy5tVqr+TjSTGv8so
1xB56xemZ+7PtpEe73YvuBmZi8/35hoTa/+PEWrvFJXiYzqP4P4BN47ExfX5
lb/5JqBlTldvQUTqtqO9Z1XpsueuXe+7Q3A/f+tPjuC+/7fi/X9tvMXPiPjP
dPLIzLi3AkXB7rjw4Atm4lzy69uXxoNKVMeJqj7bEU7cz7ZJ5/5GKs1TC1bF
RzZHtFFrmRrQeekztZ8Mdw6D5NxjNZ+12UKczF+E7sPtFeuV+TylaqA8o3vM
FOliqN8U3LcnHNFtPnLufPAItLv01bN8+DUkVEh1Wrs4Al4aTPvONVgGPu5z
Zw3Xz4K+C54RsHk1CjZctquXTHUAR3yNxkqD9kDXq8rikPjD+avmquuPFmDj
qalkWfEs6lgxbV+49jztDNfXeXKSzf18R+1X+Lw2DAhtUL4ySHovdKV+gK4+
gL03t05qUapabppw+rZhG8LPnMzRFLHz5e++JYLmwC78fmRZzP/f0XainsDG
8F/6VL2G0una3Nb33R4KS+2CUpnoe2F+jrSH4Plrssumf8plMFW++s+UrfjZ
I7y9A3tf3Wg7he6+jw5QNVidomjXuW7wxS+cV/7NtkPfI4i2M+P8/cnID+de
W02q7URVl+3IFG6nsupj9P26o+2cOI+7tM3tV5IPO2QQejWkOaJW7fHHUNSf
Zkmf0ff+ZFU83N4GLL33n3bVa+MNY6CkIzwRUJsJ6T8rY1TPrFpUdEXWg19I
rBq8HsCP2Hq4qQA680m/gvprQ7+IWkoCR7ds5Nu1dRSsTAhbgayTTbtvsMHr
BPR/qIuuk4tsj4SelRaDWzzPJ+T0SAEvFOPAnJ5R8MzK/lsHWmrA/tblVOVb
i2QH8s8TyrdGwdwG0W/I+uE/tmzmvH4WWPM+BF0/oZrmUztsPMFtdy8WlQYp
kAzusqD3ZMVg6+qgj9EkvK5APWxdiW+wDzwZ1QnctvGLkxW/oVaO6VqLY7T1
JnwKac8CltZbX1KbjuosO5Boc/+BozYF93MYtg7vo+2v8PeyP+dTv5jMX1KL
0JXqgdL7+HvkxdZnF9pO1AcIun2vZseqTLX7acIp24aN8XVyCFu3+Wi7Db5O
XFwpaBz2YDlZAsdh3J6ZXeNoHD7rX149LeGDj2N4yxGNw3dPn46H4zA+js/W
E2gctpwa5IDjMG7P5gpxNA7r/HLjgeMwvn7Wy4leQeIwe25hEhyHgaU4PCw7
ZYjE4elAJi84DoPLNWlxeGLve0EkDvMmHE6H4zB4q30FGocbcqvZkTj8+0l9
FhyHwXDV82gcds3J/I3E4S3em7fDcRjc33UVjcNdzDdHkDj8U8EpFY7DoBUW
hwtvXEPjcPsVB3k4DgNLcfgtFof5Jbw64DiMv5cDWBy2kZKqhOMwUVcBi8Ne
SodT4TiM+8e1eQDFFfvnyjfAuAL38xsMVzi4TJvAuAL385rsABRXPLaSW4Rx
BT5O1cBRFFdwCu7N57zQgz93g53EZgRXRCZpp8K4gvi+VEwMxRVK/hynYFwB
LOEKvi3OLxFcsaJ63R4YV4DXMFzx6FzkXQRXhHOcvQfjCnAdhzqKKxYqy8sQ
XEH5LXwHxhUgCXRHcUVD4EYUV6wVbTwK4wqwq5+GKwzmVFQQXGErq3cYxhXg
CIYr7pewuyC4QpXUawfjCmAJV+SmH0BxxY2XWlwwrsDt34XhirvzZ7RgXIHP
NwLDFXtm2hphXIH7p/u7MYqTJeCfNoyT8d9LOIaTScLfhWGcjPuZxeMcipOz
BIzEYJyMj2OdkIviZJf4plAYJ+PPHcsz+4DgZIdWie7IcaJuxi+RYhQnX3Av
toBxMrCEk9sxnEzufUKFcTI4iOHkm1ZuPAhO7vRQLoFxMjj9hIaTI39QGxCc
/BjiegLjZJBdqBbFyU4/NL8gOHnLcLQQjJPBd7toODmKmRKG4OTBKpFvFzP+
AEs4uT7jC4qTTcQO/TAgHQKWcLK/XRYVwcnNnXfvwDgZt78Cw8nSZh3uME4m
6tjM0nDy0+nSgzBOxv1jEMURiPA+zvDwJ3+9M3A/i2C87/P1nC0w78P3weAH
NN738xCPNMz78HFeFsSgvE9o231xmPfhzwWSAzcivG/PxOcNMO/D7eyx34/y
PtlXK765FZPweJKzrwLlfT0NktdmqS+BJd5npPekFOF90Sr1X2/4bwKvY7yv
toTG+zqbt4yv/SsPjmK8L5AtHuV9or61yjDvAw9jvA+qWonyPk0T1vJ+vjxg
ifdtvLkF5X1+x0df9kgTdR5GR0XvIrzP9dxJZZj34fYLYbzvTBt4FuZ9+HwP
GfehvC/g5wNOmPfh8YGnJwDVMXgcS4eH6rRwPz8to+kYwiwLb4+2XMD9vKa5
AdUxHGK/6niJEnU2Sg2sxhAdQ/z8o+RsHk78ue19VUqIjqG+LyF8V/dK3E5F
FZ8WRMdI/E9879Ua4j7NZ5um4hEdo0pqBc++NhdgScfoxnSMSS/ut+buVGBJ
x/BzM0Z1DHESb1SLVhuwpGPE9L6qQ3QMmY0x5Vx5+cCSjpHWtWI5omOwfl8c
u73qAFH3dWtFFqJjDJwG3n4wzCfyBQ78vYjoGJUNaQ9Zm4j6Dzd9aTqG68r+
ZE5bAhcZKdaiOsZo0QabihRn3D8Toqr8iP6W/I5c69hN1Nn4helsjlWxoz7G
+nj/tZjOlimw7LXa6Th8fElMZ3NpeiA+x0PU4dTCdLbQ/invJgkb4nd3++sw
orOxa62JtbhE1H9IwXS2+6POsx+/EXUwjvKXz9lr8QDP1HarOAYfA5Z0NiFM
Z8vMuSEkWyxP3CNpvdoa0dkyzt9aJsfcSpzrYTqbeHX3hVt+xPr80UtCdbYs
QV2bqt6juP2xbFKozjZLMiO5KhL1V4ccZQNTqiZVBIdWS6/YOIyvT7nTDu6G
t0zL+TunzeeNCH3SsFrsa6j79YrRJ+XVfh6EPtlhzd3aU5dYeWdPTTfETeiT
vHvneS+2Hqdc9SzcXC9O6JOar9lP2UR9ofj4GvraRBH65Ji50Y89V8WoXwXk
vWq/0umTTTLXBj+uA/LH3i3OlRM6pNe+sG9Tec/JdyUL3yToEzpksU3z/U2i
cmSnoJnGkEqiTuD1ooXHfRrepOtm4tfau/1wO01rInS+VCWqffgv+3171w18
XgtN/R80U7RVP6tumpRMJvjXO6xeqClDvVD/mQ+qshX8lR/GpNPzWQm98dSY
I/O5L2soM3wfT315R+iNvq+yfruGfqTIU8+lypUReuPeOOjTDP8Jqn2fWPC+
RkJv9AF+pQgvS6eOLj9wzdCOSoWw3+kfqutm4TvawMdg30Mr5wxx/fBKPoe1
zFgF2dRFdlNs7jN8fMGLP6aDNq0lvya5vdK5sw5vX641xnrZXJ3EYyh/V7yQ
jNvPuT1dLIF1t9rF52afPP+K4/7ZhdXzXFb7bz3PpppM3TVtAZQnIZ1P2AwJ
3e/C6cLY2zbq1E98+xYWzhG6HyfH81WSWbXUaqF1kuejXlJfYvXKgiOO+NT1
LIMENM7PBQGboG9SpWj8j78QwOnxTBmozDFKTIpQx8cJ5Yrk1G28TS4Wir/v
lUB8lyheNO5Zs6mR5Gv8uNmxvobQJ3/1HXNcWaomdsbg9tkjj/B5fcHqZ95n
qJ8Z6CxvmLr5MtVQVMt7guk89S2GE55rkOOvWvBDqW+pH87Df6a7WqA4AVTS
tsjwN4Fe/1TWdOmwg1yH9csQnJAX/tQmQmQlILbS/NyhGi7c/ubDWut+tqqS
NSeFc/5qSOPPfeCUOJBbsZV0S87usILoOtx+f6z+ZAdD/UmNLTerotfoQEc8
Xu1/6EGGDqz5bYi0i2zMG7OJiIQC2bfNiddcgdKtPHLNF0bBWMcb+ux3r5GP
V6wP1R0LIepghGWN2+4OJU0NrLn9cIsz/lwNrB5jIVaPcQirx6gyLtpq6nMX
MvjxZDuXYQok0SRwanJyFHwaI7hlXUQVSeOzvMrvDXfwcV5h9QaPMdQbPPq6
/ezn9d7l3xh4NzBU0L4Q+Kuii4Evz/tI/xY3k/kfXhyWuDXN0liO6sHAf9MO
ambtSJmkprNfR3luXVQn6jfxLwtJNbVnIeNKzeYamM++9v7j+wz5jvTshEt0
OARJTnZGissWg6XKuuo37o6CPzRodfxkGer4iR3+4B3kVQWuWxuyzcarECyr
cv/z/sEoGNDXUSG6PRHcq+xaYBK2B1z//IPyGtj/zE7iVsLBGqAX07N8OZhv
tlJ9ixB7tla9MXWLyQGGbtJ4pfgf2vst+LT5gP3sOzIjfyzYDbhskXlOYuSJ
0aYDfpO/Gip+AoM/Kujq9X044yxqWspFCax7OSFuPYCP87nDv04gl4daY+TY
FhD8G/enq/P9lbvDW6hipfKcK89QAfl42u/08EnVZnDXIUh4LufuKf8DoP5r
ZjUE3x7b6JrH75sMza3icbvAng7qLSrojk6NgmSsLt97rC7fGFaXzzb6yC5v
pyTQs7a3pkU8GrTOOdsxPjcKju53th36qg0e6Suc33RjKzj6wSkKPR95x9oe
e7EAEBa2Ipl4XwJIGA55Lac8vDepk1zrZpvqUFZA7I9rvaQUTjeQBBx3eZvS
1T/0v5bnNgw1VpZFD/bcoquzF9Jr+eTS21eUJ6K//n7rJL5LcWpq+OxIvkad
NZ6LefU8EpDA4sCDyJGM6BBBqGankKmFjCC4mkpB49XuJ7Fv3XKsoS9lx4o+
lJwCeSfdjRFd4jxWN+86Q928N683NST+twOEno5kaXzdBHolR4+husRZJcUj
vgmA5Mj+Xr2docAAxr/c0hI2Sg9Uk215lrWxldwnvsN87DO2NqKAND/efHts
wxV8XrmT1LUS/mco+08tG35MV+9O9U//orCjKlV2UmCzQJ8i/ntZd0ikpOfw
M2oB6bzHDaU6QESc9tyK3LKze4T/g3TedbgYPhIH67wb0LzLE1idulm9f+vU
ZXdGpsl1WQN/fpnkZ7iZ4bymIML+xq3my2TKDc2ydqFA3J7EnlVzNmcDSVVJ
2UcNNxC8pvtmf/KqI42UnysPXsinqyPnuwZq1dM+QtWvzKtk+3sCH5+VI+Rs
Vt0LajWz3oLc1RYgey9t3Xphdd50Geq8nV1tdN+8Rp3sQa1myTpI4CsBfo+D
HgO7SS2+aoedthH4n5y6rwGpt3a3SUNoiq7e2lx/yNx7xxNUoXuXTZYrugJj
mD3VWN2zIIa6Z+aHL1r38tWrrd4tncd7hIhvcoFfP+Tf+ELJ6Ei4voWuzpi8
lw7v9L3Ukq/cY84JUXH4OR2PEw3Xvcv0k+LdOIyfN1XLX1/JHloDBZfaWJ48
RIE2SV9fU+48ClJdaHW9po7S6np5YXW9CgNPe/T0loKJT9lSVqc3QTO3BT0y
OUfBVEzfK9hwebUYnb43HbyJFxmforDTDh4ftJ9MRMfPwfS9wRfRXoi+9xzT
93Q91H2Q8berku7C44Nry6LdkfHzT9HmJfi2XvR6VBzOj6hYfTB5hvpgftXL
0XN2eTBK/OVvLry/JFY3zJihbpjxKxquo9QmP5FIJvaXzvpIfkSvljYU9y8f
fg1+u6uB6tXXE995F5O2lssFtruL7ifynuZAZdblLumlXRwXGroeEffw7hNt
MwLKPCqa/vRlrhRwxnFF5ceg41IsAZWLUhaOgA2BP4213u+Y0NChXFS24n70
dh+BNxYo3KTPrZRke/GXlnd7Cd0+i+3cpPomqmhj/aUtB4g8OybsH/U1D0pJ
3MQ9kiumNrjA/YGmjLx/+ocr8X5Q+9xKrogE/xn/0Z+Ygr8aOuTsY/7/2HO+
qnLfbpYAknbu1X/sD70+p0su81BzmPh3vsP50uAT0lZVkWfp//gtKyN0jxA5
s7xxKEqsascNvH3B+u+4rZ1Y2Wf9n0FjrivxdZvof5PVp2Ck4piVxaZAKSJP
arbYfmpX92Rl9Rm98T/3f+P2zGbt/CDqWkvZJVHydJ8ucX/lxOQtuTySMbX5
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
2qJyFxn/Dxip6Kc=
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{355.9373755269871, 232.00658414001117`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.2747297389291796, 3.1522248392608483`, 1.1991672666041377`},
  ViewVertical->{-0.030769633338502356`, -0.35304806419073986`, 
   0.9350990824695453}]], "Output",
 CellChangeTimes->{{3.873990321497046*^9, 3.873990360775103*^9}, {
   3.8739904473306847`*^9, 3.873990464200592*^9}, {3.873990872278893*^9, 
   3.873990919027059*^9}, 3.874159136663022*^9, {3.8755558482089767`*^9, 
   3.8755558932016897`*^9}, 3.8755559505015*^9, 3.875608779518321*^9, 
   3.8756088177909117`*^9, 3.875609114922443*^9, 3.875609219817253*^9, 
   3.8756092918127728`*^9, 3.875609407247745*^9, 3.875609923334978*^9, 
   3.8756100088746634`*^9, 3.8756100495201063`*^9, 3.875610324372719*^9, {
   3.8756308878810797`*^9, 3.875630909639102*^9}, {3.8756309723720417`*^9, 
   3.8756309839787493`*^9}, {3.875793688799498*^9, 3.875793762933404*^9}, 
   3.875793809674142*^9, {3.87579388026549*^9, 3.875793950754942*^9}, {
   3.875793983408401*^9, 3.875794009499598*^9}, 3.875794095587812*^9, 
   3.875794161135518*^9, {3.876262291859777*^9, 3.87626246603272*^9}, 
   3.876303016099277*^9, {3.876303046360381*^9, 3.876303060703002*^9}, 
   3.876303166841649*^9, {3.8763032965986233`*^9, 3.8763033484401903`*^9}, 
   3.876304488458064*^9, {3.8765854097658377`*^9, 3.8765854342919397`*^9}, 
   3.8766053438907347`*^9, 3.8766054325317383`*^9, {3.876605611999731*^9, 
   3.876605636894302*^9}, 3.876605824673028*^9, 3.876606187883404*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"2224e9a1-91fd-4956-a13a-e6d262ab9b10"]
}, Open  ]],

Cell["\<\
Set parameters for the sandbox
  xmin, xmax, ymin, and ymax define the borders of the sandbox
  nbox is the number of gridpoints on a side. The sandbox will be divided \
into an nbox x nbox grid and sand will be moved between those gridpoints.\
\>", "Text",
 CellChangeTimes->{{3.718713496465699*^9, 3.718713510617713*^9}, {
  3.7187138394293213`*^9, 3.718713844168648*^9}, {3.71871396171179*^9, 
  3.718714028208855*^9}},ExpressionUUID->"1bb1f213-cb72-49cc-b2d9-\
4588364d7295"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xmin", "=", 
    RowBox[{"-", "4"}]}], ";", 
   RowBox[{"xmax", "=", "4"}], ";", 
   RowBox[{"ymin", "=", 
    RowBox[{"-", "4"}]}], ";", 
   RowBox[{"ymax", "=", "4"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "running", " ", "40", " ", "nboxes", " ", "causes", " ", 
    "findminimumcostflow", " ", "to", " ", 
    RowBox[{"stall", ".", " ", "50"}], " ", "nboxes", " ", "finishes", " ", 
    RowBox[{"running", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nbox", "=", "50"}], ";"}]}], "Input",
 CellChangeTimes->{{3.718713513661891*^9, 3.718713530016432*^9}, {
   3.718713846896575*^9, 3.7187138489240103`*^9}, {3.718713887380218*^9, 
   3.7187138879316025`*^9}, {3.7187141179093075`*^9, 
   3.7187141263052235`*^9}, {3.718714370879244*^9, 3.7187143931580024`*^9}, {
   3.718837776609479*^9, 3.7188378312984858`*^9}, {3.7320306658514137`*^9, 
   3.732030669358096*^9}, {3.7320311116333337`*^9, 3.732031112117734*^9}, {
   3.7320311560831895`*^9, 3.7320312028903494`*^9}, {3.7320314071613874`*^9, 
   3.7320314080677214`*^9}, {3.73203150154478*^9, 3.732031504086841*^9}, {
   3.7320315454472227`*^9, 3.732031546419386*^9}, {3.7320458525475364`*^9, 
   3.7320458529452667`*^9}, {3.7326326839670534`*^9, 3.732632685008771*^9}, {
   3.73263274972233*^9, 3.7326327835315876`*^9}, 3.733231966505395*^9, {
   3.7332320039813833`*^9, 3.733232005643506*^9}, {3.7332321125974092`*^9, 
   3.733232113331465*^9}, {3.733232145644101*^9, 3.7332321461597514`*^9}, {
   3.7332321860642796`*^9, 3.733232186445855*^9}, {3.73323221920685*^9, 
   3.7332322520727825`*^9}, {3.733232290109403*^9, 3.733232318874716*^9}, 
   3.733232540569396*^9, {3.7337936188054357`*^9, 3.7337936487083664`*^9}, {
   3.7338383631922035`*^9, 3.7338383639750013`*^9}, {3.748914448810422*^9, 
   3.7489144505583835`*^9}, {3.748914875540037*^9, 3.7489148800757647`*^9}, {
   3.841479224685567*^9, 3.8414792250605726`*^9}, {3.8414793421775713`*^9, 
   3.841479342417571*^9}, {3.8414801070125427`*^9, 3.841480107211527*^9}, {
   3.87555592001357*^9, 3.875555920158445*^9}, {3.8756099159884777`*^9, 
   3.875609916096182*^9}, {3.875610043855516*^9, 3.875610043974502*^9}, {
   3.875793682680879*^9, 3.875793721473713*^9}, {3.875793875586993*^9, 
   3.875793948476336*^9}, {3.8757940069226294`*^9, 3.8757940069971533`*^9}, {
   3.8757940928913403`*^9, 3.875794092991233*^9}, {3.875794140097681*^9, 
   3.8757941564047956`*^9}, {3.8762623771585283`*^9, 
   3.8762623772471237`*^9}, {3.876262433417536*^9, 3.876262433544656*^9}, {
   3.876585405505458*^9, 3.8765854058776283`*^9}, {3.87660518827043*^9, 
   3.876605188399829*^9}, {3.876605340498394*^9, 3.876605340838002*^9}, {
   3.87660559796305*^9, 3.876605598071498*^9}, {3.876605633217105*^9, 
   3.87660563331977*^9}, {3.8766057335684757`*^9, 3.876605733755821*^9}, {
   3.876606176507572*^9, 3.8766061766473217`*^9}, {3.876924163356978*^9, 
   3.87692416376956*^9}, {3.8779842095968437`*^9, 
   3.877984211167688*^9}},ExpressionUUID->"c46fd729-895e-44ae-9525-\
59dd9bf3d2c2"],

Cell["\<\
Set parameters for the optimization
  gridboxcutoff is the minimum amount of sand that a box must contain to be \
included. Specifically, if the difference between initial and final amounts \
of sand in that box is less than gridboxcutoff then the box is excluded from \
the calculation. Set this to 0 to include all boxes.\
\>", "Text",
 CellChangeTimes->{{3.718714837186059*^9, 3.718714877180376*^9}, {
  3.718838284211881*^9, 
  3.718838346993821*^9}},ExpressionUUID->"04339642-b964-4f9e-ad5d-\
8ef64a024b98"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gridboxcutoff", "=", 
   RowBox[{".0001", "/", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["nbox", "20"], ")"}], "2"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "scale", " ", "to", " ", "nbox", "\[IndentingNewLine]", "divide", " ", 
    "by", " ", "nbox", " ", "square"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7187155840273438`*^9, 3.718715593315936*^9}, 
   3.718837834737796*^9, 3.7338383153381925`*^9, {3.8414934264833436`*^9, 
   3.8414934476196184`*^9}, {3.875608785270916*^9, 3.8756088112454576`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"2a5d1af2-5d1e-4a5a-85f3-30db64d15748"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate Derived Quantities", "Section",
 CellChangeTimes->{{3.718713923550826*^9, 
  3.718713930889989*^9}},ExpressionUUID->"61a6fe87-0b2e-482d-8c84-\
753eac290ab7"],

Cell["\<\
Normalize the initial and final sand distributions within the total box.\
\>", "Text",
 CellChangeTimes->{{3.718713478992344*^9, 
  3.7187134885471244`*^9}},ExpressionUUID->"ad0732b7-e6df-451c-980d-\
51a684a42f77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"finitnorm", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"finit", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "/", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"finit", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", " ", 
      RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ffinalnorm", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"ffinal", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "/", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"ffinal", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", " ", 
      RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7187132897194853`*^9, 3.718713321111663*^9}, {
  3.7187135349379406`*^9, 3.7187136370391617`*^9}, {3.7187144047611823`*^9, 
  3.718714411501978*^9}, {3.7489103073135967`*^9, 3.7489103183341403`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"0f22cf90-5a25-4ce3-a902-6c597856a554"],

Cell["\<\
Calculate the amount of sand that needs to be moved from each box of the grid \
and store the results in an nbox x nbox grid called diffarray.
This is the difference between the initial and final amounts of sand, so a \
positive amount means sand needs to be moved away from this box (sources) and \
a negative amount means sand needs to be moved into this box (targets)\
\>", "Text",
 CellChangeTimes->{{3.7187140698282948`*^9, 3.7187140763068504`*^9}, {
   3.7187149943912573`*^9, 3.7187150387746525`*^9}, {3.7187152642361326`*^9, 
   3.718715281446309*^9}, 3.747570827784646*^9, {3.747570864771738*^9, 
   3.7475709001404667`*^9}, {3.747571046420991*^9, 
   3.7475710917247972`*^9}},ExpressionUUID->"36e4f744-d1a7-444b-b926-\
cdbac989a41a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dx", "=", 
   FractionBox[
    RowBox[{"xmax", "-", "xmin"}], "nbox"]}], ";", 
  RowBox[{"dy", "=", 
   FractionBox[
    RowBox[{"ymax", "-", "ymin"}], "nbox"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffarray", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"finitnorm", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "-", 
        RowBox[{"ffinalnorm", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"xmin", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
         RowBox[{"xmin", "+", 
          RowBox[{"i", "*", "dx"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"ymin", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
         RowBox[{"ymin", "+", 
          RowBox[{"j", "*", "dy"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nbox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "nbox"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.718714081814747*^9, 3.7187141129027367`*^9}, {
  3.7187141544741526`*^9, 3.7187143172783017`*^9}, {3.718714421055709*^9, 
  3.7187144213419113`*^9}, {3.7187144546094537`*^9, 3.718714464540495*^9}, {
  3.7187147534778547`*^9, 3.718714755470257*^9}, {3.7187149653917446`*^9, 
  3.7187149895938635`*^9}, {3.718715133954979*^9, 3.7187151581871185`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"3304fdb8-6edc-4663-b71c-762e2a83631b"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "precw", 
   "\"The precision of the argument function \
(\\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"-\\\", \
\\\"0.31831082216952245678840713218895807287`10.\\\"}], \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \
\\\"+\\\", \\\"x\\\"}], \\\")\\\"}], \\\"2\\\"]}], \\\"-\\\", SuperscriptBox[\
\\\"y\\\", \\\"2\\\"]}]]}], \\\"+\\\", \
RowBox[{\\\"0.31831093461651419705818242351816896111`10.\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
SuperscriptBox[\\\"x\\\", \\\"2\\\"]}], \\\"-\\\", SuperscriptBox[\\\"y\\\", \
\\\"2\\\"]}]]}]}]\\)) is less than WorkingPrecision \
(\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)).\"", 2, 17, 1, 
   30235735853934521227, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8766054327050753`*^9, {3.876605612226693*^9, 3.876605637071641*^9}, 
   3.876605824825263*^9, 3.8766061883308973`*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"e91fd8ae-9a5d-4cda-9098-9e0c93549fdb"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "precw", 
   "\"The precision of the argument function \
(\\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"-\\\", \
\\\"0.31831082216952245678840713218895807287`10.\\\"}], \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \
\\\"+\\\", \\\"x\\\"}], \\\")\\\"}], \\\"2\\\"]}], \\\"-\\\", SuperscriptBox[\
\\\"y\\\", \\\"2\\\"]}]]}], \\\"+\\\", \
RowBox[{\\\"0.31831093461651419705818242351816896111`10.\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
SuperscriptBox[\\\"x\\\", \\\"2\\\"]}], \\\"-\\\", SuperscriptBox[\\\"y\\\", \
\\\"2\\\"]}]]}]}]\\)) is less than WorkingPrecision \
(\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)).\"", 2, 17, 2, 
   30235735853934521227, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8766054327050753`*^9, {3.876605612226693*^9, 3.876605637071641*^9}, 
   3.876605824825263*^9, 3.876606188388838*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"5ce96587-9338-45f2-af9a-f387c413c9be"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "precw", 
   "\"The precision of the argument function \
(\\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"-\\\", \
\\\"0.31831082216952245678840713218895807287`10.\\\"}], \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \
\\\"+\\\", \\\"x\\\"}], \\\")\\\"}], \\\"2\\\"]}], \\\"-\\\", SuperscriptBox[\
\\\"y\\\", \\\"2\\\"]}]]}], \\\"+\\\", \
RowBox[{\\\"0.31831093461651419705818242351816896111`10.\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
SuperscriptBox[\\\"x\\\", \\\"2\\\"]}], \\\"-\\\", SuperscriptBox[\\\"y\\\", \
\\\"2\\\"]}]]}]}]\\)) is less than WorkingPrecision \
(\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)).\"", 2, 17, 3, 
   30235735853934521227, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8766054327050753`*^9, {3.876605612226693*^9, 3.876605637071641*^9}, 
   3.876605824825263*^9, 3.876606188414113*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"0e74be27-844d-4606-976a-bf1b35fb4299"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"precw\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 17, 4, 30235735853934521227, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8766054327050753`*^9, {3.876605612226693*^9, 3.876605637071641*^9}, 
   3.876605824825263*^9, 3.876606188435504*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"df22d321-d0b4-483c-b45d-390a257675d4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Create Necessary Inputs to run FindMinimumCostFlow", \
"Section"]], "Section",
 CellChangeTimes->{{3.747572405771767*^9, 
  3.7475724495852785`*^9}},ExpressionUUID->"4947032e-3eea-44ff-891d-\
6adbdff643a9"],

Cell["\<\

Create lists of all the boxes from which sand needs to be moved out \
(outboxes) and to which sand needs to be moved in (inboxes).
Each entry in one of those lists will be a list of two numbers: the x and y \
coordinates of the center of the grid box.\
\>", "Text",
 CellChangeTimes->{{3.718715393471553*^9, 3.7187154746689825`*^9}, {
   3.7187155475985956`*^9, 3.7187155707979794`*^9}, {3.7187159199009247`*^9, 
   3.7187159375484276`*^9}, {3.718716818132281*^9, 3.718716839031063*^9}, {
   3.7320481965056753`*^9, 3.7320482074735203`*^9}, {3.732048253913473*^9, 
   3.732048254874402*^9}, {3.732048302752951*^9, 3.7320483353762054`*^9}, {
   3.74757182790379*^9, 3.747571829334055*^9}, 3.747572078460015*^9, {
   3.7475721406199784`*^9, 3.747572143906324*^9}, 3.747572220252279*^9, {
   3.7489098635711136`*^9, 
   3.748909867670958*^9}},ExpressionUUID->"929b6fe4-4875-415a-98ef-\
9a3e8fa4434e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"outboxes", "=", 
    RowBox[{"{", "}"}]}], ";", 
   RowBox[{"inboxes", "=", 
    RowBox[{"{", "}"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "nbox"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nbox"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diffarray", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "gridboxcutoff"}], 
          ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"outboxes", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"xmin", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", ".5"}], ")"}], "*", "dx"}]}], ",", 
              RowBox[{"ymin", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"j", "-", ".5"}], ")"}], "*", "dy"}]}]}], "}"}]}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diffarray", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "<", 
           RowBox[{"-", "gridboxcutoff"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"inboxes", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"xmin", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", ".5"}], ")"}], "*", "dx"}]}], ",", 
              RowBox[{"ymin", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"j", "-", ".5"}], ")"}], "*", "dy"}]}]}], "}"}]}], 
           "]"}]}], "]"}]}]}], "]"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7187151011727943`*^9, 3.718715117019005*^9}, {
   3.718715160978093*^9, 3.7187152354207497`*^9}, {3.7187152967701454`*^9, 
   3.718715389759921*^9}, {3.7187156660373745`*^9, 3.718715666405613*^9}, {
   3.7187158859058685`*^9, 3.7187159117441483`*^9}, {3.718716801836755*^9, 
   3.7187168126474085`*^9}, {3.7320454350464597`*^9, 3.732045475137607*^9}, {
   3.7320457835063353`*^9, 3.7320457839907713`*^9}, {3.7320459096176043`*^9, 
   3.732045914589596*^9}, {3.7320464038568344`*^9, 3.732046435487783*^9}, {
   3.732046561441983*^9, 3.7320465621295185`*^9}, {3.7320472556593637`*^9, 
   3.732047292387204*^9}, {3.7320473932194576`*^9, 3.7320474334639626`*^9}, 
   3.7320483527897673`*^9, {3.732632461103332*^9, 3.732632483734434*^9}, 
   3.7326325609955654`*^9, 3.7337936572063227`*^9, 3.7475711172050734`*^9, {
   3.747571190786585*^9, 3.747571242142131*^9}, {3.747571329054353*^9, 
   3.747571378354741*^9}, {3.7475714173245277`*^9, 3.7475714285559196`*^9}, {
   3.7475714797340403`*^9, 3.747571530544854*^9}, {3.7475718018644857`*^9, 
   3.747571819019231*^9}, 3.7475719317060776`*^9, 3.747571992940705*^9, 
   3.7475720498855886`*^9, 3.747572148700659*^9, 3.747572215160716*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"b47c93fe-f966-4cca-abb6-4d4e4ad0a41d"],

Cell["\<\
The variables nout and nin are the numbers of boxes from which sand will be \
moved out or in.
 Their product, nvars, represents the total number of possible sand movements.\
\>", "Text",
 CellChangeTimes->{
  3.747572202183044*^9},ExpressionUUID->"aec06be4-0abb-4209-98bd-\
cd2962e311fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nout", "=", 
   RowBox[{"Length", "[", "outboxes", "]"}]}], ";", 
  RowBox[{"nin", "=", 
   RowBox[{"Length", "[", "inboxes", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nvars", "=", 
   RowBox[{"nout", "*", "nin"}]}], ";"}]}], "Input",
 CellLabel->"In[20]:=",ExpressionUUID->"50c77fc6-14e1-4ac5-bfa4-f03dc7c276a1"],

Cell["\<\
 
Creating a graph of vertices and edges contributing to the flow (bipartite \
graph of two sets of vertices: source set and target sets) 
EdgeCost: Assigning cost to each edge which is calculated by the Euclidean \
Distance between the two vertices. \
\>", "Text",
 CellChangeTimes->{{3.7475721628591304`*^9, 
  3.7475721776949883`*^9}},ExpressionUUID->"555ba4a0-0cc1-4dcc-a180-\
33e6cc1cd530"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.732632593343721*^9, 3.7326326650452313`*^9}, {
   3.7475718419541245`*^9, 3.747571856638435*^9}, 3.747571982263337*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"41283e83-57dc-4bb7-b9c8-4fa2593fecf7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nout", "+", "nin"}]], "Input",
 CellChangeTimes->{{3.875793799868103*^9, 3.875793802614621*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"275892e6-15d7-4bc5-ba5d-5a64948be5a2"],

Cell[BoxData["746"], "Output",
 CellChangeTimes->{
  3.875793820835017*^9, {3.875793888002529*^9, 3.875793952134191*^9}, 
   3.875793984998168*^9, 3.875794019713022*^9, 3.875794102587914*^9, 
   3.875794169302956*^9, {3.876262298902234*^9, 3.8762624729171753`*^9}, 
   3.876303023061964*^9, {3.876303053307283*^9, 3.8763030675195103`*^9}, 
   3.876303173715815*^9, {3.876303303336472*^9, 3.8763033552100153`*^9}, 
   3.876304495365291*^9, {3.8765854203638*^9, 3.8765854444276037`*^9}, 
   3.8766053546908083`*^9, 3.876605443268002*^9, 3.876605619214157*^9, 
   3.87660565196585*^9, 3.876605844734748*^9, 3.876606202738798*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"00c3a030-56b1-475a-b161-37b561148a5d"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7320488798519497`*^9, 3.7320488811962485`*^9}},
 NumberMarks->False,
 CellLabel->"In[24]:=",ExpressionUUID->"9e1c6c9f-d0f4-4319-a17d-4e3a5ec7daea"],

Cell["\<\
Create lists of the amount of sand that needs to be moved out (supplyamount \
with positive values), and moved in (demandamount with negative values)\
\>", "Text",
 CellChangeTimes->{{3.732048402335739*^9, 3.732048457991173*^9}, {
  3.747571741412285*^9, 
  3.7475717430986366`*^9}},ExpressionUUID->"88f9deac-6a44-4609-bd3d-\
f79761a7858e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"supplyamount", " ", "=", 
   RowBox[{"{", "}"}]}], ";", " ", 
  RowBox[{"demandamount", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "nbox"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", "nbox"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"diffarray", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "gridboxcutoff"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"supplyamount", ",", 
          RowBox[{"diffarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"diffarray", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "<", 
         RowBox[{"-", "gridboxcutoff"}]}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"demandamount", ",", 
          RowBox[{"diffarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.732047307722587*^9, {3.732047369000198*^9, 3.732047396097019*^9}, 
   3.73204744306359*^9, {3.7320483605694847`*^9, 3.732048361937667*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"851fa3d7-0006-44e1-8b12-6fd1cdcc9bc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["New codes begin here", "Section",
 CellChangeTimes->{{3.8413586497106695`*^9, 
  3.8413586567506685`*^9}},ExpressionUUID->"e36a8e42-632d-439a-88a9-\
bbf3b66f071b"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "mat0", ",", "i", ",", "j", ",", "mat", ",", "k", ",", "l", ",", "m", ",", 
   "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.8414455693714323`*^9, 3.841445573032248*^9}, {
  3.841446523782212*^9, 3.8414465288888655`*^9}, {3.8414467553688374`*^9, 
  3.841446758540719*^9}, {3.841447872694888*^9, 3.8414478747358923`*^9}, {
  3.8414801748109426`*^9, 3.8414802033999434`*^9}, {3.841481094388789*^9, 
  3.8414810992017703`*^9}, {3.84148121384779*^9, 3.8414812146497726`*^9}, {
  3.841481352167692*^9, 3.8414813523376937`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"3222929b-4701-4498-bcb5-33aa4590e6be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Create", " ", "the", " ", "cost", " ", "matrix", " ", "with", " ", "rows",
     " ", "being", " ", "all", " ", "supplying", " ", "boxes", " ", "and", 
    " ", "columns", " ", "being", " ", "all", " ", "demanding", " ", 
    RowBox[{"boxes", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mat", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{
         RowBox[{"outboxes", "[", 
          RowBox[{"[", "o", "]"}], "]"}], ",", " ", 
         RowBox[{"inboxes", "[", 
          RowBox[{"[", "q", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"o", ",", 
         RowBox[{"Length", "@", "outboxes"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"q", ",", " ", 
         RowBox[{"Length", "@", "inboxes"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "FindMinimumCostFlow", " ", "method", " ", "requires", " ", "the", " ", 
      "columns", " ", "and", " ", "the", " ", "rows", " ", "to", " ", 
      "contain", " ", "all", " ", "boxes"}], ",", 
     RowBox[{
     "no", " ", "matter", " ", "supplying", " ", "or", " ", "demanding"}], 
     ",", " ", 
     RowBox[{
     "though", " ", "I", " ", "think", " ", "the", " ", "method", " ", "will",
       " ", "not", " ", "actually", " ", "use", " ", "the", " ", "diagonally",
       " ", "lower", " ", "half", " ", "of", " ", "the", " ", "matrix"}], ",",
      " ", 
     RowBox[{
      RowBox[{
      "so", " ", "we", " ", "can", " ", "keep", " ", "elements", " ", "in", 
       " ", "that", " ", "part", " ", "quatiling", " ", "to", " ", "0.", " ", 
       "\[IndentingNewLine]", "Now", " ", "create", " ", "a", " ", "zero", 
       " ", "matrix", " ", "with", " ", "#", " ", "of", " ", "columns"}], "=", 
      RowBox[{
       RowBox[{"#", " ", "of", " ", "rows"}], "=", 
       RowBox[{"#", " ", "of", " ", "all", " ", "boxes"}]}]}], ",", " ", 
     RowBox[{
     "and", " ", "put", " ", "the", " ", "cost", " ", "matrix", " ", "from", 
      " ", "previous", " ", "section", " ", "onto", " ", "the", " ", "upper", 
      " ", "right", " ", "part", " ", "of", " ", "the", " ", "zero", " ", 
      "matrix"}], ",", 
     RowBox[{
     "where", " ", "the", " ", "rows", " ", "are", " ", "supplying", " ", 
      "boxes", " ", "and", " ", "columns", " ", "are", " ", "demanding", " ", 
      RowBox[{"boxes", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "@", "outboxes"}], "+", 
         RowBox[{"Length", "@", "inboxes"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "@", "outboxes"}], "+", 
         RowBox[{"Length", "@", "inboxes"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", 
      RowBox[{"Length", "@", "outboxes"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", 
        RowBox[{
         RowBox[{"Length", "@", "outboxes"}], "+", "1"}]}], ",", 
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "@", "inboxes"}], "+", 
          RowBox[{"Length", "@", "outboxes"}]}], ")"}]}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"mat", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{"j", "-", 
            RowBox[{"Length", "@", "outboxes"}]}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{
       RowBox[{"Length", "@", "outboxes"}], "+", "1"}]}], ",", 
     RowBox[{"m", "\[LessEqual]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "@", "inboxes"}], "+", 
        RowBox[{"Length", "@", "outboxes"}], "-", "1"}], ")"}]}], ",", 
     RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "@", "outboxes"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "m"}], "]"}], "]"}], "=", 
        RowBox[{"mat", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{"m", "-", 
            RowBox[{"Length", "@", "outboxes"}]}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", "//", "MatrixForm"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8414481719044375`*^9, 3.841448263199439*^9}, {
   3.8414482987994437`*^9, 3.8414483691114388`*^9}, {3.8414485856880803`*^9, 
   3.8414486575770683`*^9}, 3.8414793839445667`*^9, {3.8414796056779747`*^9, 
   3.8414796184409695`*^9}, {3.8414796666909957`*^9, 
   3.8414796693719974`*^9}, {3.8414797189669995`*^9, 3.841479736503998*^9}, {
   3.8414797957833433`*^9, 3.841479808655347*^9}, {3.8414798408483453`*^9, 
   3.8414798409783597`*^9}, {3.84147992159634*^9, 3.8414800628595266`*^9}, {
   3.841481328512048*^9, 3.8414813388010445`*^9}, 3.875793730245781*^9, {
   3.87660389009202*^9, 3.8766039646544323`*^9}, {3.8766040101822023`*^9, 
   3.876604013907318*^9}, {3.876604069481089*^9, 3.876604084193413*^9}, {
   3.876604188980917*^9, 3.876604207241887*^9}, {3.876604251078076*^9, 
   3.876604256005031*^9}, {3.8766046287970743`*^9, 3.8766046377635937`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"c1d9eed1-0022-4222-8bd2-904ac3fed851"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "mat0", "]"}]], "Input",
 CellChangeTimes->{{3.87660465674741*^9, 3.8766046585749807`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"6c16e990-8c98-496e-a1f7-d6286a98117c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"746", ",", "746"}], "}"}]], "Output",
 CellChangeTimes->{{3.8766046405721188`*^9, 3.8766046699643087`*^9}, 
   3.876605355140252*^9, 3.876605443781749*^9, 3.8766056199260406`*^9, 
   3.876605652961513*^9, 3.876605846385687*^9, 3.876606204224636*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"de891336-1662-4795-9aeb-33bc37454bb5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Then", " ", "put", " ", "in", " ", "the", " ", "numbers", " ", "for", " ",
     "the", " ", "upper", " ", "left", " ", "section"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "<=", 
      RowBox[{"Length", "@", "outboxes"}]}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"l", "=", 
        RowBox[{"k", "+", "1"}]}], ",", 
       RowBox[{"l", "\[LessEqual]", 
        RowBox[{"Length", "@", "outboxes"}]}], ",", 
       RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "l"}], "]"}], "]"}], "=", 
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{
          RowBox[{"outboxes", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", " ", 
          RowBox[{"outboxes", "[", 
           RowBox[{"[", "l", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]",
       "]"}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", "//", "MatrixForm"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.841479395850571*^9, 3.8414793960655684`*^9}, {
   3.841479742842001*^9, 3.8414797697763433`*^9}, {3.841479816531345*^9, 
   3.841479843832347*^9}, 3.875793734593319*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"d2571b6a-7e27-40e3-bd15-ef1cf9d52163"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"For", " ", "the", " ", "lower", " ", "right"}], ".."}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{
       RowBox[{"Length", "@", "outboxes"}], "+", "1"}]}], ",", 
     RowBox[{"m", "\[LessEqual]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "@", "inboxes"}], "+", 
        RowBox[{"Length", "@", "outboxes"}], "-", "1"}], ")"}]}], ",", 
     RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{"m", "+", "1"}]}], ",", 
       RowBox[{"n", "\[LessEqual]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "@", "inboxes"}], "+", 
          RowBox[{"Length", "@", "outboxes"}]}], ")"}]}], ",", 
       RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"m", ",", "n"}], "]"}], "]"}], "=", 
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{
          RowBox[{"inboxes", "[", 
           RowBox[{"[", 
            RowBox[{"m", "-", 
             RowBox[{"Length", "@", "outboxes"}]}], "]"}], "]"}], ",", " ", 
          RowBox[{"inboxes", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", 
             RowBox[{"Length", "@", "outboxes"}]}], "]"}], "]"}]}], "]"}]}]}],
       "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", "//", "MatrixForm"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.841479846079341*^9, 3.841479878728359*^9}, {
   3.841481153466199*^9, 3.841481159092202*^9}, 3.8757939306154327`*^9, {
   3.876262330300892*^9, 3.87626235304852*^9}, {3.87630306970643*^9, 
   3.876303071201099*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"f105721a-a752-41d7-85c8-e05cffc9d29b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "mat0", "]"}]], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"75386c27-017d-4a2f-b2f6-31115e6697fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"746", ",", "746"}], "}"}]], "Output",
 CellChangeTimes->{3.8766046889535093`*^9, 3.876605355358542*^9, 
  3.8766054440529633`*^9, 3.8766056201624107`*^9, 3.876605653444491*^9, 
  3.8766058472473087`*^9, 3.876606204718449*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"67b1fee8-e07d-4104-9a1d-b6b8babea413"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<supplyamount.csv\>\"", ",", "supplyamount", ",", "\"\<CSV\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<demandamount.csv\>\"", ",", "demandamount", ",", "\"\<CSV\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<mat0.csv\>\"", ",", "mat0", ",", "\"\<CSV\>\""}], 
  "]"}]}], "Input",
 CellLabel->"In[39]:=",ExpressionUUID->"0e344b13-1464-458f-af48-a2b6e71e1a49"],

Cell[BoxData["\<\"supplyamount.csv\"\>"], "Output",
 CellChangeTimes->{3.876605444090106*^9, 3.876605620220331*^9, 
  3.8766056535138807`*^9, 3.876605847319927*^9, 3.876606204790926*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"dedbc7b3-068a-4222-91ba-f630e5faa5d5"],

Cell[BoxData["\<\"demandamount.csv\"\>"], "Output",
 CellChangeTimes->{3.876605444090106*^9, 3.876605620220331*^9, 
  3.8766056535138807`*^9, 3.876605847319927*^9, 3.87660620480088*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"81dbb09a-843b-4743-90b5-f6acfcb8b9a6"],

Cell[BoxData["\<\"mat0.csv\"\>"], "Output",
 CellChangeTimes->{3.876605444090106*^9, 3.876605620220331*^9, 
  3.8766056535138807`*^9, 3.876605847319927*^9, 3.8766062070026207`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"bbe7816e-8859-4a43-a450-89fc392be070"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Find", " ", "the", " ", "minimum", " ", "cost", " ", "flow"}], 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"FindMinimumCostFlow", "[", " ", 
   RowBox[{"mat0", ",", " ", 
    RowBox[{"Join", "[", 
     RowBox[{"supplyamount", ",", "demandamount"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.841479871470343*^9, 3.8414798990173435`*^9}, {
   3.8762622784028587`*^9, 3.8762623497679367`*^9}, {3.876262407259721*^9, 
   3.876262409381081*^9}, 3.8762624633824673`*^9, {3.8763029991594877`*^9, 
   3.876302999420178*^9}, {3.876303041838646*^9, 3.876303057947942*^9}, {
   3.876303192509048*^9, 3.876303195754176*^9}, {3.8763032640470037`*^9, 
   3.876303345178494*^9}, {3.876304469196013*^9, 3.8763044811269207`*^9}, {
   3.876304640583706*^9, 3.8763046407153883`*^9}, 3.8765854310417347`*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"46ec8bcc-cb89-4095-9bfc-e7e1ecd4e719"],

Cell[BoxData["0.9976508710580093`"], "Output",
 CellChangeTimes->{{3.8762623709534893`*^9, 3.8762624219059963`*^9}, {
   3.876303024203535*^9, 3.876303067926257*^9}, 3.8763031744978313`*^9, {
   3.876303287815226*^9, 3.876303290712359*^9}, {3.876304470531726*^9, 
   3.876304479291031*^9}, {3.876585420906397*^9, 3.876585445007853*^9}, 
   3.8766053554254293`*^9, 3.876605620717754*^9, 3.876605655805501*^9, 
   3.876606207228194*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"66eca1df-372b-443c-ab18-e43d797e8333"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.876585475273717*^9, 3.876585510532605*^9}, 
   3.876605426834422*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"144c39e3-2c82-437b-be18-a501ebbd17c6"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949, 816},
WindowMargins->{{163, Automatic}, {Automatic, 0}},
Magnification:>1.15 Inherited,
FrontEndVersion->"13.1 for Mac OS X x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f18c5299-2190-41d4-805a-fc836aee0eef"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 240, 4, 184, "Title",ExpressionUUID->"db21e94a-4d5b-44de-85a4-2189ac2807bc"],
Cell[823, 28, 789, 21, 90, "Text",ExpressionUUID->"b7678db6-d45f-455b-85ec-513458b119c0"],
Cell[1615, 51, 363, 7, 39, "Text",ExpressionUUID->"41db1386-6c3a-4e02-80a7-437487129e45"],
Cell[CellGroupData[{
Cell[2003, 62, 161, 3, 77, "Section",ExpressionUUID->"6b7c1d83-4d3a-49ff-8eba-e2fc473f6487"],
Cell[2167, 67, 306, 7, 39, "Text",ExpressionUUID->"20bc7c2e-b83f-4d5b-8aa9-ecd013b816cc"],
Cell[2476, 76, 1696, 28, 83, "Input",ExpressionUUID->"b6d1e559-02c0-4274-956a-6b1a937d77b2"],
Cell[4175, 106, 935, 13, 34, "Input",ExpressionUUID->"da9295af-244e-4c60-890c-9adc0afec214"],
Cell[CellGroupData[{
Cell[5135, 123, 3293, 109, 332, "Input",ExpressionUUID->"1f2696b0-e746-46e3-b02b-7f37f5ad28ef"],
Cell[8431, 234, 1150, 20, 64, "Output",ExpressionUUID->"883c7750-4da9-4a80-a56b-82f6b3ea094c"],
Cell[9584, 256, 1229, 23, 64, "Output",ExpressionUUID->"410943e8-0ef9-4121-a329-68931e0e5014"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10850, 284, 747, 19, 34, "Input",ExpressionUUID->"aa317fa4-c1f8-449a-a609-2ea7db5867da"],
Cell[11600, 305, 152810, 2484, 287, "Output",ExpressionUUID->"2224e9a1-91fd-4956-a13a-e6d262ab9b10"]
}, Open  ]],
Cell[164425, 2792, 489, 9, 116, "Text",ExpressionUUID->"1bb1f213-cb72-49cc-b2d9-4588364d7295"],
Cell[164917, 2803, 3075, 51, 83, "Input",ExpressionUUID->"c46fd729-895e-44ae-9525-59dd9bf3d2c2"],
Cell[167995, 2856, 522, 10, 116, "Text",ExpressionUUID->"04339642-b964-4f9e-ad5d-8ef64a024b98"],
Cell[168520, 2868, 680, 16, 105, "Input",ExpressionUUID->"2a5d1af2-5d1e-4a5a-85f3-30db64d15748"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169237, 2889, 173, 3, 77, "Section",ExpressionUUID->"61a6fe87-0b2e-482d-8c84-753eac290ab7"],
Cell[169413, 2894, 224, 5, 39, "Text",ExpressionUUID->"ad0732b7-e6df-451c-980d-51a684a42f77"],
Cell[169640, 2901, 1433, 38, 155, "Input",ExpressionUUID->"0f22cf90-5a25-4ce3-a902-6c597856a554"],
Cell[171076, 2941, 753, 12, 116, "Text",ExpressionUUID->"36e4f744-d1a7-444b-b926-cdbac989a41a"],
Cell[CellGroupData[{
Cell[171854, 2957, 1717, 44, 129, "Input",ExpressionUUID->"3304fdb8-6edc-4663-b71c-762e2a83631b"],
Cell[173574, 3003, 1148, 22, 58, "Message",ExpressionUUID->"e91fd8ae-9a5d-4cda-9098-9e0c93549fdb"],
Cell[174725, 3027, 1146, 22, 58, "Message",ExpressionUUID->"5ce96587-9338-45f2-af9a-f387c413c9be"],
Cell[175874, 3051, 1146, 22, 58, "Message",ExpressionUUID->"0e74be27-844d-4606-976a-bf1b35fb4299"],
Cell[177023, 3075, 554, 12, 33, "Message",ExpressionUUID->"df22d321-d0b4-483c-b45d-390a257675d4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177626, 3093, 230, 4, 77, "Section",ExpressionUUID->"4947032e-3eea-44ff-891d-6adbdff643a9"],
Cell[177859, 3099, 908, 16, 116, "Text",ExpressionUUID->"929b6fe4-4875-415a-98ef-9a3e8fa4434e"],
Cell[178770, 3117, 3403, 77, 227, "Input",ExpressionUUID->"b47c93fe-f966-4cca-abb6-4d4e4ad0a41d"],
Cell[182176, 3196, 299, 7, 65, "Text",ExpressionUUID->"aec06be4-0abb-4209-98bd-cd2962e311fa"],
Cell[182478, 3205, 368, 9, 59, "Input",ExpressionUUID->"50c77fc6-14e1-4ac5-bfa4-f03dc7c276a1"],
Cell[182849, 3216, 405, 9, 116, "Text",ExpressionUUID->"555ba4a0-0cc1-4dcc-a180-33e6cc1cd530"],
Cell[183257, 3227, 247, 3, 34, "Input",ExpressionUUID->"41283e83-57dc-4bb7-b9c8-4fa2593fecf7"],
Cell[CellGroupData[{
Cell[183529, 3234, 199, 3, 34, "Input",ExpressionUUID->"275892e6-15d7-4bc5-ba5d-5a64948be5a2"],
Cell[183731, 3239, 705, 10, 39, "Output",ExpressionUUID->"00c3a030-56b1-475a-b161-37b561148a5d"]
}, Open  ]],
Cell[184451, 3252, 196, 3, 34, "Input",ExpressionUUID->"9e1c6c9f-d0f4-4319-a17d-4e3a5ec7daea"],
Cell[184650, 3257, 350, 7, 65, "Text",ExpressionUUID->"88f9deac-6a44-4609-bd3d-f79761a7858e"],
Cell[185003, 3266, 1752, 45, 179, "Input",ExpressionUUID->"851fa3d7-0006-44e1-8b12-6fd1cdcc9bc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186792, 3316, 169, 3, 77, "Section",ExpressionUUID->"e36a8e42-632d-439a-88a9-bbf3b66f071b"],
Cell[186964, 3321, 652, 11, 34, "Input",ExpressionUUID->"3222929b-4701-4498-bcb5-33aa4590e6be"],
Cell[187619, 3334, 6100, 141, 611, "Input",ExpressionUUID->"c1d9eed1-0022-4222-8bd2-904ac3fed851"],
Cell[CellGroupData[{
Cell[193744, 3479, 212, 3, 34, "Input",ExpressionUUID->"6c16e990-8c98-496e-a1f7-d6286a98117c"],
Cell[193959, 3484, 368, 6, 39, "Output",ExpressionUUID->"de891336-1662-4795-9aeb-33bc37454bb5"]
}, Open  ]],
Cell[194342, 3493, 1526, 38, 203, "Input",ExpressionUUID->"d2571b6a-7e27-40e3-bd15-ef1cf9d52163"],
Cell[195871, 3533, 1925, 50, 179, "Input",ExpressionUUID->"f105721a-a752-41d7-85c8-e05cffc9d29b"],
Cell[CellGroupData[{
Cell[197821, 3587, 145, 2, 34, "Input",ExpressionUUID->"75386c27-017d-4a2f-b2f6-31115e6697fd"],
Cell[197969, 3591, 344, 6, 39, "Output",ExpressionUUID->"67b1fee8-e07d-4104-9a1d-b6b8babea413"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198350, 3602, 490, 12, 83, "Input",ExpressionUUID->"0e344b13-1464-458f-af48-a2b6e71e1a49"],
Cell[198843, 3616, 265, 3, 39, "Output",ExpressionUUID->"dedbc7b3-068a-4222-91ba-f630e5faa5d5"],
Cell[199111, 3621, 264, 3, 39, "Output",ExpressionUUID->"81dbb09a-843b-4743-90b5-f6acfcb8b9a6"],
Cell[199378, 3626, 259, 3, 39, "Output",ExpressionUUID->"bbe7816e-8859-4a43-a450-89fc392be070"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199674, 3634, 953, 16, 83, "Input",ExpressionUUID->"46ec8bcc-cb89-4095-9bfc-e7e1ecd4e719"],
Cell[200630, 3652, 513, 7, 39, "Output",ExpressionUUID->"66eca1df-372b-443c-ab18-e43d797e8333"]
}, Open  ]],
Cell[201158, 3662, 197, 3, 34, "Input",ExpressionUUID->"144c39e3-2c82-437b-be18-a501ebbd17c6"]
}, Open  ]]
}, Open  ]]
}
]
*)

