(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    199574,       3641]
NotebookOptionsPosition[    194070,       3553]
NotebookOutlinePosition[    194493,       3570]
CellTagsIndexPosition[    194450,       3567]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Numerical Calculation: FindMininumCostFlow", "Title",
 CellChangeTimes->{{3.718713698564654*^9, 3.7187137052744064`*^9}, {
  3.7475729787223797`*^9, 
  3.7475730185404563`*^9}},ExpressionUUID->"db21e94a-4d5b-44de-85a4-\
2189ac2807bc"],

Cell[TextData[{
 "This notebook is designed to take two distributions of sand in a specified \
box, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "init"], "(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]],ExpressionUUID->
  "19f9cbb0-a700-4b59-9eaa-fea409db045b"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "final"], "(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]],ExpressionUUID->
  "32f43643-95fd-4deb-adb5-20113f5da990"],
 " and calculate the cost of moving the sand from the initial to the final \
distribution. Cost is defined as the amount of sand moved times the distance."
}], "Text",
 CellChangeTimes->{{3.7187137106772213`*^9, 
  3.7187138091258593`*^9}},ExpressionUUID->"b7678db6-d45f-455b-85ec-\
513458b119c0"],

Cell["\<\
The FindMinimumCostFlow function will output the minimum total cost of \
flowing moving from supply to demand. \
\>", "Text",
 CellChangeTimes->{{3.718837968909587*^9, 3.71883798673643*^9}, {
  3.7188381917295427`*^9, 3.7188382769472013`*^9}, {3.7475730726166506`*^9, 
  3.7475731381142893`*^9}},ExpressionUUID->"41db1386-6c3a-4e02-80a7-\
437487129e45"],

Cell[CellGroupData[{

Cell["Enter Parameters", "Section",
 CellChangeTimes->{{3.718713659939337*^9, 
  3.718713668392317*^9}},ExpressionUUID->"6b7c1d83-4d3a-49ff-8eba-\
e2fc473f6487"],

Cell["\<\
Define the initial and final sand configurations. (These will be \
automatically normalized below.)\
\>", "Text",
 CellChangeTimes->{{3.7187134100605803`*^9, 3.7187134589721775`*^9}, {
  3.7187138265382032`*^9, 
  3.7187138348340445`*^9}},ExpressionUUID->"20bc7c2e-b83f-4d5b-8aa9-\
ecd013b816cc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x1", "=", "0"}], ";", 
  RowBox[{"y1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", "0"}], ";", 
  RowBox[{"y2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", "0.5"}], ";", " ", 
  RowBox[{"p", "=", "0.25"}], ";", " ", 
  RowBox[{"\[Theta]", "=", 
   FractionBox["\[Pi]", "4"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.732030528018759*^9, 3.7320305301988163`*^9}, {
   3.733793701148775*^9, 3.733793752075521*^9}, {3.73379453747824*^9, 
   3.733794545885833*^9}, {3.7337945876704054`*^9, 3.7337946009734435`*^9}, 
   3.7489099147051525`*^9, 3.748909982229043*^9, 3.7489102241472054`*^9, 
   3.748912084949465*^9, {3.748914401723262*^9, 3.7489144045763044`*^9}, {
   3.7489147918774853`*^9, 3.7489147965147*^9}, {3.873990337461932*^9, 
   3.873990355564694*^9}, {3.873990878511148*^9, 3.873990914210498*^9}, {
   3.87555583102358*^9, 3.875555843913355*^9}, {3.875609105293663*^9, 
   3.875609107493991*^9}, {3.875609145886279*^9, 3.875609148480603*^9}, {
   3.875609202745201*^9, 3.875609216215477*^9}, {3.875609399538727*^9, 
   3.8756094011066103`*^9}, {3.875610311101206*^9, 3.875610321206208*^9}, {
   3.8756308759891157`*^9, 3.8756309051654797`*^9}, {3.875630979382516*^9, 
   3.875630981106518*^9}, {3.8757936773518553`*^9, 3.875793677490267*^9}, {
   3.875793740357883*^9, 3.875793760326046*^9}, {3.875793978051387*^9, 
   3.875793980718894*^9}, {3.876605412007324*^9, 3.876605412443317*^9}, {
   3.876923519352556*^9, 3.876923523288248*^9}, {3.87692415815628*^9, 
   3.8769241583366117`*^9}, {3.878056063426066*^9, 3.8780560666719027`*^9}, {
   3.878736272280702*^9, 3.8787362872397423`*^9}},
 FontWeight->"Plain",
 CellLabel->"In[85]:=",ExpressionUUID->"b6d1e559-02c0-4274-956a-6b1a937d77b2"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.732030528018759*^9, 3.7320305301988163`*^9}, {
   3.733793701148775*^9, 3.733793752075521*^9}, {3.73379453747824*^9, 
   3.733794545885833*^9}, {3.7337945876704054`*^9, 3.7337946009734435`*^9}, 
   3.7489099147051525`*^9, 3.748909982229043*^9, 3.7489102241472054`*^9, 
   3.748912084949465*^9, {3.748914401723262*^9, 3.7489144045763044`*^9}, {
   3.7489147918774853`*^9, 3.7489147965147*^9}, {3.873227586000675*^9, 
   3.873227589127459*^9}, {3.873228517584799*^9, 3.8732285176770363`*^9}, {
   3.873231142563065*^9, 3.873231149492885*^9}, {3.873233139879216*^9, 
   3.873233139988879*^9}, {3.873233664358756*^9, 3.8732336655864553`*^9}, {
   3.873234073762395*^9, 3.873234073930442*^9}, {3.873234358280501*^9, 
   3.873234358489637*^9}, {3.8756092768721437`*^9, 3.875609288854958*^9}},
 FontWeight->"Plain",
 CellLabel->"In[88]:=",ExpressionUUID->"da9295af-244e-4c60-890c-9adc0afec214"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "=", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ")"}], "2"], 
      SuperscriptBox["p", "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"]}], 
      SuperscriptBox["\[Rho]", "2"]]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", "=", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["p", "2"]], "-", 
      FractionBox[
       SuperscriptBox["p", "2"], 
       SuperscriptBox["\[Rho]", "2"]]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"], 
      SuperscriptBox["p", "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ")"}], "2"]}], 
      SuperscriptBox["\[Rho]", "2"]]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"finit", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   RowBox[{
    FractionBox["1", "\[Pi]"], 
    SuperscriptBox["E", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", "x", ")"}], "2"]}], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", "y", ")"}], "2"], 
       SuperscriptBox["\[Rho]", "2"]]}]]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ffinal", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{
     FractionBox["1", "\[Pi]"], 
     SuperscriptBox["E", 
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "x2"}], ")"}], "2"]}], 
        SuperscriptBox["p", "2"]], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p", "2"], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"y", "-", "y2"}], ")"}], "2"]}], 
        SuperscriptBox["\[Rho]", "2"]], " "}]]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ffinal", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   SuperscriptBox["E", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"aa", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "x2"}], ")"}], "2"]}], "+", 
       RowBox[{"bb", "*", 
        RowBox[{"(", 
         RowBox[{"x", "-", "x2"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{"y", "-", "y2"}], ")"}]}], "+", 
       RowBox[{"cc", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"y", "-", "y2"}], ")"}], "2"]}]}], ")"}]}]]}]}]}], "Input",
 CellChangeTimes->{{3.875609362452834*^9, 3.875609362464476*^9}, {
  3.875630944243865*^9, 3.8756309683511887`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"1f2696b0-e746-46e3-b02b-7f37f5ad28ef"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"4.`", " ", 
     SuperscriptBox["y", "2"]}]}]], "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.875609406933152*^9, 3.875609922946134*^9, 3.875610008609488*^9, 
   3.875610049278322*^9, 3.875610324114811*^9, {3.875630886687756*^9, 
   3.875630909451852*^9}, {3.875630972212187*^9, 3.875630983788144*^9}, {
   3.875793687502449*^9, 3.875793762847867*^9}, 3.875793809432104*^9, {
   3.875793880052947*^9, 3.875793950673831*^9}, {3.875793983274036*^9, 
   3.875794009408383*^9}, 3.875794095504784*^9, 3.875794160894525*^9, {
   3.876262291122809*^9, 3.8762624658306313`*^9}, 3.876303015676037*^9, {
   3.876303046255165*^9, 3.876303060581039*^9}, 3.876303166545682*^9, {
   3.876303296307084*^9, 3.876303348149238*^9}, 3.8763044881038847`*^9, {
   3.876585409633469*^9, 3.876585434130595*^9}, 3.876605200053411*^9, 
   3.876605343580845*^9, 3.876605432412238*^9, {3.876605611648827*^9, 
   3.876605636776754*^9}, 3.876605824432742*^9, 3.8766061874843607`*^9, 
   3.8787362971141987`*^9, 3.878736353183859*^9, 3.87874038294977*^9, 
   3.87874077342028*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"4131192e-f945-41ee-bd6e-0e6513c95a45"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "8.125`"}], " ", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"15.749999999999998`", " ", "x", " ", "y"}], "-", 
    RowBox[{"8.125`", " ", 
     SuperscriptBox["y", "2"]}]}]], "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.875609406933152*^9, 3.875609922946134*^9, 3.875610008609488*^9, 
   3.875610049278322*^9, 3.875610324114811*^9, {3.875630886687756*^9, 
   3.875630909451852*^9}, {3.875630972212187*^9, 3.875630983788144*^9}, {
   3.875793687502449*^9, 3.875793762847867*^9}, 3.875793809432104*^9, {
   3.875793880052947*^9, 3.875793950673831*^9}, {3.875793983274036*^9, 
   3.875794009408383*^9}, 3.875794095504784*^9, 3.875794160894525*^9, {
   3.876262291122809*^9, 3.8762624658306313`*^9}, 3.876303015676037*^9, {
   3.876303046255165*^9, 3.876303060581039*^9}, 3.876303166545682*^9, {
   3.876303296307084*^9, 3.876303348149238*^9}, 3.8763044881038847`*^9, {
   3.876585409633469*^9, 3.876585434130595*^9}, 3.876605200053411*^9, 
   3.876605343580845*^9, 3.876605432412238*^9, {3.876605611648827*^9, 
   3.876605636776754*^9}, 3.876605824432742*^9, 3.8766061874843607`*^9, 
   3.8787362971141987`*^9, 3.878736353183859*^9, 3.87874038294977*^9, 
   3.878740773423801*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"1f42620a-01a6-4ef3-ad60-f5474fc7c6b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ffinal", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"finit", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.873990292424479*^9, 3.8739903286377487`*^9}, 
   3.8739904466766567`*^9, {3.874159135512912*^9, 3.874159135817031*^9}, {
   3.875555862705727*^9, 3.875555892757313*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"aa317fa4-c1f8-449a-a609-2ea7db5867da"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"1352.738033920053`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 94, 1, 
   30249724841158952758, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.878736297423736*^9, 3.8787363534302893`*^9, 
  3.8787403834885683`*^9, 3.878740773678212*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"7cd81909-0b6b-4595-9383-3a3929ecf0a3"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
n9WEKPS5JqL+F6L+e7025bRaf4L9q8bF7ET9sR89nW/4v+PvqP33ysMG7sJ6
6TVxqhx3vRVODxky0DZlOvtdox84UC31oofbQMbRDxx9mdPuVmphYTPN93Ce
2+0NGdw9rRq9rjvVyyB9mrUtscCdwgEPUhLum+tFBuly9LwrRT7Mrbo/D7N6
kUH6kUAu7WzzOHC+V+xcc73IIJ187Nfm4/D3QY/lfoow/t/h7JqVuxyrtkBu
n59xn+9lH/1Vr1XwYpljvcggJV+sXHNXo13B8N9PDiOvkbNgwbQXV4KnQntB
3X4m9E+QT6D93wZ7GHc/AvbMBvsZP/AE7N8D42X8Qz8Y7x3Qh/F4AfShejKO
eqLOeVfJe291x8cjKlzoH4g6I5/QURdV6012EOqMnHRYtqT4jxrBqDNyp01V
KzgObBqCOiP/9i+xNdh5h6LOyJeXcu5fK+BwKOqMvCop3SrOt3gY6oz8aPPu
U6oNCQpDndXtUWfkeiP0jzojXzka7EGdka+n9qPOTB86XtQZ+ac40Ad1VuuJ
OsuXmWsnzb6YOqagMKQa6ox8+Y0fx1Z8+x2MOrP24vPsN1fqhqLOyCcW691a
V6Z1GOqMfHuHz41+T6wYjjojH/t2ysz8/Y6Ho87Ij04ru6XTL2ME6ox81CTj
jl1SeATqjPwbbY86Iz9P+0edkU/tCPagzsjrFAf7UWfkxmMwXtQZecFboA/q
rNYTdZb/b/dtpaR28wrdLuAWgjojP3B1q8uGiutCUWfkJbxbZg9N+hiGOiMv
vuyvqld0+SJQZ+T9EuymFxxwPQJ1Rl7py+VBmwr3ikSdkTst8O06YvjJSNQZ
+fpnp+Zsep4WiTojj6DtUWfkC2j/qDPywn3BHtQZ+XJqP+qM3N8Hxos6I0+5
Bvqgzmo9Uee68jzPJxUnL5uMeBkfijoj37too7SzXGYY6ozcic4r1Bn5gb77
a7/X1ItEnZH3fhvtc29L6SjUGbm+doMftR/vjkKdkSeSM8ahgmM06oy88Jq1
Wt/bftGoM/KbtD3qjHww7R91Ru72DuxBnZEf6Qf2o87ImyXBeFFn5MMWgz6o
s1pP1Bn6yxb1vwNf7X/aNAx1Rv7ZPaeetPpeOOqMvFzljtNe2/tEos7IPy3Z
fut6v2pRqDPy2o/KTrk3RBuNOiN3Cen68VanldGoM/Kge0lT5x//znRm9vyT
tGfC6RIC6ow8nrZHnZF3pv2jzsxOag/qjPzsUrAfdUbuXwXGizoj71EW9EGd
1Xqizjtl/kKcNcy2850rT5jOyFsGacps3989AnVG3uz7zmF+a3cznZFfKFP1
RqcSJ5jOyNdm5HPcn/of0xm5V9Fpdp8rVRJQZ+TV9+u7Ff44SUCdkTe6W7XD
HL91TGfkg2h71Bn5Bto/6ow86hXYgzojT3QH+1Fn5MIPGC/qjHxNNdAHdVbr
iTrDv6mR2V0W9zlSSR/Ox3WpkQ/C9mQnX1sQwcd1qZHVqJ/k47rUyPzlrk8J
6vApio/rUiMDfxdO6vPlZDQf16VGLlk5zPDWqZ3Ax3WpkVeLBmyf4JTCdEaO
7wH5uC41soATtOfjutTIkqugfz6uS408Re3h47rUyI3Ufj6uS410SYfx8nFd
aqQxAvRBndV6os5HQH+hgWo+Iy+nms/I/VTzGfk61XxGPlw1n5E/1fPzGbmd
aj4j91DNZ+TVVfMZebxqPiMvqprPyJuo5jNyF9V8Rj5YNZ/VeqLOB8GfCCd/
8f4Z+RSVf0Z+qRLvn5EvVfln5OkPef+M/HYw75+RX7jL+2fk/6n8M/Lcu7x/
Ru6u8s/IZ6v8M/KBKv/M7KzM+2fkOR68f1briTrXh+cj6Sjw8QbyIFW8gXzD
RD7eQG5UxRvID7zh4w3ki2L4eAP5IYGPN5C3W83HG8hdVPEG8t8xfLyBHOMf
1Bn52758vIE8YxIfbyAPUcUbaj1R5wMQ75GFbfn4GbmjKn5GPs2Lj5+Rz1zK
x8/Ir/fh42fkHbL4+Bl5v//4+Bm5XhU/I0/+j4+fkZ/K4uNn1n8CHz8jL66K
n5Gv9ebjZ+T2qvhZrSfqXA7yF/LyAp8PIg++zueDyM8e5fNB5F0NfD6IfHF7
Ph9EnvqGzweRL53K54PIB07k80Hkt6fy+SByJ1U+iHxoBz4fRO5djM8HkX8W
+XwQefGbfD6o1hN1rgf5OFHXN5Bf6MDXN5BvbM/XN5CP3sjXN5A3VNU3kB9x
5esbyMcKfH0DuauqvqFujzojr1SKr28gx3oL6ozcSVXfQE5U9Q3kEar6hlpP
1Bn+NZA/1OvIH+p15A/1OvKHeh35Q72O/KFeR/5QryN/qNeRP9TryB/qdeQP
9Tryh3od+UO9jvyhXsf0XC33nyZukfu7JQZvr71p1bpjwjjgAvJYyrH9CeCC
p6o98hDK++b9Z0ppWi9ykhZu3Vu5tmBQ1a+cpB/7BzrvSK5btQ+0J39oT9Tt
0Z7a8vz5KMbvG1ZzsL4LsxPzBWnn4cG6GcsZh/5SI3csTXHd2/Uisx/5NRVv
AP0LhPaP4/IGe0izLfy4kAepxoX8C22PHO9LhZo1vR+53ArA/imXhtUArmov
YXu0k8XVdLyqfgj2g3qq7dwn///dJHm4sc5SRDNhoVNTQ9UU4AT5I8pV7ckf
2hNsj/pgP5kRi1pk+/8vANvjuM5pey07sn1gAPaP9iNH+7F/7EfVXvpDe3Zd
/P3iPN+a0ybQbWiqsEtud01cIfPTYqWOHv0vTrrC8guc53NU7S9De8GLtkeO
8+rIuR0DOp6+xt5HqO1X6cDGOxD6EdCeYNo/crxuJRXH66bS616XL/CT/a6b
OmXoG++bwOJ25HfKVhx8a8xm4bzc/g27bt1n+Z/fDjzG+kEdIlT9ID+s6gft
FGg/z6Af5n90tB/0t8iX0X7eQD/svlRU9YPX/VyU7wf5WFU/aE9Z1bhQt/Wp
bj23kTnCNpo/YPvQr6T9wDWrmX9A//Mv9Q/I0f+k0d8j6lBTbv9U3Fx8qHuf
ixvZdbGfd389qhfZyYdx7Gfpzwz/Ze87MXuwn5oeSzV9H0+ldhst9lXBn4vF
e0Pk1tsbWPuQhjzH9u3WD5u//3zVQsD1rP3Z72cc0xeOtkOO7UeN3DPN7vgN
A3Ata584YXj99+4dSyLH9oN2T6h/+Ms0d3ph8366Oc6vzh1qgvvmWPtVNyb3
7Xy6Bd3nlcn22d185Bh7OaVZJeTY/sL0fsXPTPOnfimT7bPrn1IibsinjUHI
sf3fxsBSi1a0w3VW7H1uqt1F3/ml08OQY/vDP8p0Lz+jH80vtKz9uWZdxh8a
HxSFnO0jO1BdGpbzH8379Kz9ystpE7+4L2Yc2yf/nn6vmXCDcoP5/fKHOucP
d1jJOLbXnh8TG/3hNuUurH3D/xqujqnvxTjbHxfavsy65minkbXfPfFJWFSr
QxHIsf36DQP6LL69jupgtNiPRvtn/E5mq2Mee2fmw3mF3LdLbPKSWZ8ccf4g
d3nsG3qjYB8jzhPkR2vVDpAufPfB+YC8UO99fx9NXFIF7zvy34kjk+InNwjG
+4v8VFLaixmPGuN6RbYvrO+wbseTe4dF4/1C3uxC8vt/wkIFvC/Izwvvurfv
FMjiP+T53zwefdOmKdMZeYZPpWPD305geiL3Pjl0aP5Dl4JRT/W+M9QT+YqI
cTtSzqYURj2R7zEUGdP3xqcSqCfyI14zF07qW9MT9UQ+pejYqJ+DN/qhnsgX
NV/ZJuSCB/4u2H60bS18OrnW3hSGeiI/v3zS+k4JE3CdLdv/VcbpU5dahWME
1BP5zvsv5/2THsH0RB7i9v3XmHfFmJ7IG94+0jHgcZEo1BO5U8kiTi3LYB5k
ZNyr96pf7aoFB6KeuE/q5eh/MncP8iyIeiIvsbBI9ICOHs6oJ/K9ca42d1cE
lkE9kZ+eY0jrsb1tBdQT+ci67SdGX10YgHoi77p8/NVdO1+GoJ7ID05f/nVT
bu1I1BP5xkIRdf7qifU3Ddvn9aV6hYvHn89heiK/eTd9zsdnY5meyKvZCF0q
jgpj/gG5k1da7QrethGoJ/I9V38dbVMooxrqiXxrrfJJX0c+qYx64n4oqfus
xOux2faoJ/L6jRf+6Bd83hX1RL7p7ysd0/Lv9UY9kXf2f13wXI09lVFP5FMG
6YZqbpyphnqyfWTd3I9nBmaGo57I82dMq1JwjHc06ol88MPtgy5F7sB1KWw/
V/wyt4tp/5vL9ETu1+y6R0J1R6Ynct8qkQdd+y+PRD2R9/i6YHq8c41Q1BN5
ahG3oKzLPwJQT+QutQt0OOJztgLqietbig4s1KFfZOHiqCfy8Df1hnk+3+uB
eiLv02qHYytjYkXUE/mbpIEhpRIbBqKeyPu1PPB6xKhQfH4xfu1r/7G5J4Kj
UDfkDSstWD+n2j6mG3K/0FJfHqb+YH4S+Z7EPlEJdg+iUDfkn1bsGrFsS41w
1A25dkREzvjGR4NQN+SjnQtEtjrcsBLqhjxxVUq7Ins/e6Ju8O+Nwzt1lZvY
HuxYGnVD7upUqLZ9ybRyqBvyjK4XGtcuPcIfdUNufFFx+5GkciGoG/Lr5/19
dt9/hc8Lxj8bxsS69ZXYfEM+efvBM5VehzPdkG8spmyvZZxcUvavZ9z+ldIe
A+MXeyrtd2F8ZXHleI2Mryiq1MfI9ludWqbU04XxI/ZK/Q2MXx2svF96xu2W
K++vlnHHocr5oGHcOTbYrUj7yQLqhtzocaG4Q9R45veQT/iunJ9axg+3Vs5n
PeNbpyvnv4HxEe2UvxcXxndnKn9fRsZrjVD+Ho3mfVhE+ft1YXxhIeXv3cB4
vy9K/6BnfIaf0p9oGa/WVOl/NIwv5/xVJtu3tY7zb5lsf5b/K6U/1LB9Ur/i
lf5Ty3iNRKW/1TN+JUjpnw2Mv+mg9OcujJ9vrfT/RsabJiifF0a2T2pZDeXz
xYXx3ZeUzyODeT9XWeXzS8947wLK552W8dL3lM9HDeORNZTP00y2P8tep3z+
ZrJ9WBkzlc9rDdsP1XqV8vmuZXxofWU8oGf8ywJl/GBgvHNXZbzhwvjEpcr4
xMh41SRlPGNk+6H0PZXxjwvjucWV8ZKB8Zk3lfGVnvEwLh7TMm77QBm/aRgf
zMV7mWwfVsYKZXyYyfZb6Vsr40kN2/d0raUy/tQy7l5cGa/qGU+uoIxvDYxH
uijjYRfGG1dXxs9Gi/1WqCfuDzp2TBmfuzAe462M5w2MH3ytjP/1jP/L5Qta
xj+eV+YXGsZXDlfmI5lsv1XxKcr8JZPtq3L/R5nvaNj+pmF9lfmRlvEFscp8
Ss9463Rl/mVg/FJ3Zb7mwni7X8r8zmixrwr1xH1A39cr80cXxheHKPNQA+Nn
uHxWz3hYjjIv1jJ+lMuvNYxv/63M0zPZvqp3ZZT5fibbP9V1lrJuoGH7mPbf
UdYftIzv2K+sY+gZ/z5OWQ8xMK7foqyruFjsk0I9/8DZevI9XJ7O6j+Ez/cN
5vXnXN2A1XMIX39gdRtylqtjsPoM4eshrA5D1HUV5He4+gyrq5B6XJ2H1U/I
MK5exOokJJWrO7F6COHrVy4W69VRN/mfMZZ1s6Gd8u9IuG9ZH3tz3CbufrCT
RR0szquQPu89hbredWuiTkp552RR16r/skj/vLq0un4l11XWOluvU422rEfB
+nfLupN7QjH/PDsjJYGrL/0n/x6dpL2rZ3266H2d5YOF/V1n59lZe1jBiIXN
V7J6xeg5RpJnp2G8cv4YpeJRP1d4xdpb6AY/fAeLOs/bPN1SHCzqPLfz9Elw
tKjzyHo66S3qPLKeCXqLOo+s51m9RZ1njGy/vUWdp1dzj5W5ufZSO1Wdp0UJ
H02enR+TLob2U9R5hHu+cXl2LrIv5VNg9Fymm6ynyc5P1bJrK+tssp4mO9X1
NNkek53qupnfiGwhdm4hCz1LyDprLeo8+eV/dRZ1nneyzjqLOg/oXNiiznNM
9idF/lDnKWJR54E6VSGLOg/orJV67JjP1Xl6yzprpYvbjZ+L9yzF9ASdddLf
T28d9VTUzYisc2Fp+2u+blZxWRVpjslOdd2sWFyQe56d6rpZjX0fHyfct6zz
VJJ1zm9R53GRdS5gUecpIP9rY1HnAZ1tLOo8oHPBP9R5bC3qPKBzPinVhq/z
gM75peuLQzw/PTPXecbKOheQPiV169m5cDWmJ+hcQPL89o6rm7WUdbaxqJtV
l3UuaFE3A50t62Y7Mu7mesV+s6jzTOr7TLyf8t2iztMu6+3ouV4/Leo8AbL+
vyzqPLbyvzkWdZ57sp65FnWeOzLXSD9f8nWeCbI+38SH9z70UNZ5Wss6fBev
eJ/NsJvizvSsLI/3p5hkn29epqJult8zbExdk52BqrrZnY01SG7ub1FdN/tf
5QaaPDvVdTPQWWNRN0s5tXL0g5RXFnWeTld358bOfWtR53F4eHr0voQPFnUe
0PmjRZ3HX9b5k0WdB34IWRZ1nvayPq/EjG3LO/tWW890s5V1eCu2DZmww92t
M9NtpzzeD6KhEF8fqyTr+dGiPgZ6frKoj4Geny3qY9vk/r9Y1MfiriT8Sryf
IqrrPA+Kj88ZcP+0qK7znFndPXee11VRXecpdXBGbt/7t0R1naevrP8Dka/z
ZApL2ydr+pium+/V1nFjt/dh+gyW+WkxYKl34p73XdhzxKH2QM0c03XVdbA4
uf0tizpYyuCjmjqm66rrYLZyP08t6mC7mkwck5P7zKIOthy4RT3nc4zcj0U9
ZwZc16KeEwZ2WtRzXsj9XFXVczKF7Ny8v2eC7aXda/WfDEyfv+T5+VQ4uf3E
zUpJ61l8Uht0FtT1rqwD8n0R1PWu5XAfBXW9aybcd0Fd7zpxWZ4ngrretRbm
lUXd5hLMQ4u6zbey8ry1qNt4wjy3qNssg9+FUNqWr9t8lvt5KwyveCJu1UxW
txGuyH7sizCsSdGL4eeOsefpL1nPzxb1Lh/4XVvUu5qCH7Cod31/IPsNi3pX
Q/AzFvWu1eCXLOpdkeDHLOozoGeuoK7PXAQ/KajrM6DnL6Gnqj7jBX5YuMT5
YY3UCPy2EMf57UxxBPh5weG+0s9nCtfguUDKq+pdoHOuRb0LdP5tUe8qB88p
i3oX6PzTot41Ep6DFvWu9fDctKh3lYfnrEV9BnQuaFGfaQrPcYv6THd47hP+
ua+VRkKcQOpMVsYJWE/IT1yXKOOKTHEDxCGkki1f74J809ai3nUd4hyLetcr
iIss6l05ss4FLOpdBoi7LOpd5SFOs6h3RUNcZ1HvcoI40KI+Uw7iRov6DOhc
mMSr6jNNIC4ldlxcqqU6awkfx2qkURD3ksNc3Iv1mUJ/qHcVsah3gc5FLOpd
oHNhi3oX6KyzqHeBzlqLepcz5BEW9a4KkHcQDfdnlP6FPMWiPqOFvMaiPjMP
8iCyK1iZB+mlCMibSFkHZd6kpTo7kFlcnqWhOtuT6ap6F8xne4t6VyzkfRb1
rhuQJ1rUuzpAXmlR7wKdHS3qXRmQt1rUu37LOttb1LtAZ3sLPb98csucs9aZ
VDae5+ozNL8mfH5tkHSQjxM+H9dL8yF/J43WKPN3reQG+T55w+X7GmkT1Acs
6l2BUE+wqHfR+oNFvase1Css6l03ob5hUe/qCPUQi3rXa6ifWNS7BkO9RaVb
pggTNV2sf1EZVzA9JZXOBDmvM33/Naao9KJb+72X9q9mdSrIL76IIY2Vz99M
EePhqW0bXY57a+b4/rGSO/d+SuoEcY5YYJsyztFIQ2h8mOrbaESLKevN9UZ6
vofNpKyh9RTxkhe0F6b5ce2FWLBHuNROaY9Rkqeh6T425cZlJMj/oI8F/1N9
zPr6sUx2bozE2Z8poJ69ahb63PzUdjYu1GdNQImE7vm6sufLr3ZyXC3UWPIk
pMt1Deunptz+qnBrTMmkO9PY+XiSN9XHf4ky3tZIGGeu9Of6Z+e67Gn/vseD
nE3MP6Oe27l8J1PEeOwaZ38mO4/lLd+P0BvsFAeW391Qe28A40Xkf9PFrZG9
z/Qy7GHcSc6DHoinNlS86Np7K7vub6pDrQxlfpEpog7fy3H9s/NVorn38pni
MpqnJC/m9BTRzh2jlXpmsnNC1m5TvqfOFL/SeL4Hb7/4Wo7fHgj9OPs1BPPK
x133fL92sjP7ncbCOn/pkWv/ffftszCvofPJIJ0a22d9wQm3WfyD7du7lYwp
mxgZjO3w3zmd2x+ItHsWhP+N7Y9crFN0sUMdGofoWfuW3ocrbuyyE+M683kR
qQcWbLArRv2elrX33juhS/K46sHIsb0xau4T16q4H0fD2ncekPyqUvd5+Nxh
7Vd5d5i+feRX9Kvs3I9Sgwyn8w3fj/VJdk7F2hrv9NtXlMZ4QIPto+j+Atqe
nQeSOVDZj0aD/eyj+z6wPfL+fP8E+ynP28/OnWjN2a9l7Wvx+rD2NTh99Kz9
CV5/1t79rFJ/A2vv2IW7v6x9y0vK++vC2nuM5+YPa1+mjHL+GFn7/LpLo2t0
n14VOba3Myrnp5Gdd3G0TZcL08J+sHgSebVZpavtXIr5oIHxGa0e/brh0xDz
MsaNZaPrHp1UiuXRyL/fc5+/b98WyjWMu4wYnXE2JYfVu5Bfj34Rv7CDJztf
Eflgul8P7zvyc3x7dt5F1nBl/1rGfe8r7dEzfoaz38B4i9bK8bowHjtbqY+R
8adtlXoa2XkXXwYnhlSdtBrrQow73Khyumr91ywPQn5m5f+u1mvwBe1k/E3u
jHszBpyIQJ2RHxzd7KD3/GbsuYx8Z4vkFj92rmPPZeTh1SY/KdP+PLbXIF9J
9wmizsgr8+3ZeRfJXP9axh9w9ugZ76qZqbDfwHizVcrxujA+/6ZSHyPjx4co
9TSy8y7q/ypgSIx5y+J55Asq7qk1SR/E8iPkNU43z1xECNrJeEzZnZU2b7XH
ugTj0xqfezzk6TL2fhD5ssAynavOzGRxFHJtC6nyzKcGdv4t8nz0nA3UGbkd
356dd7GU61/L+APOHj3jJzj7DYxf5Mbrwnh/P6U+RsaTfiv1NLLzLr7M+1Gz
R8PbeL8YD312oXT/qe5YF2WcJM4revW8L8vrkd+cd6zQpKHfmM7IJ2u3Otmt
nsziH+RJQoWdUv377PmOfFzDIxWOB+dj53Ehf0P3caPOyIfx7c3nYHD9axmX
OHv0jLear7TfwHj5YcrxujD+ltPHyHi5/5R6Gtl5F/fqhkctOtaV5VPIx+56
51xz6P+YzsgdW1xeX/3hPqYz8pip+nONz05k+RQ7T2PbgMPOmcVYfoo8MGrD
2YBGPZhuyOcOKFZzfdRsphvy5K07O4081sxcP6e8Ode/nvH9nD0Gxo9z9rsw
Lu1WjtfI+JtYpT64TjI1skmvZ3djvs1juiHfFfp577+tHzDdkA9P6n489csL
phvyB/W3D8v9sofphrzH48qD6pWKYbohH3nAR+reZSHTDfn5UpI+moiqdZKp
kYubxvs+zDee6YY8metfz3hsA6U9BsbLT1ba78L4izDleI2Mt+qt1MfIzqPY
qZpvyOuo5hvyR835+YbcVTXfkH/8Hz/fkP+M5OYbOwdjr/3kMwGbZjI9kfdX
zUPkGVw/Wsa9VPMQ+XTVPEQ+TzUPkU9SzUPkx1XzEM9nSFb5SeRf0ng/ifzm
UN5PIh+k8pPIy6v8JPKSKj+JPErlJ5HPUPlJ5NVUfhL5r2jeTyLvoPKTbLzz
eD+J/FAi7yeRb1L5SeTn5vN+Es9n6PmTf+4jr6167iN/cop/7iOf58E/95Hf
acQ/95GHq577yKc255/7yJut5p/7yGfy7dm5E6Gq5z5yX9VzH7le9dxHXk/1
3EdeRvXcR15M9dzH8xniVHEs8sjrfByLvLQqjkXeSBXHIi+jimORF1TFscye
ID6ORV5YFccib863Z+dOvG3Ox7HIiSqORX6Ws9/A+KaVfByL/PgNPo5FXlkV
x+L5DOP/5vMy5Ctn8nkZcq+WfF6GvJAHn5chT7/L52XInw/j8zLkRVV5GfKe
E/m8DLlWlZchPzmMz8uQG+7xeRny3R58Xob8dUs+L0PeaxaflyHXq/IyPJ8h
SlW3QT68NF+fQW6rqsMgzzrD11uQD4zk6yrIn3vx9RPk+6rzdRLkzqq6B/Jx
fHt27sRKL76+gXxBJF/HQD4sla9XIF9+ka9LsPMu3Pj6A/I+pfg6A/b3t1ZZ
l2D1McLXx1gdjPB1MFbvIny9i9W1CF/XYvUrwtevWJ2K8HUq/DOQP9SjiKoe
RZDz9SVWRyJ8HYnViwhfL2J1IcLXhVj9h/D1H1YPl97Xvl9pkP9HNm8hLy4q
9bDv88pDMW9lHOwkdWk2+vNcxbz1lH8XTlJh+XxX87y9l9fROyfpW3OH5p+9
zPN2Dj1nYE+tvPNVstm8lfPEtc5SwM28+WnD5q1sZ66zVCguTPR5adYT7S9w
MKyBoZszm7d7qf22r5xM193L5m0fan+/9u20JRu5snmL9t8j6QGOA2uwdRRo
/+d/qrh6Jvqh/ySzqf2PDjkca/vmFpufMC57yWHEobNKfwvvGe2lXY38vu9Q
+NveefakOEi59yZuO6/wt3flG+AotZLPcTX7W9lOJ71km3np5vj1Zn8r25m3
fvKR55ZOv34xfyvbc9Y035vUNPnVwszf1qV1vIQC+feGKvzALGq/x5DUITfb
lWT+lr6/k+pMCbg9fv0h5m/R/hKOpbsfDfRg/vYOtb/cwnffi5Spi89xgvZ/
CGla/PHSqmxd011qf6uAIVOP5D5kfmA2tX+94+AOgx/H4DoxOt8KSRNDFlZT
xg9wX0zP/5CxA5TxA9ivleYUfBpdSxE/gP06adnEvHOozPED2F9Y6uv2qHhu
kjl+gPMHikjhzzp1HTF8LYsfIO8uItUqWTp50/NdLH7woHW8KVdtjyufax7U
/o0Nm5Ss//oYix9mUfvnHbrRODepC4sf0H6n0Tvu/PVXKlv/04vaP+phjXrR
hT+y5xra33Zk69sxbe6x51oMtf/nQqH8wBaT2HNtF7U/bf7x9YeW2YSgzvA7
yieVsS9XVBkPl5Xtzy+FdS9mo4yHwf4C0vXhgW/nK+JhsL+A1HNAHZ97W8zx
MNhvI/W7HjTs9SVzPAz2F5SOCY38hwofWDwM+ttKHW3fx/jd/sW+T7Sb1vG2
zv3FxWm7qf2t1rXNTGpVhMXDHtT+NxffZuZc+h+Lh9F+zfE7t1dOd2Lx8C9q
/+7JV5pcKRfO1umh/eGTPk5zOOjD1jfepvZXP/F648QqH1mcVovaf802wjff
HnOcBucefRPndl5eXZnf9ZD7/y4+eZaU0U+R39WQ+/kpjpvX70KqIr9zk8f1
S4x6d3zqvSHm/O47rNsREzwrzTo+15zf3ZDtzBUbVOhWK/n4XZbfgf4a6deT
tU6fTr9keUcMreOtLrKeyzumUvvPvYy70mFqNtM5ntpf+O3d1psXJLP8rjq1
v3dc7M3phXOZzkZqv1trIe7cPT+Wd3yl9odWrfUqrUkNlndco/bP7hJ3snxF
c95xi9o/ctVev3W1zXlHN9meV+Lrth4RyrqEq3zdt+KkCLK3hqIucUnu54N4
umanv8IVdYka9BwSh9BjXfenmusSpeV+PokXFka+H5Vmrkt8g/VpoovO6+el
j/EsL+5A7XlczEZ/uds4lhcbqD1Xtu/ZsvBMBVZ/OE/tqde2T/SNF4tYXkyo
PWma+PWNN3xnuhmpPR11Ke/G3zPnxdnUnpaPa56/pMiLr8r9fxGnDb0xpI8i
L+4v/45SxILZ7neUdbDpMj8tdvebGK+sg1WW7bkqJtr+WHhcUQdbLLe/JQ65
2mf5aEUdrJBs5wNxx9pDR9Id2bogIYheN7DPkkjXqMPmdaT0ui18Euf9L2wY
06c8vW7xCUV6VK9fnNVn5tPrfmzvtbTRRXN9RkOve619xI+BivpMkNzPU7FU
8Q6zYhT1mTfwnlds8Pav+sr6jE7+N11weqPkLlJz6EdYZVD2Y5DgRdoD4W07
5XX10g2wU2jG2amVusO4hF3jlePKFPT0upOvhi29/mkd06cNvW7baNeHhfyG
MH1q0+s+4XTWk3v0umncfTGQvvS6PoWU99GFFJEPzjotLK6kvO9G0hEO1BKK
fFXOE6P0BOaV8Huwcl650HXsWULcI+U8NEh+MG8FO61y3uqlxjDPhczcbop5
rpVew+9CGNBG+bvQSEHwOxL6TDv8buoOH1YP/Bd+d8KT40sO3HOZwPRMp3a6
vNh3tMCWmkxPLbUzVav8/WpJJWon/3vXk6bUzpacfzCQ99TOerWU/sSFhFM7
p0Yq/Y+RjKd2Xm2n9FdG6RH4N9JxhdK/uUhp4A+Frp2V/tAggf05gleA0n/q
qc6/hDEtlf5WKzUB/yy87aD0zxppKPhzofQbpT/PFOEcqW+CH+//NSKts01T
1QOfUPu/PeaeLySd2n+4vPJ5pCU6aj/hnl96Upna34573hlIM2r/b+756EKG
Ufsbpyufp0ayjNrfvYvy+WuU4Fw7W9K3oPJ57SLB+YgFScox5fPdIA2EeICs
maCMB/SSjfyvDXk2SRk/aCU4T7EA0R5TxhsaqQLEJ2TMBWV8kikegniGxKzl
4hlNQ1pna6SqBzak9mfYcPESeULtz4pWxldagvY7cPGYnq5XsSHVuPjNQBZS
+x9w8Z4L8aX2H+fiQyM5TO1/xcWTWN8uQmrPU8afLtJfEK+S9/8p41UD9SeF
ydrhyvhWT/XXkYYPlPGwluqvI31GKeNnjQT2a8ncg8p4O1ME/QuR9L+4+Fxz
mNbZtKp64GFqf3kXLv4nDan9I9KU+YKWoP1ZpZX5hZ4Movb/w+UjBqq/jgzk
8hcXkkzt7xuqzHeMVP9C5CiXHxml+ZBPkR4OynzKRXoI+Rdxr6zMv2g90ElP
bIKV+Zqe6u9IXP9T5ndaqr8DOWevzAdxH40DWZ2kzB8zRdDfntwexOWbmgq0
zhavqgei/aGNuHyWPKL2Zz5Q5r+0Hmiy3/2DMl/WE7T/fQdlfm2g+juQtlw+
7kJsqf0vuPzdSPW3J3Fcvk/rgWudSU7Xck2dh2WxOtU8qBuQHgeUdQMD6P/O
iWQMV9YZ9JIP1CXIPEFZl9BK/aCOQda2VdYxsL5dlHx4qax7ZIry/scxRUmL
A1ydhL5HKEqKWqsH5q17vMHVYch8av/+msq6jZag/YO5Oo+eoP3P/1XWhQyk
P7W/BldHwvp2UVKHqztlipk07vrOxzmaDfS97Qh6jj22/0XX4z1Qtd9N3681
4NrTdXdrnaUa8cr7ZSR1KJdUnOopPaqjrJtlijdo/HySix8yxQE0zk/m4vxM
dv5qMvf+EeuKqZE3+Pe8mjPUfj0/XqEXjRP28nmEZi99/i4YpXz+sn3cpCtX
9zOSApQ3r8NzqgNxU+mA91O1TkyiXOLrtBoNvt80cvZrNHiO5Xp6XihyPJdy
morDn3R4JP1OBJKFtJ9DVts/iVS33077X2m1fWrkGL499edPxUFcXJ3JzgVd
PSGQeJzYxXhTmo/c2WI/zv6G+TyotZC/CNFc/pLJzgWdqeoH8pcUwZfLg0z3
ncbnqXz/Uji1sy9np0Y6SfOmMP667BzRjfx1xRs0/yrPX1f0pePKVl03i47L
k+sf62ZPhVa8buzc0fmq6wbRPKKM6ro16Hhf8Nel9zFbzBrFx5mP6O+xNR/P
aw7R3120ah7i77Ge6vcF8UO6OK7WwQPbpiw3c5o/nlzauJ7Hhk3s/sJ+8yzx
x87LHssHFBfw+7wyVpyfgN8NVHP8bq+a43d7kXsaH1zu0Ti8EH63F3nW26gf
5yqkGfC7vci1RzuPbd1opTt+xxO588F97gvsB/lqlH8m3i+4ZvelWe3Y95GR
pxSKy16woh37rjryvrHG+lu6D4zE7/Yid8mf79m6c8vxu8OM/62d+bvZlyfR
+N1e5Hq/4KA5+p9R+N1e5JmuE78Ghs+N4PTUOFjXU8E5PU38KT1vgdPTxCM3
f3z1LibbkdPTxNuVc/ftaDPEyOlp4ufk8xZ05Tg9TbzR7NgTlxbtqcLpaeLa
NsueN4gfEszpaeJht45Ehr9pEMHpaeJVKxSbuqB3WDSnp4mvebtpc4ZzlMDp
aeLXGnlHOzY5wetp4rOvuP6YUaoUr6eJG6fPTUvInsy+S4u88bGmD9e/tA/i
ddb9QWcz53XWSfsDSsxL+L2rMK+zThLpOQy8zjrp1/8GRJWvV9eT11knNQ9b
oB3ZaY8fr7NOutizbkCMEMy+N4288pt+31cuvBzG66yTbF5saDyl8qgoXmfT
dTtu8Z43ubrA66yTtHcTNhbrUk2ls04aVyrVrc+KGJXOOskrrl7PUW8HR/A6
66TNx8vGVmx1MJjXWScNrbDp97Y5xfx5nW2kyyk7zxaPKF6Q19nmDzrbSPfd
DjZ9W6GEM6+zjXRr8Wzb8vFVyvA620hP6PkMvM42kkvK1Z0bj60I4HW2kUbI
5zN8DeF1tpE85uXtc4yP5HW2kSY9up64ovC7aF5nG+mXsf6GAocmq3S2kXy3
dLr66l0xlc420o+nhfv4NrCN4nW2kfKd96jvMdo+jNfZRnpeMLzi3E4VAnmd
baShB+svGNuzXUVe5xyx3OqM6ntdn9nzOueI+Wd2fV7WQuccsad8bsMhV17n
HNHt2mlhU/Amb17nHPFg3cfaKl23VeZ1zhE30nMbeJ1zxL7J/p6v/vqGeZMG
eb+3pdILuJNoXucccf1GYe8/95YIvM45Yo/x1SqNyZyh0jlHbNZNu2j4A4H3
wya+eE/LRRW9bSN4nXNE7Q+Ng6dtejVeZ1P/hzPbZ8+4XZnXOUessch+wu2C
ad68zlni7/bi77c/3xXjdc4S12gabPLSNtfyOmeJY9K7rJwQsMyD1zlLjBn+
eaDTqM4VeZ2zRO/Jefu4owN5nbNEU6BTZ0Mz/zBe5yzxUL7Bin3i+Jcl7tmW
fFKzvrnA65wlptlVXrkke4dK5yxxfbMq2gHVy6h0zhLHk1aFi99YH8nrnCVu
zjzQ5tmOmFBe5yxxcMyLadmXfwTwOmeJjzZ1b/Vu5qkKvM5ZorFpmse16evL
8Dqni6MHdalc3qNqaV7ndLHQpbWv6u4/pud1ThfPJ+i03T32l+N1ThdDJ6wh
oenN/Xmd08WB8vkPhUJ4ndNF6c2QkmWjrkbwOqeL2zZf8xxTx5nVqZAPHnzo
2M4uK1U6p4utbpc0+P+7WqVzuhjUJaLugnaZUbzO6WJF20U2FVs2Dud1Ntm/
SverfeipIF7ndHH+0IHPH71rUonXOV18Ejb/lt3ez568zuliqYpRXcpW3urC
66zRhAXntX/mrtJfqBHM9cPal/HK62epav6nC5W8oH/+vmg0p6/n2VndV3W/
hNhBYD9/vzSasVdnJ8eF7g1Q3UdhwzLQgb+PGs3s63NWFXZtEKK6v8JcG6We
+Vn77UuuNykXlS9Sdd+FRp3hvvD3XaPZVKFc+zJ9n6juu0aTSPMp/r5rNFo3
aM/fd41GKLIt3NN8XbwvwpO3MN/4+aDR5K78GCYmhYSo5okgZSjnrRNr/+6R
54qw9An+qvkjzE6C+c/PH43m7ypPl/bwyCinmldC+UHwO+LnlUbzVJjRoYJH
59Kq+SZMTuR+p6x9J88PTvX2f9Sr5qHw7Sr8flV+Vai+jvMPjM9vAP5B5VeF
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
m6nFQ986FBPSeb8qHj3zbE5PQ5Movr1Gc+VhcbuWXxbQfAS/C6zRHKA8+w/1
Peq3mR+ueBb6p/6H1Yt+JYGdE3kdyHMap8F9Ma9jqU7Pc1O9TyfdqD60PerG
7tdEPg5kXFWXFoK2QB2bH2+6oDkLus3h7RfbUf9J7wvju3s+Otw1YbNKt3Tx
SokZf/cbcF7IUem5m9eT6d+stLJeyurtgj+tnwfx80GI7AXX3cM/H8XTaYHn
Usf0EvLL7e8zLi740vVIQh3hPcxbZuc5er7Zfdn/vGC8y9lWXjWKnkL7mZ3V
qf0a7i9daE7r//Df+H1wjWY0rQ8/UvVT5TE339h4M6hutB+2TjOe74dd3+UR
9BPE/+6E7GegQw3QgfGnVAfI194we2LzhRRM3FiP2nON9f9joHF7p98nkbP2
nyin/bD2yzXQTw1ef2HjvyOIpu9Z4RDozPh8qjOvZ5awr8HnpCv73kVfg+c7
m2/7552/OXHHGoHGdYzn0HPnwJ6f7D6OObzOrkxJG+E5/zsVZ/84Yrg+OVno
J/vV74z3WXdPOzaigsB9d97klwpH9dhr3rfrzvjQQ5HP73ToEch9j97EGx6s
kHp9MQnmvkdv4jPb2tW66Nk4hPsevYmfSxw2cU6vsqHc9+hN/NIJfVqpLftD
ue/Rm3izVcp1j3S+mfiigeF3Zr4ICOO+R69oz32P3sSrnoT+ue/Rm3j7YWAP
9z16E3dsB/Zz36M38et0vNz36E28fjToxulpysti7o29mjgiO5jT08Q/NqtW
ffKjftU4PU28ikOAvE6V09PE171tnr9OiaZhnJ4mbnvu589Ra73COT1N3PHD
zZt563U5PU2866COJPZIsQhOTxOvMM5VXu/N6Wnis2h7Tk8T/5f2z+lp4pup
PZyeJh7yDuzn9DTx1o4wXk5PE296n9ONcdSN11knGVtseDp76OJQXmed1CL/
wfj4404hvM46aVgtIaX5q+dhvM46k52e1fPWafM666SJLms/1v4rNYLXWScN
7WR8val2XCSvs046mP42987CA5G8zjqpfsKBb84rbkfyOuukd7Q9r7NO2k/7
53XWSXVKgj28zjrpKbWf11kn3Y6B8fI666TWLTndGEfdeJ1tpCHXCvbaVe5J
GK+zjVTvW8Ea/7xsGcrrbCP1+zIvdbfkG8HrbCPdHNCi1QdNeCSvs41UNqZR
+/tb7KN4nW2kjXNWnavzeE0Ur7ONtO1Fh66JAu5zQZ1tpNKRucEVbxujeZ1t
JLuX0J7X2cTnQv+8ziY7qT28zjbS3YFgP6+zjbQjG8bL62wjhV7ndGMcdeN1
zhGz2+7LiftxIpzXOUcs8l/As0LNIsN4nXPE+661z+2aqo/kdc4RD3Rr9ayM
wT2K1zlHrDPpH8O21p9UOueITsHDT3vPmxzN65wjzqg4Y1JU02fRvM454uRd
DVdVvJlP4HXOEXfT9rzOOeJY2j+vc46YSu3hdc4R28aD/bzOOeLqUjBeXucc
0aE9pxvjqBuvc5bYf2d/Yc2TOhG8zlni8Npdv/q+k1Q6Z4k22vGtq5+ap9I5
S/QslzVnSsgalc5Z4oOll2/1eDckmtc5S9wa1XGOS0d7gdc5S/w4/knNbSW6
q+KrLHHw2ureEY0nqnTOEr0mQHte5ywxIBr653XOEocuA3t4nbPEK9R+XmeT
PXS8vM5ZoriL041x1I3X2RSXBr52KXluSATPNZrbYXuyk68tUOmfLra0jzs+
Iv29ys+Y4rEui/scqaQP5+9Lurj80o6ojYWPR/Jco/Gn+334+5UuthkrFm0x
5WoUz00zxef6lKAOn1T3MV1s2Lz4uUn510bzXKOp/LtwUp8vJ1X3N13cU+5A
x9kXwwWeazTzVw4zvHVqp7rv6WLTWz/LXL73n+q+p4vSbM2yUxX3qO57ujiO
tufve7roVx6uy3ONxmkVXJefD+niPTounms0Eh0XP0/SxW9UN55rNGvLgW78
/EkXh16G+8JzjcaQDveFn1fp4scgmCc812hKRHDzhLVXzRPWHueJah4KN+g8
pO0Zb037Uc0rYRudV6r5I/SiOqjmidCZ6qmaD8KFctbuS7pQi94v1X0R3tN+
VPoL2nFwXZXOwmSqs0pPwaYaN17Gcbwqfyj8wR8Kra37Q0Fr3R8KXtb9ofDE
uj8UNlr3h8Jb6/5QGGjdHwru1v2h4GfdHwrDrPtD4Q/+UMiy7g8Fybo/ZLqp
nu/CcevPd0Gab/X5Luyw/nwXZlt/vgsu1p/vwq1qVp/vQhvrz3ehjfXnuzDO
+vNdqGH9+S4ssv58F/ytP9+Fodaf78K9dlaf70w3VbxKbKzHq2TrV6vxKnGz
Hq+SZtbjVTKzltV4lcRYj1eJs/V4lUyPsBqvkv4vrMarZNMcq/EqIdbjVeJp
PV4lHa3Hq6SQ9XiV6abKv0iH5lbzL3Ipn9X8i9yraTX/IiveWs2/yK0SVvMv
kt96/kXyW8+/yNo+VvMvEmw9/yI1redfZLGL1fyLxFrPv0i49fyLLGlhNf9i
uqnqCSTmrtV6AtFaryeQ9fZW6wnkzhur9QRS86zVegKxe2+1nkCSB1qtJ5C+
Y63WE8jJgVbrCWTEe6v1BJJx1mo9gfR8a7WeQCY5WK0nkP/ds1pPYLqp6mCk
fyTUc1T1LnL5gNV6F3GyXu8iEdbrXcTJer2LHF1ptd5FHK3Xu1h7Vb2LDD5h
td5FriRarXeReW2t1rtIc+v1LrKTrxMyPp3WCWFfunm9SuIu6Af2CZvrhJnN
4Lp03zjjLv3ATtjvbV6v4rcfxgXnd5jXq7RJBh3uyOMyr1fp3wd0q0XPWUA+
Nr+z3M8Mub15vcq3A7Pk68L5Yub1Ks2Tysbk2QnnTJnrgZu2xN/OGxfsTzav
V6l1ImrHA5M+cjeK9SoLvR0zWiT1CIT9jeZ1KV6NG8vzGfbhm9el+CRly/Mf
9DGvS+nw/JL8e5Ho/knkv2zayL+vFNlO87qUcWeKy79H0MG8LuVRBcfC/5r6
r033kyN/nrljc549oIN5XUrC88CqB02/L5hv5nUpvX77r3b8JztYHpZiXYrN
gfrPfr/qVw32bZrXnzxa7Pghz3/Cvn3z+pO2yztn5PlbOH/HvP7kmkPN33n+
2Waf3BHjN2s/z87z53CumXn9yf2sO1cWmPwwjMu8/uRCza0T7717Hgb7rs3r
T1bvP7y6wLHF9HdhXn+StuxNh71zioXA/mdbaqeNZCy8+Edt0/P3hTxg8zqT
1NexnkNNz+uNcj/mdSZzpk9t42t6vsP5ZeZ1Jvki4lPePvWLgPO5zOtMmseN
bjv/dibV37zORKx9/ojb4gWhI2RuXk9Svl+rL5lNnkVfovtgkb/u6+j49UY+
em6deT3JxSbjLnV54h8B+pjXkzwa8e/48tXSw6C9ed3InXObV7r8uB7+UJW/
36L5+4E/5N3/qfLr3zS/TvtDHp38h3x5Bffc0WjOFA3YPsEphfrBVxbvoSZy
zx2NRu8E7aer8uI4mhffVOW/K3PBnlmqPFdDwP7dqnxW435GHu9tVd6q0aTK
+sBrnDIKHpeQl58+UvpJU162b6z/yg1VdkYeVPpJE5+5dozd6D1SlK/ST5p4
zvdTOYH6edFpSj9p4pFBUZ22z60gBCj9pIlPnGl7ZUnnScI3pZ808SI9s1sl
ndgh1FD6SRMPXfjvkMRi8VQ387oav6q56YOMfvT8AvO6msbn9/l++jKf5gXm
/HTp0vUeUR2OR+1S+kkTN267FrL5+a7Ie0o/aeIrv/UquOhafATvJ7OESk89
3p5x8Y8azPnJLCH9vW/fY2vzR1fk/GSW0OHCrYRMm+XRJzk/mSW0yCfEDent
LJzm/GSWYPe8/tido7tTHczrZOK+ve9asLK9wPvJLCHstqA/kDokuhfnJ7OE
hrMPp3cqsSaK95NZgv+Sj8P91s6L3Mv5ySyh7GRjme3760Qc4fxkjtC9w1e7
eX9XoOM1r4ep6rFqq7HM56hWnJ/MER43zHCut35ytJ7zk6a8L2zqZcdmz6j/
Ma97WRyWltHFlJfFcH7SlMf5eD995Owe1ZPzkzlCp1dTMvqZ8jLeT+YI165F
h+pNeZnKT5Kz3RL+KbXdPuo17yfJL/vq7/qZ/Oc23k+SGmsDbo0w+U+VnySh
P/fXfm/KX1R+ksyak3fOjG+Eyk+S/Ys3SjtN+csozk/qyJnSrYTNpufLDc5P
6siDUVGF7pqeL+6cn9QR/+1vdufF7byf1JGVtnce5cXt3+VxmdefBLfvKz9/
3Tn/6UDulxkpx59b+d+daEd/d37AWX2vGOXDeC4gp3EF6KyIK6Adi8fYe9ss
zs4sUXtmRp/vNZtRv2peZ1L1s7HnxkvNhNXcfUkXjw+wrzbR9X8qrtFsXpri
urfrRWEccOZvL1AOfti8PsSf9v+Qt59s5e1nHOPJB3wcRf5H2/PXTRc+UTvh
v83rE/6lz4Vklf17qJ18+3ThLK277uL00WgOndsxoOPpa/S+mMd7i/YzkBuv
RnOatp+leh59p8+vqSqeU1T5nDL3f4r2D78L8zqco9Sfq+rDwnRaHy7P+39x
D23P53Gm+0Wvu1Wlzxp6XVW9WmhL+78Ov2tm5+pUt57byByhI3/fxXr0vsM5
O+Z1Ne50Hqruo5hG7+MP1TqWZfQcj2Xw+2X8ZEivhG+6tcJm8POsf5/YKg9m
Liop/Fatoyi8C8734O1PFwd1P/+jbLEBQgleZ/F2n1tVIzMmC+B/zOsofna8
1aBY29GC/St5/Rhbh7CbnrNxCNabSdDefK5FIKxbY+/Zy9FzJCbBOjfGC9vC
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
++B9PecnTdyNvt/n/KSJf6HrAe4o/aSJj6TrBzg789b9Ur9XgOfCKcp/K/2q
Ka7Loedj/+Q5mUD54kV5f2ct3ifW4d+Lib8WwHuxRko9TXwr5fNV7zHT6XvM
/1R110e07lqP70d4RfuB/3bB+8X6gz8D4+3WD5u//3xVCHvRj5n4qJF7ptkd
v2EArmV80O4J9Q9/meZOO2J81Y3JfTufbkHPE2bzQbowvV/xM9P88Txwpufh
H2W6l5/Rj30fAfkZfXVpWM5/7HsfyFvX3xDx6dt1/rvVeeeWxFd53WAmchfG
xyTknPLS/8TvgNDxO0h36PkenA4m7tslNnnJrE+OnA4m7vLYN/RGwT5GTgcT
Pyqf7/Hdh9PBxAv13vf30cQlVTgdTPx34sik+MkNVN95NPUf33XIoLBQgRtv
3r4nnxbFvnXzFLjx5p0/POLk9X4RJ/jx5p3voV+enZcvw3+z90fSDXpOET9e
nbSHnu/Bj1cnHfGauXBS35qe/Hh10pSiY6N+Dt7ox49XJy1qvrJNyAUPdh4+
8m0tfDq51t6E3+kgyH9US+rc83IV1bh00nGnYOfeK2JU49JJa2pAHYMfl/l8
D95+G+k0Pd+Dt99GGlm3/cToqwsDePttpK7y+R4vQ3j7baSD8vketdl335AP
S/4t13N4O22kHHq+B2+n+XwP3p4ccQo934O3J0dM7OZ+PDMwk30vA/nvl9Oq
FBzjrdLHfL4Hf13z+R58/1niNXq+B9/efL4H5bS9yR8uS2lXZO9nOh9cGD9i
XyCy1eGGlag+jF8dHJEzvvFR1XdX0wW75btGLNtSg32fBbnj0D5RCXYP2Hdw
kG/2mu2mb8/OkyfIN9xv61Lzsg/7fg3yXWlQp6XXZRzP66B2Mo7nddBxMY7n
dfD6mM/r4HXIEhYWcgvKuvwjgNchS+j3ZcH0eOca7PspyGf4RR507b+cfQ8I
+anA6x4J1R1xvIxXCHi1KXHNXJUO5nM5eB3M53LwOpjP5eB1MJ/LwetgPpeD
18F8Lgc/3hxhe9m02hW8bdn3j5D3KiB0qTgqjH3XDPnXm1++ZT4bqxpvjuBQ
b9DgW7bm72UgX9sxJm7eXTwX0fJcDn685nM5+PGaz+Xgx2s+l4Mfr/lcDn5c
NsTr27tfY97h97+YnyHVj92+GtQzWDUuG/JCa/fhQr3JqnGZ4sFN5fqYzyG0
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

    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
6H1t+b1V8N6J7/316Pq77ld6QBpAc+a/1vSWeA==
            "]], Polygon3DBox[CompressedData["
1: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
aeJJS3Eb8SLxKvH+4tbihRXr6z3F+/C7Ffsj9NToaH33t8YPFB8sXizeJVmv
doiOLzsn6+1Lo+PbPsn5w43R+nu/5Pzk5mh9ur/4NvEt0flB02T9fVV0fG6c
rM+vjI7P9ZP1y4XR8X2HZD1xQbTeaJSsfy+Ljn+/63r3YG1hp8S3auvnQ8S/
iuslx9Pzo/XGrsn5yuXR8XSm9t9YvLP4EbSm7LM7c6NnvpvG/xR/JP41OD71
1vFbsN7E92n/D8Vbi08Njq8fJecLpwfr9ffFW7K+xR3FH4u3LazPyWc+EG8l
PiU4/hIjnhI/nP3Hh2X7m+uC5/MKjb8hfl7jO2j8xuTrfV3cUHy9uBuxDl8m
/kjH7858BM/nZ8n5zcXB9/tpcr5yobgz/qJsfxpyfCL5Ql/XyPGlRsXxqZzj
x7k6/n7xY+KhGusl3lx8nM53r/ivsmPv+uB4+E/Z8avI8a6P9t8O/xGcH34i
rst8Been1RXH10qOR3+XHQ//DdYj6GXizRsa31H8Qdn+lCSa9d5aNrtjlTUE
WqKXxuuznoPXS++y7eeyYHvAvzM/u+t8T4vnVXt+m4qf4vq0/774+2D/uqja
17unxruIu2m8jH8Jtnc0Bdpi2+jnMb56w60X20WvnwnVzvPrRq+PGeKN8DXR
87Gw2s9nD/EzzFfZ8eGuYH//Wdn2fXdwfPi4bHu4JXj9/1Tt9bqbjn+c9ajx
Rvj34PjSp2x/cGtwfPix2vO3q/Z/LPuX2uJG4kfxX9Vez43RaOSLZfub/wXH
o1ixfizl+Dq32uu7ifhJjfXV/m3FHYP9db+y/U2nYH+9uOz1+7N4V/LzivVj
dY7faLiJhbUB2u4n7f+keFSwPcwRP4x/FG+P9hN3xp8G65MFZdvPDPHOaNWy
7W20uL74lOT9O0bXU37R+Ovi6RrfSTxP/KJ4YrC9zS9b/0wKXn/kg13FL0Sf
7yHxF+I+0XpnrvZ/QTwh2D53Kzm3XazxLcXLNd5X40uD9d2asvXXmmA9vko8
iHgRrKdXl33+1cH6e23Z+mhtsH5cWPb1zBTvIr4w+fqfjH4+KzXeX7w8WD8t
E38u/jNYby4VfyZeEqyvV4j7iZcF6yt0DnqHHJkcal3Zen5dsB6+I9l/vhf9
+4OT6zc3BNvLt7l+wvoh/+mUfD0fROvH4cn1q/8G11vuS34+vaPXx0hxG/F9
wfWV25P15rvR8/tVcn3ntuB8qF9y/eby4PX9TbI93xGcX36dXD+7Pbg+cluy
3n0nev5HJNcv7gnOl79LrnfcG1yP6ptcv8KfYC/3JD/PXtF6b0hyPejG4PrQ
l8n59/XB9j1U3Fx8U3D96Yvk/BD/jz/qmPz834+OT4OS7fnqYP80LLn+hj1T
PwsV52cp5wMDk/Ppq4LtsX9yvnhFsH8YkFwfujLYvs8RdxI/quOH5PxraXQO
2yLZJ+ObqeGQOxyi9dy0yjWhFjlfIvdtLG5Xsj4sqrzPoSXvz7maZD6o5H35
jvzwQPGuVV5j25esodHSa/Q5ItkH4AvIF3YoOUcnVyeHJ/FFc6I9d9I52nCu
krUkMYHYQK5YW9s19Pk9+pq5dnJM7pUa19zC+SbfoWfZn+OOz9qMa+eauc+9
StamaGy09pzk395Unz1LPmZttCbmXGguamvkhGgx5oy5wyej1Zgj5oo5wZey
xlhrrEFqodOJscGa8NHkNcnaxKao7Uyr2BaxSXJtbAxbw2ejFalxUOtoVzhX
YM6Ze9YEvp41xdpizRALz9c5HtT2E7rm4RXbHLaHDVDrxIawJWyI2g1rnLWO
zVMbZU2ztrEBaq3YNLbNmqW2Sp5KvrpVlfNBfAS+Ahsh1mID2AKaiFiNzWA7
2AixEpvFdrF5ap3YPLaPD6E2Qg2N9cDzX6ftbTUHdbW9eZXzC3QCa4Ma53X5
HscH1xC59y8rjhXEDLQaNcBxwTU/aoODiX/BNcGzk21mTHDNDlv6RjwluOZ4
aXLN+aHgGhO1aDTU2OCaINrqa/Hk4JrgJeKvKo41xBxyb3IA7A+NRG7QT/xV
8BydmKxx0DoNCmvlgeIR+CbxackxbGI+H1qyr8aHB9c4j0/OQWpm+yY3+Rwf
E6z5jiW2iUfiO8RniAfhE/Gt4tPFtUu2nxLrP/nDNjVY6pHUe7A77K9JyRpt
YXS+jX1y/EWFawDUS3cuuRbAdw2Ta57UPskJyQ33KTm3JWckd6TeRN2AY3Yp
ud7A2mJ/juMY6qvLo89FjZl4HLFpjfUU/1U4Z2uIlizZ9+CD6ubf2zzb9+HJ
Ns42OSP1Yr6DN6tyvl2HT5V/c4/sH+4t7FPwT4cl/zbXgDb4LfnZ4APxhfVK
9nXL9alfcs2BuEv8JT/9Vs9/anANu0NyfYteCz2XzUvWoGhzNB3alJhObCdG
UUsj5hP7ibHUntAgaBFiDrUnYvq67G9Yb+TA1FLJsciN0QRoA2I4tRhqBtSC
LyhcS6CmQG2TnI5aAzGMXAsNT2xDg6BF6FlQ20HDrM3+i9oY/pu1gc1iu2gm
6vzUkHhe9FDopVDDaJfcE6E3Qg3jkGSNhFZCU1G7RKOj1fVnQ66OxkJroaGo
haKx0FpoLGqZG3KgaE1K7Y2YSmxF81J7Q/OifcmRqDVRo6L2hQaidkUOSS75
cfbHaCK02ZuFtRI1NWpraBhqb2hGamVoELQkmgbt2rWw1kFDoiXRdOR+aNBJ
2V+QG6FZ0K5oXrQMNVtqv+R41HLJwUhIqJlRi0RTob3JKdFaaG60NxqCWho5
Xzn7G2qJ9Ozo3VEDOTpZ41DbQsOjfcj5yP3I2aiNoumoDfYsrPXI4cjlyAmp
NZNzknuOzPGQ+hm1dXqEpYrjK7aEDWFL9PDo5VGTOTA5ZyR3JGei10lOTm5O
DkItnByTXJMcj94kOTq5OjkevTZycnLzOnk9kCOTK5MjUyugxxTz9T2r35sq
XqnxgeIHkjUl2hINSC6FBrws+19yKXpa9LaGiR9L9mH4ssXEvJL7b9QiF+mz
Bb0zHbOgcI0I+6VHS6+WGtNxyTVqaqfU5KjNkUNSayDnI7ckx6RWQU5H7klO
Sa5PzkquSc2B2gM5Hb0ANCBaEI1M7kiPLeT1gj1Ss6G3Qs2QWg49YHrB1IDa
J9e86G1So6EWRk2I3myHwrUiamT0ZqkhUTujvrWAhLjK2pAeM71makItk3u2
9G6pGbVJrjnS27ow3y81r/bZn/F8qTnRG6XGQy2KmhO96SsK16LIEUfl+E0t
hR46vXRqVCcl99jptVPDOiE5B6S3fkfh3JCcbnSO7+R65FDkmuSM5Fbz8vph
faFPqOmemdcTtV5yUHLRR3L8HkAOlPnU5LVOr4Pncb2eS/+K9++cf7+G7vlT
bf+h7yaxFsWfENvFE8XVJftOfOhk5k7ch/UhniBeq3O8JZ4V3D9cmKwFuAau
ZVFy7EYjoBV+Te7FEOOJ9YuTYz0xnli/IPnauUauNZVsCyvEU8Rrkn0bPo7+
6D/Jto8PoL9Jc5t+wILg/uh6jfcSzw/ux5ZKznexMWyN+uzR4rP1bHqgfcXv
iOcE91vXid9mLQT3U6tK9rX43PHYnsbfxTaD+8H/inszN8H93l/EDxXWUGip
n5PznyHiT8VLkrUZmg5ttwzNXlgjohXRPHeLH4x+Pmii/+G7o5/fn8laEY2H
1kOD3YXviH7eS5O1JpoSbVk35zt3RfcbWQOsxU55bczPehzNhnZbnuz7iQFo
xT+StSeaFG1KT43eGJoL7TUvWeuh6dB2c5O13VDxZ+LVyfWPaeIR4t+T1z42
gBZemaw10LRoW2ro9HrpUVBbX5Xc/0aToE1WJGtfNC3atrb4UNa+rqe7eLNk
LfwfcbeK+wHkcqeI36vY57K+Bkf74nLJWgRNQq5TKdm3khORGxFjmf/Po8d/
y/kV+Qb5zt15/fSMtqepyb4Cn9FbfGe2l+7R9nNXXl89ou1tSrIvwif1qjgH
w976Rv/+HXn9d4tef7Pz8/8i+N2Gy7J9PRf9fC/O9vR09PwRI7DvftGxo0O2
v2ejn+el2V67RD//S7I9PxP9fGtWrH3QSGglcpKO4kei18OMvP4GoDnE08V3
ivujOcQz83oeiIapuH5+Jr4z+vmMF59UuB/P/PyQ/L7Aw8HvH43O80uOQ64z
WXyW+DU0ALlMPh/9bex5gvhknkfw/E8UnyJ+Pnh91BEfIz4n+nj6lsRO3nGY
ju7K/oH3B3gfp36+voui5+eBbO8fR/uTadme8PHvi2dlex2ERqtYo+CvPoz2
p/dn//RRtH9rkK93anT/dGy+vieC328ZJ24vfjL4fRhyRnrBnaPthxottVry
fXoX1HSp7VLTpbd3ap6P+6P9Mz0X3i2gh0UvBh+GL2MN864Lv8FvcQ28i0NP
jXeJ2hXutXFNXBvPiHdxeEaPZ3ult4gPxZeyxnmXhR4c9QFsEFukZkvtlpot
vTd8Or69a46H1JSpLVODp5dJT5B3O+jR0SvEx+PrmQPejcFH46uxMd6FISYR
m7AZ3nXZYPPBPUF+f4OPDp4D3tWhZkztmJ4Pvb/1eX/mnLlnTbG26OkRO+j5
wKw51jI9Ld6doAdIr4seKO+S0EOkN4rP5V0P5gxfzJpmbbOmedeOGEYs61FY
b7MmX8vnZ63S0+LdE3qk9LpY08/l68PXsaZZ26whfCE9HuobjQvXZ+h5dcn3
Ty+MHhbvztAzpbdFD+yVfH/0xoiZxE7WLO820WPl3R16wvResQF81QX5+RDT
iG34hKOSfRxaAZ+J78PHoS3wafg+fBixlHwG34aNYCv4iIOTe6y8C3RE4d4r
PqJn1mM8b3quvFtET5teLD0pelP0LOg9EnOIPcTcY5J7CtSrWuX1SY+DXgf1
K3rj9GDoxdATofeNDyVWEXPwrfhYfC02XatiH492wqfi+7F5bJ93KFsn+0B8
ITbXNrmHRC+JehO9VHpE6Hn0PfU5fCK+ER96ULLPxHfiU1ol+wi0EJoM34EP
QZuRH+Nb1mb7Ozqvz/8D8mSaDg==
            "]], Polygon3DBox[CompressedData["
1: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
Ssqyj1kxlqD+B1d2K6Y=
            "]], 
           Polygon3DBox[{{1603, 1602, 2314, 1002, 1003, 2315}, {1761, 892, 
            990, 2311, 1607, 1608}}]},
          Annotation[#, "Charting`Private`Tag$41727#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJwtmnW8FVUbhc+9nnHP2WMgoiDS3QiCiIUoAiKthNKNSjcIIiLYSiiKhBJi
d4IJdnd3d+tny/es35o/Nu9z3jtnZs7MjrXeTe2Rk/tOKi8UCq/zzy7E+bFQ
aJkUCgeXCoVmxLPKCoUTisS0UDgdvjQUCpXJT4IPJ18FngwfAe8LT4QPg4/i
fJVpe9Iu5btViGcT6xJr0PaiXcHxJeIrHL8/f/uH787luhel/u5S4nqOuZD8
s8S25T5PBVpNPs8kfwzfXQNHcq/CNeAZ5DvBD8KHkr9fkXYZ+dHkD4dXw2Ph
5/VbOWYr8XKudwH56/iNp6e+7vVwJ/62EZ7E8R059kjaGj53Ib+FOJX8AeRa
5r/3SPLryZ+i4+Er4VP1TOCr4Anw0fAGeKLuk2vcBJ/ENdeSzzjHa+SPgG8k
Pwt+nXYY/A8vaQn53+AHyV0KJxz/PDwf/ob8XfA8+Cv4Dvg0+Gv4TngFXM7x
z8DL4TL4aXglvAv8LHxh4nfxOFyf3P60qrRl5AvEp8hfAhfh5+Bz4T84fge8
AP4Wvhs+A/4R3qr+A/8KPwAvhn+B74cblrtPVKSt4Pe3IS5XX6Mf7OC4ulmh
0Krcz1d94nJygfgS3x1PW6dzkjuN4y+Gb+RZbkn8Hq8mbqYtgLtz7CL4J3gb
fCb8M3wfvBpOOefLynPtY8k3Im4k3x6urL7N3/cpd584j/yfxEfIHwKvgkfB
X+idweXE8/n+v3A14iLaoeqr3NtFHP8dfC/HrIL/Bz8M35A/qz059jj4engm
+W7wdfAM+Fj4Wng6/CetN1yT+BetD1yLWOCY/nADeCetH1yf+B/tBLge8Tfa
YLgJ8Q9aL7gG8VfaILgx8V/aKLg1cQTnfBg+Hx4OP6RnAI+FH4eXwePgJ+Dl
8EnwNvgseBj8IHwuPBR+AD4HPhv+Ar4N/oc2Em5F/IzWHa5K/JR2HLwfcQ7v
tyvch2f4HZ+Ph+sQf9H19L6I/6P10DMn/k7rCVcnlnGtAXBDuB7vsBJtb9pP
fO5Cfl/ix7R28N7EN2jN4X8Za2/CLeCd8PdwJ7gC8QfaMXBF4o+0znAl4uea
X+AC8UtaB7hI/Ip2JLwr8WvNC3BK/EbzApwR36K1hMuIb2tOgXchvkNrBSfE
d2mt4UBM+V3D4BZwCR4Ot4QrwGPhg+A94TFwW3gPeDTcBt4VHgI307yiuQ8e
Awd4KNwc7gpfA0+DP6IdBO9F/IR2MLwP8UNaW/Vb4nu0A+ES8QNaG3h34s9F
v7sqxBM551Z4scYI/Bf8KHwtfAN8K/FU2tvwZvIT4Hc0luGJ8LvwFng6/InG
OzwD/hS+Se8EvhNeoL4PPwZfpPcD3wWfrr4DPwJfoDmK8XaVxiHr3uOJ5+8r
iQtLHncP0N9WpZ6HLyNO5W8faV3QeIIfhS+Ep8EfwzdobMHPaK2Eq8OL4b5w
RXiu1g14f3gR3BveC54Dd4arwWeqn8NV4TPgXvDe8Dy4K1xJ8x18LDwEfhZe
BY+GX4XXaezCr8BrNbbgl+E18D7wfLgbPAZ+DV6vcQPfDy/VO+JZ/E2szDM4
Af5W9w7vwlzcS32L5/Bb9Do6AC6S7w2Pg3eF+8InwwncBx4Pf8XxLeAu8Ne5
xugKfwu3grvBC7jGFdzDtTzzb8gfQP5Y8p9Gr/ed4C+idckx8Jdwc7gzHLhW
f/gUuBzuqX4Pl+CB8AQ4hQeof2luju7fI+CT4f3ghlx/OBzhGnAf+H2NIbh3
9Bq8B/xf9Fw8Ur9R5+aeD+Fvf0drhWHk/4pe44fChcxz+mh4Z/ScPgr+M1oT
DIH/iNYKg+HfozXEIGmiaJ0xXNqE+DfXeoxrFfU74Pbw7vB0+Ch4Gce1oA93
JzYvN+9Ouzj1+DqReEnqdbOHclqTNL7gxuVe72uXW3Ooz1/HuZvwuQGtDu08
jvtB8znxlsTz5AZio3LPrTXLPYZ1LY2rpvn63ozPnYhH0w7Jz1edVi3XdIfl
uk6aTaw1/S7aWr53T2Ltd1B+7J2JdcIdxO60+zhmSdFrqHSK7k3nPzC/hn5T
61zHSEdIT+i8F3P8TuKTfHeL1n3ym4nzSj53g8ya44Bc17XMeW3+W6Qt9Rwr
5r9RmrZZ/hwOKfOzqJevNe0539XkJnOtlfnz13uoTf4cuL/WJvh8vSO4fq5h
Tir69+pd3qb5OPiY+dzjI3w+gvx2YkabSv5Ijt8NngZ3hGfCn8E3w7Xgs+F+
cB34XHgAXBc+Dx4Ir+L8C+GN3Fsj8svgIeSbwivh4UU/W/WJ3aSHUj8P9bd6
+e+vlD+PprnW1/NX3/qvzMc0yp/PLhqvxIOLfj/182Nq56x32ZhjlpMbyjFN
4BXwMLhccwzcruj33CC/nzo5V8vvoWHe936NXuf6p54D7iG3qOj57GZ4Ljw2
eO1rwzHjgtfWtvAmWtdyP5OGiXXmYI6/is/P8bkF/WR88Pp7kHwDvKTM89UF
wR7q6NTzmuY3zXXraU/z3Rnc15ZgP6K5bmOwT9E8uTl4Xe6aX1/9U2N1fbDm
1Lwn3Xsv52nJPXQJ1p81UvfNTvlYeyKxX7lGfTrxOQZx/ycX7VPuSzwuO+X9
eU1q/TmQ+Gjiex7HsU8l9oA9iv6+zqPf3zlY81RP7aW60drRugbrn5qp/Zu0
8zOJx5qO0ZyzlmMuKfN8ruf8An+fyTNZGnyto8j9HawBBvNbk9T9eRT8V7BO
GAT/E6wNhsB/wm9p7MDncL7f4e3c71z4S/h2rbmp9f+EkjW3tPcp8N6pfcok
uHpmnToarpjas0yEK6T2EafCZfCH6p9wMbUOGam1MrU+GQEXUmuGYfCEYA3W
jtzEYG12MDwpWLO1hyfD47SmwEuC/UtHeGawvz5Uc1WwnqwFzwr244dpDQ32
xR20DqbWJMO5bt9g/7hXyb5Gc9ImaYFgv3yEPBc8S3MIPDvY1x8O75ba053M
d48L1qt1yA0J9hct4W3BXvgE+I5gb9sHvi9YQ/aDHwoea1rX7g/2MhqPdwX7
677wPfAm+Hj4YfiWMq+JLwT7CGmPR+Dby7zOPh/sKbTWvxjsTaRDdsC3lXn9
3Q7fWuZ19plgb6K1uEPi8aH+/wP598nPIv8W/GSZNcObwb5GmuFt+Cn1Ab1z
+AV4Cvw+/Jz6DPxGsCeSDvkAfl5zvt4//CI8FX4p2E9JF30Bvw5Pk56B34Cn
Sy/Bb8Iz4Jfh7WXWVNKj0qXSXU8Ha2lpiafge8usSZ4Mnt+kbXoFe5P6cM9g
z1IP7h3sfRrA/YO9UpPU/kpavSHcI9jv1NWcGewTm8InBvvN5vDQYL95ADws
2Ge1gofDA+HW8Jhgr3Ggxn2w96kNDwz2sM3gfsHerTF8YOL5Q/PaLcH1k17k
90jtqRcQjw/21BXokz/CH8CzyX8PvwfPhJ+A7y6zdnoo2p9Iyw0O9sItUuu7
o+HdiP8Fe/N55G8LrtX0hkNqnz6fuJP89/Bp8O/w5/Ac+I9gPzs3ta7Q2iU9
Ih2q2s4czp+lrs+M5x5KqeszY+Flwb6gBfxasE/pCs8ueR7WfPxosH44mtxj
8GbNjfArwX6ni+Y6zdtcr4x561Xyd2iNIH8lvFRrE7w62F+0kdYO9iZtS57n
Vdd6TH4iWPsdo1pcsDdpDl8e7FkOVK0Fnq13B78aXYOQX5gWXEOoBk+FT4Sr
wouDdXKDkrW2NEZPvnNmsI6tT34k3A2uBJ8U/F72hp+O9snyICeT70u+Cjwq
uFawL3xKcE1gP3hEcN1gn5K9i46vXbSnGaG+Srws2Fu15pjlwd6qJbwi2Fsd
oGslHu8rOX5p4nd9Kzw78TjdAE9OPMZXw5MSzwOXwwsTzyfXwacn7pPXwuMT
zy0rivZMmt/mFe2TNEedVrR/0tw1v2hPoz58RtE+RmP8THhK4vnnCnhW4jnk
KnhO4nljI7w69bp/HPHWYB11OL9rU7D2aw9vCNafqveuC9aH7eCVwT6xFXxn
sPbrAH8cXfOVV9pK/lKtF/DNwVrxsJLrp9Kus3KN2qHctbyHaIfDDyeu00lH
HcoxVwfrz0Pg24M13hFwmnq9HgOfTX4K3Ag+L9jvNIVrZq6jTSm5Zqjfq99d
KXWNdDK5b4L9eF/1h2C/fHzJflP30ixz/VfaZRuxNa19zqoDaEw0z6z3upDf
kNojSPdK/65L7LGkw29P7BPuJn7NtZ7mmD4le3j1N+mbn8m/BJ8gvZG5n/WG
Pw2uJ/TUcw6uUfSAL+Pvu3LOFzlHTF3LHadxlPl9nwh/Flzr6AV/Au+Au8Pv
BPujbvCvwfWBAfBPwTWBfvAvwbWC/hpHibXTJtWagmsCx5H/LbhWMLBk7XqM
tGLqMayxLC0rnam6/5PEucE1vVocfwY8Hq4DzwuuK9aGs8y1wmPhQYmf1SXq
w8HjtCb5d6NrW/Lj8uXqAx045pxgv9OY/LnBfqcJPCW4Hrg/vDDYI9SFpwfX
PKuXXJeUBtBcqTlzP2nfkuvU0oGat1UXkh+9IPU8rJpQ7cyfle9Ibt/U2nJq
yV61bf7eVUfqmD8H1X7lC1U3WBTsd+qVvJ+ievJi4o2J/cpNieuc0mV1uNZ+
qetjM8hVSV1zng5XTl1vnwZXTV0TmKl71BrJeRZK20bXpqXHbk68p6Dzr4/e
D5BmviS61qb++Xh0/Voa4Ino2qXWep2zc97nH4uub2qN3hxdx5e+HRZdB9Gz
HRVdj9D7HRpdp9BaMCLao+qdroiuPamvPhldG5UGeCa6xqp1+anoOqk0xv3R
9VBp3eei663SGy9E1xalMR6OrjlKq+yIrldK82yPrlFK8zwaXbuUtnk2uoYr
7bo8unamcfdIdC1YuujB6HqrtO4D0XVY6Za3o+uk0tuDo72o1riR0d5bfX5i
dO1Pc9Sg6Hq61qax0bU89YE9M9fWpQn3yFxbl56skLm2Lk34WfQehvrJJ9H7
W/KSA6Pr+Fr79spcf5du/Dzap2ls7pN5fZKmrZx5nZBWWRk9zjXnVMu8tknb
jI6uRWqc7p95DZPOOSm6Rq8199To2qXG3SnRNUrNyeOja4ta38dF1yi1plfN
vP5JU9XIvP8h/VYl8zoqvTQmujaqcfpOdF1bvuOt6Dq1/M770bVs+Zrbo/e9
NLffFb1/o7FwT/ReoMbLndF7RRqb90bvq2mMXBu9X6U15fLouq3mwMuia7ua
k1dH15c1H14RXV/WnLkleu9N3vPu6P1LjcfbovfD5Blvjd5Lk0/UHqLWhSXE
s6NrVZpntL+pupxqdfUz73FqzN4UvccmH3pz9P6cPOaN0Xty8l+3RO/hybeu
iq6Jay27LnpfSnryhuhaoXTm9dF1dq0Xl0bX07UOromuDWk+Xxe9Xyi//FL0
3olqIKpTSYevla+J3luSP30xeq9Fev716H0medhrov22/PKb0fsu8rAfRO9J
yFe+HL3npLrKe9F7EvKe2utVre0K4vPRezPyER9F7zerDvBa9D6WvPPaaD+v
tW9T9H6efO7G6H0+ee2ro/cd5cc3RO9HyqdfFb1PqVpBk8z7rJrPr4zeQ1Wd
4ZXoPTbVc+6IXoOlMe6L3qdRTWNr9F6R6h7boveKVHvpF71HJe16QfTapjXu
ouh6vdbT86P3J6Tzz4veS5CGvzB6/0Dr9eTo+qC09yL4oMT67eLomr7W91qZ
9Ye01i/R+9zy2gvhNon11ezoOpp0++6Z9+TkSc8g3zaxZlsSvXciT7E0er9E
XmNSdN1QOn9Z9L6CNMlZ0TVNab/F8MGJ9eE50XsJ8g7nRu+1yIOcCbdLrOum
R9c3pS2nRdc9pbebZtaIqm1+l9+/fF/MvG8k331a9D6CNOpumfcU5bvnRe8F
yOP8kD8r1R++z3+jfNxP+X2qtvBjfj+qOTTM7Dl7wgui9x2kjW8Kro8pPyu6
Hiq/MCW6fiq/NjW6firv0DhzTUH7+HOi65XyWadH73FI3zbKrC9Ve58bXVeV
/6qXWQfo/z98GP1/KVTzGRJdJ5We0f+fUP1b++OVMvsN+dz+0fug8k0Dovdx
5X0qZvYbqiEcH723qvpP3+i9VXnnfTN7CXnnCdH7T9JR/wdElgUW
            "]], Polygon3DBox[CompressedData["
1:eJwtmnWgVsUWxe93nfHM+a6BiiglIWKChYgiHSqISiPSoXS3hKAioIKFYItg
gIqN3dj9fM/u7u586+c6f5x7Z505OWdm77XW/hoMm9hjQmVFRcVG/Qn6X7+q
ouLqWFFRQ/i0VFHRI6+oeLpUUXGBOleWKypGZRUV3YV/F/6v8CDhw4W/E35O
+ACd0094d+HnhX/VNlvtjdr3gI49XltHtb/WvqfVN1C4s/C3ws8K/6Ntkdp3
at+T6ns1c7ufninXsy3W9bfWszXVtlztAervpP5vdM4zOvd3bSepfZP2PaS+
ftraqf259j2pvr+1LVT7Du17gmfX+92m9nztW6a+77VNUvsq7btT/adqG692
Dd3/XfV9qe0E9V+ofVerby89w9Fq19G+x8o+5wLhQ6OvNUG4r3BJ+FXhscK9
hP/W8f8T3kfnHyu8i/ATwnsLHyNcV/hx4T2FuwnXFn5UuJrG4HLO1b6Pda19
1d9b7UbF+/fRvjbCnxbn99T7PSO8SvgC4e94JrWv1L7bdWzj5O9XXfseUV9f
7Wsr/FnxPL2FWwt/UrzfYOEjhL8vvu/+ye/XuPj+vXS/F4UvFl4l/Je2k9Xe
pH2P69xxmZ/3H+17WX1rNC7b6Vvuou1GtW/QVkftuto2qr1A199G7ZvV3k3v
fpHwTsLXCO8qfEby8dcLNxJ+QtdtIFxL2wrtW6+tptr1tc1Q32+65xz9v1HP
8KCe5Sr171jp+c6875d7bBnji3XsHrrmKLV3Vv9K7q12PbV30HZl9BphPl4a
vXYaats5eIxm6Vq1he8U/opvrvvtkXxudW2L1K6l/jvU/6X6/1L/n7rnAuHb
hR8Tvk/XPazS9+c5GAfGo5m229S+KfrdeMdr1d5T15up465nzer6ewv3Fz5T
eLXwGbrmNOabjv1A99pF/Y+r/0/t21r9p6l/gto7qf899f+hbS731b6H+XZ6
p/+ofYn2rVbfQ9Hv30bbI2ofrGuMUP+BxfxuLjxEuKnwS8LTdY1BwpmOfV34
NeG7hI8TLutZTsp8/jbCb6m/gfZN17kbtG+m7j1X/SPV3lb9b6v/9GJ+HFJ8
n3nqP0H91dT/jvqnCQ8U3lL4NeEZwoOFk/Abwk2T1+OuRTwar/4+whXqf0W4
v+75mvA69V8qXEfP84DaP3FNnbtKW0vd+9BKj/c9On+1+g7T+T/q+H35/oyL
+tcxf4Rv1Pkf6ZifdexRuv7Dap+pfSuIh8JvCl8jfIXwvZljTStd4yfh5zLH
0mOEt9C1nhW+Qfho4UrhpzKPVVfhCuGXM6+9PsKZcFPOUXu59l2nvlcyx8K+
2pfU92Lmb91DeEvhi4mBwvsIf6L7P5957RwrHNT/QuZY2104CpeqPA+Zj0uS
n+GU4G/Msx2j93tU7RXad66u1134KeGVwucL76zjb1L7Y+37hfWZ/KxHsj7V
vlRbJ7Wf1j0+1vGddf6t6p+nc5YKn5K8nlnXHwk31vVujV4v56rviNxrizV2
hvrP174Wlf4+56n9ufaNIHbpmCt1/7szt1vqGj+or5vOf0T4LB1ztvDRwpuF
lwufI/w1MV7ty7XvRp37lfAY4cuEbxD+Rngc31b4ZuFntN2j9lG6/unq65R7
7bKGlwh3yd2/WPgs4QHCb5B7uIfwF9pGBs+5dZnn3BTha0qei8NzzzXm3NXk
rsz55Vfh/wifKTxduJ7u/6Hw8Tr+deGreGbh49TfXvgL4aeEm2g8p6m9njHU
sSMz579ftO9Fxi5zvvpZ+AXhEzPnt9+K9T9S53wqfKvwtcL7Ja+33Yr8v52u
fwW5gZyjc4fp+A/V3khOVv9Q4Q8YS+F1wl11/sXCJwrvo3P7CbfVt2yn7eLk
bzaZdy/5Ww7R+e+rfb32rSWfCb/HWiAnwmeE3xXeILxG+Bdts4LX2P2Z78G9
LmLO6dgVuse+utctGr+fy96uUPu6kvs4h2/fNvpacCDmRrtobtRV17hX+HRd
c3nZnORa5ns0V2HNTw3eRywgZzF32kfnMmIyubxjdKxmPFrpeVpru5Cx1fVf
Uv+lcBa+v/BnwrfxDYW31/usUfsVOEPmnMNYHR6di+BQa4Q7RHMrcjhz64jo
3A5HYy50ieZufXX9/wpfxhgxX5L5Yr2Cfx0nvG2lx4zx+THz95wa/Xw/Zf7e
06LPJyeSG+dFx8OtdM4fxEvGWLgs/Jvwsuj3+SHz950SnZ+q1P+78BnCG4Qr
hL8VPjn6+ybhX4SXCF9TdkxmvUyPzv+/ZZ6vs4UvET5SeH/hN/Q+95WdM8md
Z6n/evhV5vk0OZr//J55vOdE548/hD8XPil6ffXinXStDtrXn/yv7Qu150av
7+68o/qbESPgXtr2U/t17bu37BxELjoten1XCn8nvDB6PnPNHsJfBt8L/t1T
+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
Bm3TIFnboInQRv8Ha9GJ5g==
            "]], Polygon3DBox[CompressedData["
1:eJwt12XYFdUWAOBDfH6Hg0pKKQg2iCBIGpTSktId0t3dirSEAYiSCjYiFiio
2K3gBePaXikJ42Lju575fqzn2eudtWfmTKzZp1yfEW2H506lUgdElqiUL5W6
wKBj3lRqXq5Uaml2KtWUdWG3sFvFokwq1ZoNYivkd4gVrAI7j7WRzzJ3vrlX
sotYZ7aALWcviNXGr/BXxQw1LdKpVFXjHaKWE7pDPp7fK39J1GEPmleZXSjv
ZH/z7WMZu0TtN/IiohZrza5QV05dB3YbW8JqqPtdfr5owwayWuy0/GLRgQ1j
Ndk/8otEezaUXc1y2d+lrBMbEcdgh+Vp0YB1ZrXTyYW8hHVkw1k1dkpeWrRi
/dkGNsO4FXtf/Ub5DeJ844ZsvG2L1V3F/i8/T7Rk/Vh19pu8jGjNBrCb/d7b
zH2CbROb3Y9y6j4zzhJV1TVTdwH7XJ4trmLN2eXsoDyvqMc6sovZ1/JComac
JyvP/idPiTqsPavAfpDnFnVZB9bZuUx0LhvYRrHGuVRUd8j4DFFfXSd1pdl+
+d95PHesEbuQfcnOEtVZC1aWfSrPI6qwpux89ok8l7iSNWEXsa/kBUQN1pJd
z8o4lxvYOLYonkl2Ql5UNGY94rlix+WFRSPWnV3H0uZWYr3YBDbJb3uEPSry
eybPVVNXFJBXV9df3TR117JsdgXrycazS9m38nNEbdaGXcPOUFeR9WDjWD1W
kNVgA9h0Vthxj8jzizNFO9e0vrpi6q6VD1d3q7oGrDi7jo1gc1kddjarxvqx
qayA/f1Xnk9k4n2wv6rsMnXd5beru1tdQ3Mrsnbx7rM1rKK6sqw9m8tuZyPZ
XexF9pJ40v4qmXvMuKBoqK6buirspLyYaMJ6sqrsJ3kJ0ZT1Yl3iutrfTnEf
2xXPvWNcLu+lbjlbHe8HK896sKVsJWtsbiU2xTmsj3ctjqvuYtZF3UJ1K1gj
dVewyeruld8X76q6CqynumXqVrEy6g7IT3tOK7PGrKi6n9llojPrk53cz7iv
G+J9FhPVjDd3hPGqeM9tO66mH5/PXmanWFrNALaQvcJ+Zxm2Kp30vT1RK6ar
mcymG29R94W6f3Le/XlZyXWP6186v98e/YU9KP9S3Wl161kj++vK3rVtnXy4
6GE8j+1S94W6oawTm82eY5+wTo4xjj3GvmO/smHqOrM5bAf7lI1ivdnCeA7Y
12wE68nms93sSzaEdWSz2LPsABsX58NWsvfYsXjf2AS2nh1gv7EJbCRbzT5g
J3Kev7vZB3Gdo8e7BoPYYvaa/E91Z5o3hC1jb0Ufcy0KssFsKXsz7rG6Amwo
W87ejh6jrhAbzVaxj6J/suJxjcV97J2s5NqulY9St1L+YfQ7VoyNZfewffHO
sZKsP1vA9rDfHDcfG8gWxXeR/cHyx28VvdiCuL/sK793Ynwf4x6y/ewUG2Pu
arY3vkmOUSJ+m+jAZrJn1O2P66xuDfs43n11pdTcI+obv8bXiglqxsb5GC9X
96a5h+IY8ayyZewNdjB6RHy/2Vy2k73DHhePRR+0rbptx7xjT8i3Rl9lNdhx
1s54lPFD5n5l7k+238j6sHvYh+zb7GS9MTgr+Z7Ed6WI+9uGDWGb5J+oO6yu
PRvNHmZfs5PsJjaMPcA+Y0dZx/h90cfZt+wX1oGNYY+wb9jP7EmxLXqobTVt
O+Gc2xoPNb5f3afqjtjekt3M7mV72XesFesX/YvtY9+zFqwvW8M+Yt/k9OIv
cvp69PfdjvEofyS+D7ZVU/9jJulj0c9qscrscCZZm3XNylmDxXzXZZ2atbHe
yZf0t4PqGhg3NJ4WvdlxX43vPivN2rLZbAEbHc8lW8peZz/EN1Rdo+g/bHus
21gz1o3dyd5in7HmrDu7i73NPo9vGavNRrBN7Lnou+wmtoi9zPbl9N7owTXz
Jb37kHN+Sr5d1GW12EnW2Lid8WJz95i71/YHxP2xRrOtim1H1W2Sb4x+zK5k
R1gT4/bGS8x9xdyPo4exFfH+xhrG8184+jW7k70XayJWlLVJJ8/srEzyPMRz
UVzdn7H+EJXjHtt2DvvFuLzo4hi91RVjv8oriK6sb6x9WJb9Xc2GsDGx5mJF
WVM2mc1m57G8rDYbzEazUiw3q8kGslHsXJYn1s5sEBvJSrC/Ys0kerNBrGes
M9UNZxvZHtabNWGj2Rb2RqypzT2HNWNT2BzWS11jNoptZq+zqWwu28p+YNny
kub+La8q+rDB6pqkk2d2aia5L3F/FrGyru/W6GPRo+SXmlvSuKW5LeI9VF+e
nctay2fa3zxzp6ldwp5lx9jZ8kLqvpeXEs1ZW3UF2XfykqIZuyk7OUaJ+E/B
6sb1yiTrq6PG5UTZeKYzyf39IycP78zKsHxZyf2O+96LFWE/Gl8g2jpGl1hn
s0LxTWAT2Ex2GSuVlaz5Y+1/W6x3WWHWmE1kM2Idy4qwJmwSm5WdHDeTlZxv
nPfnjluWncnqy0epm6SuHDuLNWCj2eRYK7P8rB4bySay4ewO9i7L4x4Ucf26
xTeADWHr1L2orge7ng2LvsteZu3Y1awvu5vtYN3sbyp7ih1mf0bfTSfv7Rzn
+rT8mejP7Bp2s7qV6nbGWi/WNexJdpD9Hr0znfS9GZnkOxLfk9bp5FsyM5N8
R+J70jSdvN/TMkkPiF7Q0/5msR32d8L+UrH+Zf+R/2UNd01c03TyP2VSVvJ/
Kf43ldQ7+7Bb2Avyn9XljfUMm8OeZz+xPKwvu5XtYr+wrPhGs9lsJzvJcsf1
ZHXY+LzJsx7PfNt08i2ZnUn6W/S57qwBG6puvbkvsa7mTmHb2SH2R5i6emww
W8t2x3qStYz1JnuMvRf7M3cae5odYX+x/upasUnscfY+Gxi9jU2Ja8A+ZANY
azaZbWUfsL6sGRvLHmJvxTeUXcf6503+z8f/+sWxpvY7t8f9jH04jx5ipvFz
6o6ryxX7Sie9erprsNm8LWIO28RuVDdd3S2xdhHXsn5sFXteXR/WlI1hD7I3
2aC4rtFf2Db2UayLWXM2jj3M3mb/AlNzBAk=
            "]], 
           Polygon3DBox[{{2126, 1331, 1464, 2427, 1964, 1965}, {2205, 1481, 
            1101, 1102, 1482, 2206}, {2372, 1356, 1157, 1156, 1450, 2184}, {
            1960, 1959, 2428, 1471, 1472, 2429}}]},
          Annotation[#, "Charting`Private`Tag$41727#2"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[
           0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
          "Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0ksrpmEYB/DbOPO+4zAOybkoTbGdMnyCkZCklyTZsCA7NlIWbDS7mY0t
i1nzCfgCjuN8iJKSjVDelN9d6rme3/Ws/td130/j2HTfVEYIYVHVa2Jf5nXH
newQinnJej6yje/sZCInhC5Wc4jfOcl2/lRz+n4uc4x/OcN1LnCTv7kds3ND
eGKT7D3W8o2FmSHsxyweMMlDfuV/FvGIxTxmCU9YylN+41nciecs5wUreMlK
XvGGz2yWe806pvnPfLtc5RZXuMF5rnGafzjKJfaxV83qf3CCLUyxir9YwA6m
nWMrH1gXZ3UG92yQXcQavnL8i33jGTIZs5jgCAs5zAKmmM9B5nGAufEOmBNn
o6jQwyx209qhi55w6+Pl8z/4AF80OKw=
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jssnWEcBvD33Bx1DdoY3MJCXctxNxsYWdjEwkQsuolIjkEiXWqTaMJM
0iYVIyJB665ziR2xu/xODE9+/2d6/+/7fdXj00NTkRBCWhqiITQqtSyW/mQI
ffowBznOUc5wkvP8ym9c5Bp/yIp5hxs84C9ec493vOATbxjJDuGBSyxzZpu8
6J9ZLYfxEF71Iwb9mBH+YZR/GeMJ4zxlgmc8lyzzBZO8ZDav+IHXzOE/5nIz
EUIFU5In9VIj5XZ7tkMB7/lq9/985DlvuctL/uQ+17nN3/LdvMo0lznLOU5w
miMc4wAXnPEx8x2kV69jlZTasUf/xG6WsItF7GQhO5jPduZk7igpc5JtTLCV
MX7JvD1bMveJhdDMZzZxyztURt//hzegFDwI
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1489, 1810, 792, 1488, 2432, 1707, 1490, 2433, 1708, 1491, 
        2434, 1709, 1492, 2435, 1710, 1493, 2436, 1711, 1494, 2437, 1712, 
        1495, 2215, 2529, 1496, 2438, 1713, 1497, 2439, 1714, 1498, 2440, 
        1715, 1499, 2441, 1716, 1500, 2442, 1717, 1501, 983, 1718, 1811}], 
       Line3DBox[{1503, 2216, 2530, 1502, 2443, 1719, 1504, 2444, 1720, 1505, 
        2445, 1721, 1506, 2446, 1722, 1507, 2447, 1723, 1508, 2448, 1724, 
        1509, 2217, 2531, 1510, 2218, 2532, 1511, 2449, 1725, 1512, 2450, 
        1726, 1513, 2451, 1727, 1514, 2452, 1728, 1515, 2453, 1729, 1516}], 
       Line3DBox[{1518, 2219, 2533, 1517, 2220, 2534, 1519, 2454, 1730, 1520, 
        2455, 1731, 1521, 2456, 1732, 1522, 2457, 1733, 1523, 2458, 1734, 
        1524, 2221, 2535, 1525, 2222, 2536, 1526, 2223, 2537, 1527, 2459, 
        1735, 1528, 2460, 1736, 1529, 2461, 1737, 1530, 2462, 1738, 1531}], 
       Line3DBox[{1533, 2224, 2538, 1532, 2225, 2539, 1534, 2226, 2540, 1535, 
        2463, 1739, 1536, 2464, 1740, 1537, 2465, 1741, 1538, 2466, 1742, 
        1539, 2227, 2541, 1540, 2228, 2542, 1541, 2229, 2543, 1542, 2230, 
        2544, 1543, 2467, 1743, 1544, 2468, 1744, 1545, 2469, 1745, 1546}], 
       Line3DBox[{1548, 2231, 2545, 1547, 2232, 2546, 1549, 2233, 2547, 1550, 
        2234, 2548, 1551, 2470, 1746, 1552, 2471, 1747, 1553, 2472, 1748, 
        1554, 2235, 2549, 1555, 2236, 2550, 1556, 2237, 2551, 1557, 2238, 
        2552, 1558, 2239, 2553, 1559, 2473, 1749, 1560, 2474, 1750, 1561}], 
       Line3DBox[{1563, 2240, 2554, 1562, 2241, 2555, 1564, 2242, 2556, 1565, 
        2243, 2557, 1566, 2244, 2558, 1567, 2475, 1751, 1568, 2628, 1812, 
        1813, 1569, 1828, 1829, 2633, 1570, 1855, 1856, 2639, 1571, 2245, 
        2559, 1572, 2246, 2560, 1573, 2247, 2561, 1574, 2248, 2562, 1575, 
        2476, 1752, 1576}], 
       Line3DBox[{1578, 2249, 2563, 1577, 2250, 2564, 1579, 2251, 2565, 1580, 
        2252, 2566, 1581, 2253, 2567, 1582, 2310, 2568, 1815, 1583, 2627, 
        1808, 1814, 1836, 1835, 1584, 1809, 1830, 1838, 1837, 2636, 1585, 
        1858, 1859, 1857, 2569, 2312, 1586, 2254, 2570, 1587, 2255, 2571, 
        1588, 2256, 2572, 1589, 2257, 2573, 1590, 2258, 2574, 1591}], 
       Line3DBox[{1595, 2477, 1753, 1593, 2478, 1754, 1597, 2479, 1755, 1599, 
        2480, 1756, 1601, 2481, 1757, 1603, 2315, 2482, 1758, 1833, 2317, 
        2638, 1853, 1843, 1852, 1759, 1840, 1846, 1847, 1827, 2632, 1760, 
        1826, 1819, 2483, 1761, 1608, 2484, 1762, 1610, 2485, 1763, 1612, 
        2486, 1764, 1614, 2487, 1765, 1616, 2488, 1766, 1618}], 
       Line3DBox[{1617, 2586, 2268, 1615, 2585, 2267, 1613, 2584, 2266, 1611, 
        2583, 2265, 1609, 2582, 2264, 1607, 2311, 2581, 1818, 1606, 2313, 
        2634, 1851, 1831, 1817, 1845, 1849, 1844, 1605, 1841, 1850, 1842, 
        1816, 1839, 1848, 2637, 2316, 1604, 1832, 2580, 2314, 1602, 2579, 
        2263, 1600, 2578, 2262, 1598, 2577, 2261, 1596, 2576, 2260, 1592, 
        2575, 2259, 1594}], 
       Line3DBox[{1620, 2269, 2587, 1619, 2489, 1767, 1621, 2490, 1768, 1622, 
        2491, 1769, 1623, 2492, 1770, 1624, 2493, 1771, 1625, 2635, 1834, 
        1772, 1854, 1820, 2270, 2629, 1626, 2494, 1773, 1627, 2495, 1774, 
        1628, 2496, 1775, 1629, 2497, 1776, 1630, 2498, 1777, 1631, 2499, 
        1778, 1632}], 
       Line3DBox[{1634, 2271, 2588, 1633, 2272, 2589, 1635, 2500, 1779, 1636, 
        2501, 1780, 1637, 2502, 1781, 1638, 2503, 1782, 1639, 2504, 1783, 
        1640, 2273, 2590, 1641, 2274, 2591, 1642, 2505, 1784, 1643, 2506, 
        1785, 1644, 2507, 1786, 1645, 2508, 1787, 1646, 2509, 1788, 1647}], 
       Line3DBox[{1649, 2275, 2592, 1648, 2276, 2593, 1650, 2277, 2594, 1651, 
        2510, 1789, 1652, 2511, 1790, 1653, 2512, 1791, 1654, 2513, 1792, 
        1655, 2278, 2595, 1656, 2279, 2596, 1657, 2280, 2597, 1658, 2514, 
        1793, 1659, 2515, 1794, 1660, 2516, 1795, 1661, 2517, 1796, 1662}], 
       Line3DBox[{1664, 2281, 2598, 1663, 2282, 2599, 1665, 2283, 2600, 1666, 
        2284, 2601, 1667, 2518, 1797, 1668, 2519, 1798, 1669, 2520, 1799, 
        1670, 2285, 2602, 1671, 2286, 2603, 1672, 2287, 2604, 1673, 2288, 
        2605, 1674, 2521, 1800, 1675, 2522, 1801, 1676, 2523, 1802, 1677}], 
       Line3DBox[{1679, 2289, 2606, 1678, 2290, 2607, 1680, 2291, 2608, 1681, 
        2292, 2609, 1682, 2293, 2610, 1683, 2524, 1803, 1684, 2525, 1804, 
        1685, 2294, 2611, 1686, 2295, 2612, 1687, 2296, 2613, 1688, 2297, 
        2614, 1689, 2298, 2615, 1690, 2526, 1805, 1691, 2527, 1806, 1692}], 
       Line3DBox[{1706, 1825, 1824, 2631, 1705, 2626, 2309, 1704, 2625, 2308, 
        1703, 2624, 2307, 1702, 2623, 2306, 1701, 2622, 2305, 1700, 2621, 
        2304, 1699, 1807, 2528, 1698, 2620, 2303, 1697, 2619, 2302, 1696, 
        2618, 2301, 1695, 2617, 2300, 1694, 2616, 2299, 1693, 2630, 1822, 
        1821, 1823}], 
       Line3DBox[{1861, 2177, 2318, 2640, 1860, 2745, 2077, 1862, 2746, 2078, 
        1863, 2747, 2079, 1864, 2748, 2080, 1865, 2749, 2081, 1866, 2750, 
        2082, 1867, 2751, 2319, 2641, 1868, 2752, 2083, 1869, 2753, 2084, 
        1870, 2754, 2085, 1871, 2755, 2086, 1872, 2756, 2087, 1873, 2424, 
        2850, 2088, 2178}], 
       Line3DBox[{1875, 2320, 2642, 1874, 2321, 2643, 1876, 2757, 2089, 1877, 
        2758, 2090, 1878, 2759, 2091, 1879, 2760, 2092, 1880, 2761, 2093, 
        1881, 2762, 2322, 2644, 1882, 2323, 2645, 1883, 2763, 2094, 1884, 
        2764, 2095, 1885, 2765, 2096, 1886, 2766, 2097, 1887, 2767, 2098, 
        1888}], Line3DBox[{1890, 2324, 2646, 1889, 2325, 2647, 1891, 2326, 
        2648, 1892, 2768, 2099, 1893, 2769, 2100, 1894, 2770, 2101, 1895, 
        2771, 2102, 1896, 2772, 2327, 2649, 1897, 2328, 2650, 1898, 2329, 
        2651, 1899, 2773, 2103, 1900, 2774, 2104, 1901, 2775, 2105, 1902, 
        2776, 2106, 1903}], 
       Line3DBox[{1905, 2330, 2652, 1904, 2331, 2653, 1906, 2332, 2654, 1907, 
        2333, 2655, 1908, 2777, 2107, 1909, 2778, 2108, 1910, 2779, 2109, 
        1911, 2780, 2334, 2656, 1912, 2335, 2657, 1913, 2336, 2658, 1914, 
        2337, 2659, 1915, 2781, 2110, 1916, 2782, 2111, 1917, 2783, 2112, 
        1918}], Line3DBox[{1920, 2338, 2660, 1919, 2339, 2661, 1921, 2340, 
        2662, 1922, 2341, 2663, 1923, 2342, 2664, 1924, 2784, 2113, 1925, 
        2785, 2114, 1926, 2786, 2343, 2665, 1927, 2344, 2666, 1928, 2345, 
        2667, 1929, 2346, 2668, 1930, 2347, 2669, 1931, 2787, 2115, 1932, 
        2788, 2116, 1933}], 
       Line3DBox[{1935, 2348, 2670, 1934, 2349, 2671, 1936, 2350, 2672, 1937, 
        2351, 2673, 1938, 2352, 2674, 1939, 2353, 2675, 1940, 2789, 2179, 
        2180, 1941, 2790, 2205, 2206, 2676, 1942, 2210, 2211, 2677, 1943, 
        2354, 2678, 1944, 2355, 2679, 1945, 2356, 2680, 1946, 2357, 2681, 
        1947, 2791, 2117, 1948}], 
       Line3DBox[{1952, 2792, 2118, 1950, 2793, 2119, 1954, 2794, 2120, 1956, 
        2795, 2121, 1958, 2796, 2122, 1960, 2429, 2860, 2123, 2201, 2430, 
        2851, 2202, 2182, 2190, 2192, 2124, 2189, 2426, 2854, 2194, 2193, 
        2183, 2197, 2856, 2125, 2196, 2195, 2204, 2855, 2126, 1965, 2797, 
        2127, 1967, 2798, 2128, 1969, 2799, 2129, 1971, 2800, 2130, 1973, 
        2801, 2131, 1975}], 
       Line3DBox[{1974, 2691, 2367, 1972, 2690, 2366, 1970, 2689, 2365, 1968, 
        2688, 2364, 1966, 2687, 2363, 1964, 2427, 2863, 2212, 2214, 2213, 
        1963, 2862, 2208, 2209, 2207, 2175, 2853, 1962, 2174, 2181, 2848, 
        2422, 1961, 2200, 2859, 2428, 1959, 2686, 2362, 1957, 2685, 2361, 
        1955, 2684, 2360, 1953, 2683, 2359, 1949, 2682, 2358, 1951}], 
       Line3DBox[{1977, 2368, 2692, 1976, 2802, 2132, 1978, 2803, 2133, 1979, 
        2804, 2134, 1980, 2805, 2135, 1981, 2431, 2861, 2136, 2203, 2423, 
        2849, 2137, 2191, 2806, 2176, 2188, 2369, 2858, 2199, 2198, 2857, 
        2138, 1982, 2807, 2139, 1983, 2808, 2140, 1984, 2809, 2141, 1985, 
        2810, 2142, 1986, 2811, 2143, 1987}], 
       Line3DBox[{1989, 2370, 2693, 1988, 2371, 2694, 1990, 2812, 2144, 1991, 
        2813, 2145, 1992, 2814, 2146, 1993, 2815, 2147, 1994, 2816, 2148, 
        1995, 2817, 2184, 2372, 2695, 1996, 2373, 2696, 1997, 2818, 2149, 
        1998, 2819, 2150, 1999, 2820, 2151, 2000, 2821, 2152, 2001, 2822, 
        2153, 2002}], 
       Line3DBox[{2004, 2374, 2697, 2003, 2375, 2698, 2005, 2376, 2699, 2006, 
        2823, 2154, 2007, 2824, 2155, 2008, 2825, 2156, 2009, 2826, 2157, 
        2010, 2827, 2377, 2700, 2011, 2378, 2701, 2012, 2379, 2702, 2013, 
        2828, 2158, 2014, 2829, 2159, 2015, 2830, 2160, 2016, 2831, 2161, 
        2017}], Line3DBox[{2019, 2380, 2703, 2018, 2381, 2704, 2020, 2382, 
        2705, 2021, 2383, 2706, 2022, 2832, 2162, 2023, 2833, 2163, 2024, 
        2834, 2164, 2025, 2835, 2384, 2707, 2026, 2385, 2708, 2027, 2386, 
        2709, 2028, 2387, 2710, 2029, 2836, 2165, 2030, 2837, 2166, 2031, 
        2838, 2167, 2032}], 
       Line3DBox[{2034, 2388, 2711, 2033, 2389, 2712, 2035, 2390, 2713, 2036, 
        2391, 2714, 2037, 2392, 2715, 2038, 2839, 2168, 2039, 2840, 2169, 
        2040, 2841, 2393, 2716, 2041, 2394, 2717, 2042, 2395, 2718, 2043, 
        2396, 2719, 2044, 2397, 2720, 2045, 2842, 2170, 2046, 2843, 2171, 
        2047}], Line3DBox[{2049, 2398, 2721, 2048, 2399, 2722, 2050, 2400, 
        2723, 2051, 2401, 2724, 2052, 2402, 2725, 2053, 2403, 2726, 2054, 
        2844, 2172, 2055, 2845, 2404, 2727, 2056, 2405, 2728, 2057, 2406, 
        2729, 2058, 2407, 2730, 2059, 2408, 2731, 2060, 2409, 2732, 2061, 
        2846, 2173, 2062}], 
       Line3DBox[{2076, 2187, 2852, 2425, 2075, 2744, 2421, 2074, 2743, 2420, 
        2073, 2742, 2419, 2072, 2741, 2418, 2071, 2740, 2417, 2070, 2739, 
        2416, 2847, 2069, 2738, 2415, 2068, 2737, 2414, 2067, 2736, 2413, 
        2066, 2735, 2412, 2065, 2734, 2411, 2064, 2733, 2410, 2063, 1451, 
        2185, 2186}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{588, 793, 2432, 589, 806, 2443, 615, 2534, 820, 629, 2539, 
        834, 643, 2546, 848, 657, 2555, 862, 671, 2564, 875, 684, 2576, 887, 
        2478, 697, 899, 2489, 710, 2589, 912, 724, 2593, 926, 738, 2599, 940, 
        752, 2607, 954, 766, 2616, 968, 780}], 
       Line3DBox[{590, 794, 2433, 591, 807, 2444, 616, 821, 2454, 630, 2540, 
        835, 644, 2547, 849, 658, 2556, 863, 672, 2565, 876, 685, 2577, 888, 
        2479, 698, 900, 2490, 711, 913, 2500, 725, 2594, 927, 739, 2600, 941, 
        753, 2608, 955, 767, 2617, 969, 781}], 
       Line3DBox[{592, 795, 2434, 593, 808, 2445, 617, 822, 2455, 631, 836, 
        2463, 645, 2548, 850, 659, 2557, 864, 673, 2566, 877, 686, 2578, 889, 
        2480, 699, 901, 2491, 712, 914, 2501, 726, 928, 2510, 740, 2601, 942, 
        754, 2609, 956, 768, 2618, 970, 782}], 
       Line3DBox[{594, 796, 2435, 595, 809, 2446, 618, 823, 2456, 632, 837, 
        2464, 646, 851, 2470, 660, 2558, 865, 674, 2567, 878, 687, 2579, 890, 
        2481, 700, 902, 2492, 713, 915, 2502, 727, 929, 2511, 741, 943, 2518, 
        755, 2610, 957, 769, 2619, 971, 783}], 
       Line3DBox[{596, 797, 2436, 597, 810, 2447, 619, 824, 2457, 633, 838, 
        2465, 647, 852, 2471, 661, 866, 2475, 675, 2568, 987, 988, 688, 2580, 
        1002, 1003, 2482, 701, 903, 2493, 714, 916, 2503, 728, 930, 2512, 742,
         944, 2519, 756, 958, 2524, 770, 2620, 972, 784}], 
       Line3DBox[{598, 798, 2437, 599, 811, 2448, 620, 825, 2458, 634, 839, 
        2466, 648, 853, 2472, 662, 984, 2628, 985, 986, 980, 2627, 989, 1015, 
        1014, 1016, 2637, 1011, 1012, 1004, 1018, 1017, 2638, 1013, 1005, 
        2635, 1006, 715, 917, 2504, 729, 931, 2513, 743, 945, 2520, 757, 959, 
        2525, 771, 973, 2528, 785}], 
       Line3DBox[{8, 1495, 23, 1509, 38, 1524, 53, 1539, 68, 1554, 83, 1569, 
        98, 1584, 263, 113, 1605, 271, 1840, 128, 295, 1854, 143, 1640, 158, 
        1655, 173, 1670, 188, 1685, 203, 1699, 218}], 
       Line3DBox[{600, 2529, 799, 601, 2531, 812, 621, 2535, 826, 635, 2541, 
        840, 649, 2549, 854, 663, 998, 2633, 867, 676, 1009, 2636, 1010, 1007,
         1008, 879, 689, 2634, 1000, 1001, 997, 891, 2632, 702, 991, 2629, 
        904, 716, 2590, 918, 730, 2595, 932, 744, 2602, 946, 758, 2611, 960, 
        772, 2621, 974, 786}], 
       Line3DBox[{602, 800, 2438, 603, 2532, 813, 622, 2536, 827, 636, 2542, 
        841, 650, 2550, 855, 664, 1019, 2639, 868, 677, 2569, 999, 880, 690, 
        2581, 990, 892, 2483, 703, 905, 2494, 717, 2591, 919, 731, 2596, 933, 
        745, 2603, 947, 759, 2612, 961, 773, 2622, 975, 787}], 
       Line3DBox[{604, 801, 2439, 605, 814, 2449, 623, 2537, 828, 637, 2543, 
        842, 651, 2551, 856, 665, 2559, 869, 678, 2570, 881, 691, 2582, 893, 
        2484, 704, 906, 2495, 718, 920, 2505, 732, 2597, 934, 746, 2604, 948, 
        760, 2613, 962, 774, 2623, 976, 788}], 
       Line3DBox[{606, 802, 2440, 607, 815, 2450, 624, 829, 2459, 638, 2544, 
        843, 652, 2552, 857, 666, 2560, 870, 679, 2571, 882, 692, 2583, 894, 
        2485, 705, 907, 2496, 719, 921, 2506, 733, 935, 2514, 747, 2605, 949, 
        761, 2614, 963, 775, 2624, 977, 789}], 
       Line3DBox[{608, 803, 2441, 609, 816, 2451, 625, 830, 2460, 639, 844, 
        2467, 653, 2553, 858, 667, 2561, 871, 680, 2572, 883, 693, 2584, 895, 
        2486, 706, 908, 2497, 720, 922, 2507, 734, 936, 2515, 748, 950, 2521, 
        762, 2615, 964, 776, 2625, 978, 790}], 
       Line3DBox[{610, 804, 2442, 611, 817, 2452, 626, 831, 2461, 640, 845, 
        2468, 654, 859, 2473, 668, 2562, 872, 681, 2573, 884, 694, 2585, 896, 
        2487, 707, 909, 2498, 721, 923, 2508, 735, 937, 2516, 749, 951, 2522, 
        763, 965, 2526, 777, 2626, 979, 791}], 
       Line3DBox[{612, 982, 983, 613, 818, 2453, 627, 832, 2462, 641, 846, 
        2469, 655, 860, 2474, 669, 873, 2476, 682, 2574, 885, 695, 2586, 897, 
        2488, 708, 910, 2499, 722, 924, 2509, 736, 938, 2517, 750, 952, 2523, 
        764, 966, 2527, 778, 993, 2631, 994, 995}], 
       Line3DBox[{779, 967, 2630, 992, 765, 953, 2606, 751, 939, 2598, 737, 
        925, 2592, 723, 911, 2588, 709, 898, 2587, 696, 2477, 886, 2575, 683, 
        874, 2563, 670, 861, 2554, 656, 847, 2545, 642, 833, 2538, 628, 819, 
        2533, 614, 805, 2530, 587, 792, 981, 996}], 
       Line3DBox[{1021, 1239, 2745, 1022, 2643, 1253, 1050, 2647, 1268, 1065, 
        2653, 1283, 1080, 2661, 1298, 1095, 2671, 1313, 1110, 2683, 1326, 
        2793, 1123, 1338, 2802, 1136, 2694, 1350, 1150, 2698, 1364, 1165, 
        2704, 1379, 1180, 2712, 1394, 1195, 2722, 1409, 1210, 2733, 1424, 
        1225}], Line3DBox[{1023, 1240, 2746, 1024, 1254, 2757, 1051, 2648, 
        1269, 1066, 2654, 1284, 1081, 2662, 1299, 1096, 2672, 1314, 1111, 
        2684, 1327, 2794, 1124, 1339, 2803, 1137, 1351, 2812, 1151, 2699, 
        1365, 1166, 2705, 1380, 1181, 2713, 1395, 1196, 2723, 1410, 1211, 
        2734, 1425, 1226}], 
       Line3DBox[{1025, 1241, 2747, 1026, 1255, 2758, 1052, 1270, 2768, 1067, 
        2655, 1285, 1082, 2663, 1300, 1097, 2673, 1315, 1112, 2685, 1328, 
        2795, 1125, 1340, 2804, 1138, 1352, 2813, 1152, 1366, 2823, 1167, 
        2706, 1381, 1182, 2714, 1396, 1197, 2724, 1411, 1212, 2735, 1426, 
        1227}], Line3DBox[{1027, 1242, 2748, 1028, 1256, 2759, 1053, 1271, 
        2769, 1068, 1286, 2777, 1083, 2664, 1301, 1098, 2674, 1316, 1113, 
        2686, 1329, 2796, 1126, 1341, 2805, 1139, 1353, 2814, 1153, 1367, 
        2824, 1168, 1382, 2832, 1183, 2715, 1397, 1198, 2725, 1412, 1213, 
        2736, 1427, 1228}], 
       Line3DBox[{1029, 1243, 2749, 1030, 1257, 2760, 1054, 1272, 2770, 1069, 
        1287, 2778, 1084, 1302, 2784, 1099, 2675, 1317, 1114, 2859, 1471, 
        1472, 2860, 1127, 1476, 1477, 2861, 1140, 1354, 2815, 1154, 1368, 
        2825, 1169, 1383, 2833, 1184, 1398, 2839, 1199, 2726, 1413, 1214, 
        2737, 1428, 1229}], 
       Line3DBox[{1031, 1244, 2750, 1032, 1258, 2761, 1055, 1273, 2771, 1070, 
        1288, 2779, 1085, 1303, 2785, 1100, 1444, 2789, 1445, 1446, 2848, 
        1437, 1473, 1475, 1474, 2851, 1447, 1479, 1480, 1478, 1439, 2849, 
        1141, 1355, 2816, 1155, 1369, 2826, 1170, 1384, 2834, 1185, 1399, 
        2840, 1200, 1414, 2844, 1215, 2738, 1429, 1230}], 
       Line3DBox[{1033, 1245, 2751, 1035, 1259, 2762, 1056, 1274, 2772, 1071, 
        1289, 2780, 1086, 1304, 2786, 1101, 1481, 2790, 1483, 1484, 1438, 
        2853, 1457, 1460, 1459, 2854, 1463, 1461, 1462, 1458, 2806, 1440, 
        1456, 1448, 2817, 1450, 1156, 1370, 2827, 1171, 1385, 2835, 1186, 
        1400, 2841, 1201, 1415, 2845, 1216, 1430, 2847, 1231}], 
       Line3DBox[{1037, 1247, 2752, 1038, 2645, 1261, 1058, 2650, 1276, 1073, 
        2657, 1291, 1088, 2666, 1306, 1103, 1487, 2677, 1319, 1116, 2863, 
        1464, 1331, 2855, 1129, 1467, 1343, 2857, 1143, 2696, 1357, 1158, 
        2701, 1372, 1173, 2708, 1387, 1188, 2717, 1402, 1203, 2728, 1417, 
        1218, 2740, 1432, 1233}], 
       Line3DBox[{1039, 1248, 2753, 1040, 1262, 2763, 1059, 2651, 1277, 1074, 
        2658, 1292, 1089, 2667, 1307, 1104, 2678, 1320, 1117, 2687, 1332, 
        2797, 1130, 1344, 2807, 1144, 1358, 2818, 1159, 2702, 1373, 1174, 
        2709, 1388, 1189, 2718, 1403, 1204, 2729, 1418, 1219, 2741, 1433, 
        1234}], Line3DBox[{1041, 1249, 2754, 1042, 1263, 2764, 1060, 1278, 
        2773, 1075, 2659, 1293, 1090, 2668, 1308, 1105, 2679, 1321, 1118, 
        2688, 1333, 2798, 1131, 1345, 2808, 1145, 1359, 2819, 1160, 1374, 
        2828, 1175, 2710, 1389, 1190, 2719, 1404, 1205, 2730, 1419, 1220, 
        2742, 1434, 1235}], 
       Line3DBox[{1043, 1250, 2755, 1044, 1264, 2765, 1061, 1279, 2774, 1076, 
        1294, 2781, 1091, 2669, 1309, 1106, 2680, 1322, 1119, 2689, 1334, 
        2799, 1132, 1346, 2809, 1146, 1360, 2820, 1161, 1375, 2829, 1176, 
        1390, 2836, 1191, 2720, 1405, 1206, 2731, 1420, 1221, 2743, 1435, 
        1236}], Line3DBox[{1045, 1251, 2756, 1046, 1265, 2766, 1062, 1280, 
        2775, 1077, 1295, 2782, 1092, 1310, 2787, 1107, 2681, 1323, 1120, 
        2690, 1335, 2800, 1133, 1347, 2810, 1147, 1361, 2821, 1162, 1376, 
        2830, 1177, 1391, 2837, 1192, 1406, 2842, 1207, 2732, 1421, 1222, 
        2744, 1436, 1237}], 
       Line3DBox[{1047, 1442, 1443, 2850, 1048, 1266, 2767, 1063, 1281, 2776, 
        1078, 1296, 2783, 1093, 1311, 2788, 1108, 1324, 2791, 1121, 2691, 
        1336, 2801, 1134, 1348, 2811, 1148, 1362, 2822, 1163, 1377, 2831, 
        1178, 1392, 2838, 1193, 1407, 2843, 1208, 1422, 2846, 1223, 2852, 
        1452, 1453, 1454}], 
       Line3DBox[{1224, 1423, 1451, 1209, 1408, 2721, 1194, 1393, 2711, 1179, 
        1378, 2703, 1164, 1363, 2697, 1149, 1349, 2693, 1135, 1337, 2692, 
        1122, 2792, 1325, 2682, 1109, 1312, 2670, 1094, 1297, 2660, 1079, 
        1282, 2652, 1064, 1267, 2646, 1049, 1252, 2642, 1020, 1238, 2640, 
        1441, 1455}], 
       Line3DBox[{1232, 1431, 2739, 1217, 1416, 2727, 1202, 1401, 2716, 1187, 
        1386, 2707, 1172, 1371, 2700, 1157, 1356, 2695, 1449, 1142, 1342, 
        2858, 1468, 1470, 1469, 1128, 2856, 1330, 1466, 1465, 1486, 2862, 
        1485, 1115, 1318, 2676, 1482, 1102, 1305, 2665, 1087, 1290, 2656, 
        1072, 1275, 2649, 1057, 1260, 2644, 1036, 1246, 2641, 
        1034}]}, {}, {}, {}, {}, {}}},
    VertexNormals->CompressedData["
1:eJzcvQk4Ve3bN7wNoQyRIWMSmWWe2QtRpFKmzKFQSEnJUKGIkIgMTRqUecw8
7CVlKHMRJXODTJtSyrS/tTb7wv6/9/F8z/P93+953tdxdK/7/t1n5zqvc53r
HH5rXYuA42ljJ0oMBiNNj8FQYcBP4PrjFPTvwlPF8/llEzE3YiJkcjbkY26Q
cMNU/00Cb4aS/HMDqHwoh5NIuHPdS4/Tsx9TPA4M92oH9qSs6o+2/Kk9kn3E
5egVHtrv2SR8c+9FCUzrpqLIDTvS9kkxFJHwttMqppWntctnwsQuR/3WKSfh
5yb3hPc9DK3K8NtaevFnRBUJlwjVb7IQa8ad2Lb0nkupD5dzZ55AIOChMSUO
yvAeF2y3fKe9Z6ItdoZAIOJ7OSq5eO9v0TjqZF6M9WXSIOmp5XJ0H497rXym
Ec9ubl6n/O/2Z+cNu4vzqXmhOk9vG+U+yQsl4Yene6sd501u48vlS3cxmt4m
4fuauU3F/ZgeMe441F/5iukRCf/5I4KiTb8342W0Psvz9t6M1fMeCjvl9aKg
nTpYT4eipoCE8+QNXDpAWVZ6iI0m09epvJSEH7X4ZWk887Ky5mxytSpfXSUJ
n7evfTcy9gFn0MlG1Sk/iLOv/kP0GyvnmG+dJjPEY9kSvi3mN5b5ePcSipe9
KTCY8QvRtPeRhlOxQZokPUw1V5/v3kGh1nf/8f7xsUVVEs7vd7ZDQuGGgkB9
hZCjWbjCf9WfTiEXhAjdtFd27jQW5MumvULCM+GsJRUDj2j3A8quwRIe0SQ8
Xh6rzn915J5Nr5HW9tCReyQ8Z2NFgBOXb6rw9d+nH+n5ppLwQ/6er6yZtucZ
Xt9sveXw9rxVewZkP7N+KJ4UqD5X2P+hmIR/1EqbOfz8WYV5rqblwLa0ChLu
tS9/6YtGMM69F1afNw/FbVmJw6r9m/ZfeqkA62i8r3e/cQyu2f1p7C+Cv52y
/Pkaeoj17k4UChBLwp74uyxPYyxZrTTar37vnqkgobdHHfj5rqRU0t5dyi3h
qjacbhIgbn9V3LH7HBMtY3BlMhEKj5L5r/q5qXajSaaNTATz9/K9WrIyESR8
oaAkJ4XVPZHenJp2od8tkYSfOIDhwsbhnsxlzNHTXcY9IeHTv7V3aU0IZXt0
tE4NEYRAHkiaozxSnP2o8MET5eTK0UeFq/bITBrWypY/S91ZX2omB/KALTul
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
/3J/6erGKRwYCwE4MohJIPKq5PLUGDoKRL8KC4vnOv1UmGhexB4VcnuoMHHK
T9hClPt6m9fZryzP6snP669Evt7sjGu07E/lkevCvM4/GIyMqiqUJ/+v/uR8
SwMVFbk413Xr/akB8hkZB/nC81RLcvdq/71Zsw+c19kZm9dcFlSqP8gdqC0a
v8Zvqe3SMRFlnpoZf09dfwrWZWy2s8At4Uj5tTFZbpZYH1DfFwinb4mwfCln
z9mb6XKeGcyPfwlQkXK0TAUif9Fi8GTFqp3Lfn75S7/v+1AowOkwgb2IvLr+
oNo6+Q2YKTdEvxq5/pyMOyKIPWr0XbvX2YP4P39XTISqizPN4lr7FeUlYpvK
glSam7Iurl1vTkZxbWieqrKCvMk6/yAmSlNDRYrk/kSux+duKruSO0kU+efP
OK2RT7votnOo9G5SmZMtdhLoT0x6XZ2xSaz8LvGoCuxcIvCbTPrIV7Q0SUqL
H9GvWMX7Z6gzMJWIPS10dTxgrpkjnB7d9PJG5Z2kpCPfkgoA/psAJeg4d1W2
NO236IAYq1btWfazi7M5188lcYDTY7RaEXkNcnlazEABol+DXL+F2YZYxB4N
cnsoMdtvTvjIq7c0acittb+tiXdX+iYxNQX52PK166XEiHae3DmkcsL56zr/
IHEr0Ullp/yv/gyr8v/2rLSlieHh/vA0IE8gfNN+lS9RvoUlRorbSBbob2rq
+D3B41VxL+lD8Of0i8CeRYKE2XjJpUpk0L986lMEsD81w0+nwsOgClehru/6
5ijwA5KfOemK31cJ7XDsTt33C+B/CEdp+HsEcFOTB/eeqjqEW7Vz2c9ve3sJ
YV89cD9W+mQ6zMD8th4BLLn8BkzbJ9ri95p7dHXX6adG5oJyDwNNxM519lBj
OqTHSi5pkNuPrBM3zuOlTr5eSzPN6hf5EmrmZmbr/IOo/erz7ZkKuT+RP2zl
g7fKlOW9Ag7/DV+TD6c+Pe3gqDjp/PXSdRpWoN/J+b1CUtDRyvYmhjOJyHE1
bhPoWgJOVCnLPxd/kewB7EfycMeBWQXcSWeapmofbeCH3ZGX4V+lNbibjtNY
eZcuXEbwItFvlBQvMtLPMMKv3o3JujrLwb4mS98Ja+bHX0xuX67MH4IPBCf2
o/VdjEI7CZGHYh5yyqHy/ivyhpFLMYh+7O+GhHX6czLE7RF7sPeSVNvW2kOF
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
0ms8ifzSL5VD6/glLGvl5XpNDGQeUNLMH/MVO89ZTMS37aNu7lStwaUGfShq
GXyLc9dfvu6DG5b5oiTJ9XzRP/nn/xSeh3WF57lMxvOExe9ospsRgyc9HGne
nLGAS+sFiHmY/v2x6onhehxnt+CnUNc23Ltjy/7Rm/79EuXZflBfNEV5NuGV
vPRPfNp/ljf7P4XnEfvq/gDleTg2ugqiPE+q+jLPsymLRS3ayhh63JCGc58y
gBQ/TdCg9a5dyG/s4kshOOzP6VPuN0zgIrVZPxS3M17mzQ6z/H/jzf5P4XkS
jy3zPFGJ63meHV6tZlG7cyCp0qCZKzS3IVqVyn0/8HgoKj/ygH/6cdhHrze5
yt0Nfs3cETuBfj9E8haRN5ufbSbyZi/+zbzZ/zSeZzp/mef5RMbzRHDKlKkK
NsPb7YTTUZ4He76LWgWZg8RHuTlGBq0gfcuFbd4sRyCREhmueUSekyXpe6vu
A6jAnt3OkTYEsrVuXULngocrvNn+/0282f80nkeuwN/Z5HEDpOy87Qh1zUuI
QBF/u4ESD33dOsEi0ZkI/Twq1/Q55zbEzaT3pRrxz+CN7UR+TILj/19+7L+L
50k7fFvjQ88TKFNO1EkM/xi6UOttqjaDh+R3ahhoFWRibSb83KddMrD835fj
5L+LB/vv4nPemku/HAs2gSz+CLylcjCBaEPO0aN1kzPurarhrVmNlIXxOcLW
WRAP/1181/9u3ubR73Yib9OTdnQdb1PSz5jkX58HiW2r+7hHrxgK8wwI1mnF
Q2yxuGZbDkasTA+u8JotI4iT/2l817+Ln0le4We+kPEzhsUE6jbdB3D/IRtx
JA/DfYQ3xDx8zT7rD5K3YRe96UdI3oZnTy/nbT3oVA+S56FLqkdiUL7Ldn8y
DZrnK1f4rk3/w/mufxc/Yx12kcjPfNkVR+RnaFb4mQ2SJxiQPgHaaK0yVOnu
Bjn0LvcJD+LkPZG+Ah7vfl2N9BWwQ10Gsa9Idl7mu85P/Z/Jd/1n+RmpFX5G
KmE9P/OUTehk4EshSMc2+xLSl0K/FZf70jsFdeVIHwunj2Yon5oygJNfLvex
3KUHbVG+S+V0gxPKd/099X8H3/Wf5WfwY6d3oPzMUafDN1F+RnBlDrK0C24b
H67H1iTkNF5zbcOS5iaKc8pix2bEoJxdudzInAUdrF6es1hX+K7E/8v4rsj6
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
slqOw3NvptfaSYpDB7J1keLQj8wPilMKxDh8T+a3OwzPiHkye5cAG3JfA5yU
J0umOQyRPAD09Hv5EfNkfUCWKZI3wHmz9Zbz5CbejQxIngFzMSlPLn159wTJ
S1hSXlKnwA6heXJe+/khJI9B2JU8lj16NRjNkyybsYxI3oOunVjOe6EreVJh
5XsXP1a+dzG4kicD0/AMqHzYijxfkBExTwqlWa7TzyTFRMyT7x3a19kzeVKf
mCcn3lLSrbW/qEiUmCezAnQt166X4+YoMU/eJfPPmJIgMU8+IPOn8J3sarTu
33MzqXTftwvwjWEXWKzQut9F6Bx3DTgP5HvUTIfRup9oekkOqYNAf1sXJSVa
9yN6jzLpNxqt/h6rlOW6f019NHacYgDgrIGhr9G6b6t74tp45eq6hgm5+9G6
X5pRw47Ucexq3S9VROv+KbLvXfATcX5sNJn8SMC7YrTuC5PpTwpcrvsluuvt
MW/+eQ6t+4kRl9bZr/daWgCt+4GmtbvWrneUhjUOrfufyPxzTJdyue5XJ75e
60/vtt/EPtayp4k+2nsU8GmkPvbF1ZPchPrV78wfoasl9rHUp/dqLrhjgX7x
xOU+Vo+O0PC6jh7Yw8pZUIT2sTwdLLSKf+4CnBsjQ+xjY78yc2gtTQKc1Md+
ako5mxbBCta7CTPgjfaxM2Tfu2Aj4h0a44Q76+QHCK/a0T62IWCOfa1+Uh/7
8d16e0h9rP7U0jr7SX2slOdN1bXrJfWxFw5t4V/rH1Ifm6Zdts6fpLmM+7FM
qrrrXvB8MM86fwSdyxJ2G+RJP4gG8lcfphDnsveC8bytY3cA73c6kkkBncvi
CkJ/l8eeAOflUfhCnMs47QX+nIP/AHwL5osbOpfxim24dMTdENj/lVByGZ3L
PjadvWBk6Ln6e8cworXoXJZD9r0LPiIuqa5V6r1OfpTgFY3OZdG/mNbpjzSW
Jc5lV9p2rbPnxeBoHjqXuZLZH1a0PJc57li/XtcQNk10Luudz81e6x+fgVzi
XNar9yVjrT9dV3gbIc0lz6iLeuB5NImfaUzaf/1xQBTg20k8TPt1mwTFwkSg
h6PhI5FviV74cfTGDWdwXteT9vkor2Lg5Xw+u+g3wHkxoUT+JIfuKkZU3GCV
p13hSejw+v22VacBvgkjKoLyHoFk37tgJ+LCqm2T6+U/Eb5eRPkNUbMr6/SP
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
tGvj5xUrpTIaV9QYrd61vM0uV1mzI0hc0WCqZdfyPJv3K1Ma7hmr2ogJ/FCx
hhc6GTUjbphfgDOJQ7/vmosl2fm7eovwuWJVuMtkVBtZF6S6sq53ATcfVGZm
QTiWg71mYy+gpV2jnhaPEb9l9UzG7L4FRW5+Ht/cHwW5+pfQv0L8s5Hwq2Vx
ywnoAPPvF8e8nmNPPl72cyr/10nq2UFszP/D3JfHU/Xtf58kyRRCoTKkkpkG
HJwtQ6koGUqRoYQkochQiDJkSCpTydREpsjM2ZSplKgMkSHKkLHIFM6z9z7b
PsP99dzvfYbf8/SP1/dz11177c9Z+zO8P+vzXnsZzWYPtast/S5zSssdndQE
CELI+quw9XdXB6+F8UAphK/VicIzeW74F4wHeiN8ra1YvhAl52vMC9m3uNX1
kUVUeIud0VBEE7T/Gkz8q1yp8Jnd2yu73r4wL2N2ctgN7VtMP2y+h0VsjbYQ
nW3cXKB9juEYmy1TLkLfBRF/8aw79F0Qlr4LJfwz5Vvu+8DDDQ5JW2v1AQcl
aS0Yj3J7bDR071sUWKXhaQVmpgNhP+6m8f4cAwLFXtoxS+wFPtpb7cLtcwW+
aHeL90Ljw05ofYe+X2Av/q449P0Cm2SXI9+v6umwVOh7B9Zz71sPfe+Aywry
9y7zoOgpa3oO4X3sQj5kHwhL9mGvbtfvGe0hNSdduy7q371RYyICxgO5BdgU
qPeJzfL1wfB+47HQpNlXmbPOn4tUxYuP+Nf5ax2g4CovtzMqhrc4lDCqf5SD
7CE2PoH/Pa9AoGvplUuRv5p7/bD5x0imny+3m5cJiLokeWrYYusZHoux0vSQ
IB6x6Y6D7DOm55OiQsvT15YSt5OeBED2nLBkzxPzu91hPLC4quMuZP+BHZ5k
+78axakU6PBAJ53rRrBfHlBl7p3+IwxwiJH9S2jlIRHIHxEyj0YPnbPhBp6g
/ujV1qFYyH8RjlcpGUL+i7DkvxK9S6wgf0fIqy67Afk7bJ1vU9P1yxPM1Ux8
2J1bqfDAyx0xZ2E88PHXhUV5qv2WuaJGH8YDMxOcuanxwHR8FGMYR3dhV8e9
xIdPKLhKYJC6qPOLbcVBQUG7qwQVMf3rMmmKv3lhURIQ+5IBigewefrBr9bq
n8+VRv44Ejmz5jLlnNL0G8X3dUBZtY+zOBRvYOt89ejtEBSflJ0VHP6+dnwM
ky/hgfj76zh8Duhh77uEU52hwwN5UZwKH/5qQ0gfARs/uteFE4qvCDO9EqBD
mRwm3/BQo+86c4XaC2PZJ3NjXdhz2W0f5hU7KquxVG2WPPOGggdyHyiY+hXp
olr8+0f9Kyo88CKj7mYYD9SNj31CjQdaG28OgvHAoEuB1dR44EP75kcKRI0C
K5vqQTzXYSwv7qwvFxaZe1ko8KUsl3NbA6b/r5lB5+MbuItHQgwrLjaJYvPI
puVk63psKrEN1dkzclQJe67n2UObb3yaLMnRbLv7xpQLW6fZ+UR9KN4ufXBU
Ou1z37N/wQO9ph7taI1eRcFvUZzqJx0euIRTyd2NdPm5OIfN89bGuxHKF1Sl
yhX8PgCU/o7ILEkmKL9Q/dT8TONzHwUPbHWCeXHHVcIrYV5cCh4YtWzgl/hR
cZWpZRFNv6jwwJjYuz2LNaL4O8hfCh44TFqxE8YDN25nXUWNBw7kcpy/UXs9
L0Zxj6P4w9sYPnAn7vqphDz+gnWScorSbyQw/euoBu8cjLIvfLdWuNfygS82
D6jfwq1wy6vIF78r1TH4LoV/G2+eAeWDxR0nNPw/FDhi6xl6InACyh+Ld1u5
cPJnM/8LHthMipeRfGSDyZdwqnQ6PBDDqTLqIflRCu7nZ9UJ5b8qMaLCw8Zf
92FyBz51EShfxjN8X76aP5uCB/5AeHH34rWnYF5cCh44Q5qVgfJxZSMb73fV
VHigoY1Bc06Up5LSVwl3ajzwF2nlOxgPPKEW8JQaD7SWCdpasqCQ617qrX+g
Zi/WX+B4LDtu66M1eQMplqsuhYtj+lcN6QvmN7bOZzq68mGKjzeG54g+FmJ9
yONaYHt3JaPJK8p91hdli8R/hu4pFMuQWSsp54CtJy4eX46XaC1kH+62uPuE
6V/wwO5PO5oKa6wx+RJOdYUOD1zCqZzEt0FyY0zeugrmxV2lfP84zIu7F5Mr
4JSu4iVqldbhGqDnUvDACdLN9cdZNJTYEF5cCh44THJf8faYp+KdNPtpaSo8
8EZs2R0YD9xvs3ErNR74xNY/DopzwM+7FnqhOAe8ov0ciXM4T9gFNBPKVTnS
yfcyHEDvZViPl0XGRzAqI3GR0PdRZHy5SkkwPD4G5b0/j/LeS1zhEYV/r4fO
T/cfqtmL9ReoEppFihYUtk9dXXWIWt4Tez4k4ZL0ThnfXhrcjDgQcQKKH0C8
4z1rKH4ALeq6kPhBkNA8CcX5YChw2RSO868bRyBx/gxXvJ4kcB98WJVXANfB
Hw9NIHVwvle3PnQ8fwNOfDUkCe1VIzhJTzXDdV4Cl6zdpdWnVJ3R9Tuj65cx
eDkK5xHWd/WUoPkBHqEsZH4AHa9zhdb/CqO43yD/CZVX9ho76d+rkk6+pIfk
Ixdo9vPSObG9dj+aqfHYJZz2ww+SNvX5saQ2/25n/geqfnT3DhRLtrEGcO4k
GKL8oukoX+jXlS42zHzrCUYoj2gGKs82Og/ZXjnCb/u4z/A9ESTU353+WCcO
z3MAnScTHZ+Kju+7c3oLDmeEjQ9+rNQGz6+Lzp+Fjn82wrkfHk9eN2V814bP
SFwdINeaAMXVYORoPhJXf09YfWPDSxDgkoh17Mt4Deq48Dm1rhsDrjAUNenE
VgF3pKzrUgSqwJ7Oo9mvIHlLCTl/yZ79uQvKXwDtUHL+0rJxPASeR8ez8Bw0
D8BvKYDMY/pVFMmDBPTvHITyIGDEPv0+nAfJeZ5H5v+c9ukDND/AqsOCzE94
X8gUqRkJmpnUIOvcF5hLjv+jVXdAzwXZSx4ieVP0x13Ic1dWPIiEngu+cpdw
gNef/2AN8tyPH610oeeCtavtROH8S1i4A3mux4zkZ+i5oGbsVC38Xp39B5Dn
bpknzy/7Y4sy/F4WM+T5WxxqkPVcuBIbA+cjqyfJ69FTTo+An/uMyxPWG1DN
snAefm7toTI9+LmELzv04feNiwSQ5z7YHNEGP9fGckUT/L5V/kVZ8HOZpJ9Z
w/t8BSft+ZyzoURrOJ73vhaPfI9M6Pe4NL4fvc9FD7UbVkXvGuH9OYPKdVG5
7CnTW2onngE5TprX9ghUgB92bZQuSRsDet8UHU/QKgJGpKvao/ZWg9/2GK8y
PA7ZmVjvvCu7twMGYmt0Orh0wCuF80f/ZzwA/6lc+eQDuanNGYG+M6U9Thsz
MF6FPNJZzd9eh++q1TcWB4YcxngVeLfI7u9NY0mq5y3w2TTMkrQkDy6/aPgi
4XOahI7lrOfaNqy/j1Asm7kQTMw5cJdpUN4PxL7fVZYMFgw9eYXvRDf/qqXi
VbguWztY7VpRethsQPPWsVdYvrwx2sbIPrOZuPPx3oEcgU7i/gvkvDLQZH96
tTwb8Mg6TU7n3S9CiNQmRJ7q6WMz2qFISJZfeKp1n3IPbDfnbIpYfI9K0MW7
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
HTrFYKQ6Q0oQqrE2xL4j38JHJCsGMdWgIfW2KutNmFx7wPdnt9cdxWlSV0pQ
GwUnMUH4MawVLRF+jFOYvOzrvYdEYEBuinSoDvTtx/yvnHwNexlQKDeTSVIn
+hZg8sM814+YXT0sPksCnl2e1sd4M0oPfZIzvSoiHmoeE+41LYzJt5iwzYZE
vN8wQSINTkTXY3wahQSv/uCIhA3Z8UUDP6MfYHIToaRREZIV1wwJTLZ1tuJa
kmer55QLk+S5jEYEvG2c5TG571G7xqRJ6bRMT4stx29KYfvkXpWBmu44dyLr
cc+tTwW5E5fkKdaG72o9TuRYiSlVlFDxdTA3L06JhiUVOvx5/bk5KBHz7+Lb
OVTbnk+XetcWyRlO/cZ+94BYp61FcWZg5Wb7RsjugRtmfiN2b93yk6xSx0DA
zHujPmQnAa/VxqtgO5mt/hbh5XAv303DyzGPM7B9nR2k7Hu6dKXE/iDMj2cj
vBwJ2/URXo4EzI+zbXdpz8urlYx5bnKEf2st5sd3bLsg6EZcKZpdOWlwTWol
xssh1cy05VWpGZ/SiUCVeEYzjJdDqkCTY1ygmjniBks4c3AV85K8i2VVxMso
1Sx88+BQxSge89cedYrMHwUOPJ575YaXy9iH+ffI15O86t4a+boK85fvaO7G
/HhYrdROK3azkgciqpPxVDweprMniz06rxMbcNreDuv8iUv+d88jr37IX4Od
NpphkL8Ge+IXOGF/zeq6vBfy70AXn+5dyL8DHqEsO2H/nmL+ixGKBwjnfkgr
QPEAYSkesE5eyZsnf0jlzj3hFC+9Q5gff4zydWTS8XXIqOEcOCO5ZYed9AL2
GXNjflw5n5QVy7lmS+hMxWXzCm7Mjx9E+DrEBXUQvg5xjK9D60TCmPyCIcfF
c7n+/ncNMb6OGs7fsVAchVN4ET4PxVG4JflsWtH8FpMbuey8KSDj2SDMX3O+
fyTM1/nymUSDn0lMagXm39+P4om+HDZFB6JqhVt4KOe7Blb1NSzaGpWVH0nl
c2o8jPnx9eGKe2Qs9EBt26SzUDwJyizeR+LJ+c0tyydck8EjZlJpUPwJdl3v
RuJPvtfGT0ZDJYH2bS4FB4NkgM2T5HhV2Rrm8ShUjdwI83gUYXYmHeHxMFQC
EB4PQ8yPM7/mGL0XtUxB+XVXCnck5Z6aapTHQ5qOx8PGVGP/Gd84Iev8b5cl
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
Hw5gTjA=
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{355.9373755269871, 232.00658414001117`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.2747297389291796, 3.1522248392608483`, 1.1991672666041377`},
  ViewVertical->{-0.030769633338502356`, -0.35304806419073986`, 
   0.9350990824695453}]], "Output",
 CellChangeTimes->{{3.873990321497046*^9, 3.873990360775103*^9}, {
   3.8739904473306847`*^9, 3.873990464200592*^9}, {3.873990872278893*^9, 
   3.873990919027059*^9}, 3.874159136663022*^9, {3.8755558482089767`*^9, 
   3.8755558932016897`*^9}, 3.8755559505015*^9, 3.875608779518321*^9, 
   3.8756088177909117`*^9, 3.875609114922443*^9, 3.875609219817253*^9, 
   3.8756092918127728`*^9, 3.875609407247745*^9, 3.875609923334978*^9, 
   3.8756100088746634`*^9, 3.8756100495201063`*^9, 3.875610324372719*^9, {
   3.8756308878810797`*^9, 3.875630909639102*^9}, {3.8756309723720417`*^9, 
   3.8756309839787493`*^9}, {3.875793688799498*^9, 3.875793762933404*^9}, 
   3.875793809674142*^9, {3.87579388026549*^9, 3.875793950754942*^9}, {
   3.875793983408401*^9, 3.875794009499598*^9}, 3.875794095587812*^9, 
   3.875794161135518*^9, {3.876262291859777*^9, 3.87626246603272*^9}, 
   3.876303016099277*^9, {3.876303046360381*^9, 3.876303060703002*^9}, 
   3.876303166841649*^9, {3.8763032965986233`*^9, 3.8763033484401903`*^9}, 
   3.876304488458064*^9, {3.8765854097658377`*^9, 3.8765854342919397`*^9}, 
   3.8766053438907347`*^9, 3.8766054325317383`*^9, {3.876605611999731*^9, 
   3.876605636894302*^9}, 3.876605824673028*^9, 3.876606187883404*^9, 
   3.878736297544449*^9, 3.878736353473523*^9, 3.8787403835661497`*^9, 
   3.878740773823769*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"1872b661-398d-4f12-86fa-90e3bfd89a32"]
}, Open  ]],

Cell["\<\
Set parameters for the sandbox
  xmin, xmax, ymin, and ymax define the borders of the sandbox
  nbox is the number of gridpoints on a side. The sandbox will be divided \
into an nbox x nbox grid and sand will be moved between those gridpoints.\
\>", "Text",
 CellChangeTimes->{{3.718713496465699*^9, 3.718713510617713*^9}, {
  3.7187138394293213`*^9, 3.718713844168648*^9}, {3.71871396171179*^9, 
  3.718714028208855*^9}},ExpressionUUID->"1bb1f213-cb72-49cc-b2d9-\
4588364d7295"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xmin", "=", 
    RowBox[{"-", "3.747"}]}], ";", 
   RowBox[{"xmax", "=", "3.747"}], ";", 
   RowBox[{"ymin", "=", 
    RowBox[{"-", "3.747"}]}], ";", 
   RowBox[{"ymax", "=", "3.747"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "running", " ", "40", " ", "nboxes", " ", "causes", " ", 
    "findminimumcostflow", " ", "to", " ", 
    RowBox[{"stall", ".", " ", "50"}], " ", "nboxes", " ", "finishes", " ", 
    RowBox[{"running", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nbox", "=", "30"}], ";"}]}], "Input",
 CellChangeTimes->{{3.718713513661891*^9, 3.718713530016432*^9}, {
   3.718713846896575*^9, 3.7187138489240103`*^9}, {3.718713887380218*^9, 
   3.7187138879316025`*^9}, {3.7187141179093075`*^9, 
   3.7187141263052235`*^9}, {3.718714370879244*^9, 3.7187143931580024`*^9}, {
   3.718837776609479*^9, 3.7188378312984858`*^9}, {3.7320306658514137`*^9, 
   3.732030669358096*^9}, {3.7320311116333337`*^9, 3.732031112117734*^9}, {
   3.7320311560831895`*^9, 3.7320312028903494`*^9}, {3.7320314071613874`*^9, 
   3.7320314080677214`*^9}, {3.73203150154478*^9, 3.732031504086841*^9}, {
   3.7320315454472227`*^9, 3.732031546419386*^9}, {3.7320458525475364`*^9, 
   3.7320458529452667`*^9}, {3.7326326839670534`*^9, 3.732632685008771*^9}, {
   3.73263274972233*^9, 3.7326327835315876`*^9}, 3.733231966505395*^9, {
   3.7332320039813833`*^9, 3.733232005643506*^9}, {3.7332321125974092`*^9, 
   3.733232113331465*^9}, {3.733232145644101*^9, 3.7332321461597514`*^9}, {
   3.7332321860642796`*^9, 3.733232186445855*^9}, {3.73323221920685*^9, 
   3.7332322520727825`*^9}, {3.733232290109403*^9, 3.733232318874716*^9}, 
   3.733232540569396*^9, {3.7337936188054357`*^9, 3.7337936487083664`*^9}, {
   3.7338383631922035`*^9, 3.7338383639750013`*^9}, {3.748914448810422*^9, 
   3.7489144505583835`*^9}, {3.748914875540037*^9, 3.7489148800757647`*^9}, {
   3.841479224685567*^9, 3.8414792250605726`*^9}, {3.8414793421775713`*^9, 
   3.841479342417571*^9}, {3.8414801070125427`*^9, 3.841480107211527*^9}, {
   3.87555592001357*^9, 3.875555920158445*^9}, {3.8756099159884777`*^9, 
   3.875609916096182*^9}, {3.875610043855516*^9, 3.875610043974502*^9}, {
   3.875793682680879*^9, 3.875793721473713*^9}, {3.875793875586993*^9, 
   3.875793948476336*^9}, {3.8757940069226294`*^9, 3.8757940069971533`*^9}, {
   3.8757940928913403`*^9, 3.875794092991233*^9}, {3.875794140097681*^9, 
   3.8757941564047956`*^9}, {3.8762623771585283`*^9, 
   3.8762623772471237`*^9}, {3.876262433417536*^9, 3.876262433544656*^9}, {
   3.876585405505458*^9, 3.8765854058776283`*^9}, {3.87660518827043*^9, 
   3.876605188399829*^9}, {3.876605340498394*^9, 3.876605340838002*^9}, {
   3.87660559796305*^9, 3.876605598071498*^9}, {3.876605633217105*^9, 
   3.87660563331977*^9}, {3.8766057335684757`*^9, 3.876605733755821*^9}, {
   3.876606176507572*^9, 3.8766061766473217`*^9}, {3.876924163356978*^9, 
   3.87692416376956*^9}, {3.8779842095968437`*^9, 3.877984211167688*^9}, {
   3.87873630937062*^9, 3.878736331168005*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"c46fd729-895e-44ae-9525-59dd9bf3d2c2"],

Cell["\<\
Set parameters for the optimization
  gridboxcutoff is the minimum amount of sand that a box must contain to be \
included. Specifically, if the difference between initial and final amounts \
of sand in that box is less than gridboxcutoff then the box is excluded from \
the calculation. Set this to 0 to include all boxes.\
\>", "Text",
 CellChangeTimes->{{3.718714837186059*^9, 3.718714877180376*^9}, {
  3.718838284211881*^9, 
  3.718838346993821*^9}},ExpressionUUID->"04339642-b964-4f9e-ad5d-\
8ef64a024b98"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gridboxcutoff", "=", 
   RowBox[{".001", "/", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["nbox", "20"], ")"}], "2"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "scale", " ", "to", " ", "nbox", "\[IndentingNewLine]", "divide", " ", 
    "by", " ", "nbox", " ", "square"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7187155840273438`*^9, 3.718715593315936*^9}, 
   3.718837834737796*^9, 3.7338383153381925`*^9, {3.8414934264833436`*^9, 
   3.8414934476196184`*^9}, {3.875608785270916*^9, 3.8756088112454576`*^9}, {
   3.878736336563113*^9, 3.87873634798517*^9}, {3.8787380687525*^9, 
   3.8787380708966227`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"2a5d1af2-5d1e-4a5a-85f3-30db64d15748"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate Derived Quantities", "Section",
 CellChangeTimes->{{3.718713923550826*^9, 
  3.718713930889989*^9}},ExpressionUUID->"61a6fe87-0b2e-482d-8c84-\
753eac290ab7"],

Cell["\<\
Normalize the initial and final sand distributions within the total box.\
\>", "Text",
 CellChangeTimes->{{3.718713478992344*^9, 
  3.7187134885471244`*^9}},ExpressionUUID->"ad0732b7-e6df-451c-980d-\
51a684a42f77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"finitnorm", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"finit", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "/", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"finit", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", " ", 
      RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ffinalnorm", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"ffinal", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "/", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"ffinal", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", " ", 
      RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7187132897194853`*^9, 3.718713321111663*^9}, {
  3.7187135349379406`*^9, 3.7187136370391617`*^9}, {3.7187144047611823`*^9, 
  3.718714411501978*^9}, {3.7489103073135967`*^9, 3.7489103183341403`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"0f22cf90-5a25-4ce3-a902-6c597856a554"],

Cell["\<\
Calculate the amount of sand that needs to be moved from each box of the grid \
and store the results in an nbox x nbox grid called diffarray.
This is the difference between the initial and final amounts of sand, so a \
positive amount means sand needs to be moved away from this box (sources) and \
a negative amount means sand needs to be moved into this box (targets)\
\>", "Text",
 CellChangeTimes->{{3.7187140698282948`*^9, 3.7187140763068504`*^9}, {
   3.7187149943912573`*^9, 3.7187150387746525`*^9}, {3.7187152642361326`*^9, 
   3.718715281446309*^9}, 3.747570827784646*^9, {3.747570864771738*^9, 
   3.7475709001404667`*^9}, {3.747571046420991*^9, 
   3.7475710917247972`*^9}},ExpressionUUID->"36e4f744-d1a7-444b-b926-\
cdbac989a41a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dx", "=", 
   FractionBox[
    RowBox[{"xmax", "-", "xmin"}], "nbox"]}], ";", 
  RowBox[{"dy", "=", 
   FractionBox[
    RowBox[{"ymax", "-", "ymin"}], "nbox"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffarray", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"finitnorm", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "-", 
        RowBox[{"ffinalnorm", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"xmin", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
         RowBox[{"xmin", "+", 
          RowBox[{"i", "*", "dx"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"ymin", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
         RowBox[{"ymin", "+", 
          RowBox[{"j", "*", "dy"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nbox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "nbox"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.718714081814747*^9, 3.7187141129027367`*^9}, {
  3.7187141544741526`*^9, 3.7187143172783017`*^9}, {3.718714421055709*^9, 
  3.7187144213419113`*^9}, {3.7187144546094537`*^9, 3.718714464540495*^9}, {
  3.7187147534778547`*^9, 3.718714755470257*^9}, {3.7187149653917446`*^9, 
  3.7187149895938635`*^9}, {3.718715133954979*^9, 3.7187151581871185`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"3304fdb8-6edc-4663-b71c-762e2a83631b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Create Necessary Inputs to run FindMinimumCostFlow", \
"Section"]], "Section",
 CellChangeTimes->{{3.747572405771767*^9, 
  3.7475724495852785`*^9}},ExpressionUUID->"4947032e-3eea-44ff-891d-\
6adbdff643a9"],

Cell["\<\

Create lists of all the boxes from which sand needs to be moved out \
(outboxes) and to which sand needs to be moved in (inboxes).
Each entry in one of those lists will be a list of two numbers: the x and y \
coordinates of the center of the grid box.\
\>", "Text",
 CellChangeTimes->{{3.718715393471553*^9, 3.7187154746689825`*^9}, {
   3.7187155475985956`*^9, 3.7187155707979794`*^9}, {3.7187159199009247`*^9, 
   3.7187159375484276`*^9}, {3.718716818132281*^9, 3.718716839031063*^9}, {
   3.7320481965056753`*^9, 3.7320482074735203`*^9}, {3.732048253913473*^9, 
   3.732048254874402*^9}, {3.732048302752951*^9, 3.7320483353762054`*^9}, {
   3.74757182790379*^9, 3.747571829334055*^9}, 3.747572078460015*^9, {
   3.7475721406199784`*^9, 3.747572143906324*^9}, 3.747572220252279*^9, {
   3.7489098635711136`*^9, 
   3.748909867670958*^9}},ExpressionUUID->"929b6fe4-4875-415a-98ef-\
9a3e8fa4434e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"outboxes", "=", 
    RowBox[{"{", "}"}]}], ";", 
   RowBox[{"inboxes", "=", 
    RowBox[{"{", "}"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "nbox"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nbox"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diffarray", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "gridboxcutoff"}], 
          ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"outboxes", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"xmin", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", ".5"}], ")"}], "*", "dx"}]}], ",", 
              RowBox[{"ymin", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"j", "-", ".5"}], ")"}], "*", "dy"}]}]}], "}"}]}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diffarray", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "<", 
           RowBox[{"-", "gridboxcutoff"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"inboxes", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"xmin", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", ".5"}], ")"}], "*", "dx"}]}], ",", 
              RowBox[{"ymin", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"j", "-", ".5"}], ")"}], "*", "dy"}]}]}], "}"}]}], 
           "]"}]}], "]"}]}]}], "]"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7187151011727943`*^9, 3.718715117019005*^9}, {
   3.718715160978093*^9, 3.7187152354207497`*^9}, {3.7187152967701454`*^9, 
   3.718715389759921*^9}, {3.7187156660373745`*^9, 3.718715666405613*^9}, {
   3.7187158859058685`*^9, 3.7187159117441483`*^9}, {3.718716801836755*^9, 
   3.7187168126474085`*^9}, {3.7320454350464597`*^9, 3.732045475137607*^9}, {
   3.7320457835063353`*^9, 3.7320457839907713`*^9}, {3.7320459096176043`*^9, 
   3.732045914589596*^9}, {3.7320464038568344`*^9, 3.732046435487783*^9}, {
   3.732046561441983*^9, 3.7320465621295185`*^9}, {3.7320472556593637`*^9, 
   3.732047292387204*^9}, {3.7320473932194576`*^9, 3.7320474334639626`*^9}, 
   3.7320483527897673`*^9, {3.732632461103332*^9, 3.732632483734434*^9}, 
   3.7326325609955654`*^9, 3.7337936572063227`*^9, 3.7475711172050734`*^9, {
   3.747571190786585*^9, 3.747571242142131*^9}, {3.747571329054353*^9, 
   3.747571378354741*^9}, {3.7475714173245277`*^9, 3.7475714285559196`*^9}, {
   3.7475714797340403`*^9, 3.747571530544854*^9}, {3.7475718018644857`*^9, 
   3.747571819019231*^9}, 3.7475719317060776`*^9, 3.747571992940705*^9, 
   3.7475720498855886`*^9, 3.747572148700659*^9, 3.747572215160716*^9},
 CellLabel->
  "In[102]:=",ExpressionUUID->"b47c93fe-f966-4cca-abb6-4d4e4ad0a41d"],

Cell["\<\
The variables nout and nin are the numbers of boxes from which sand will be \
moved out or in.
 Their product, nvars, represents the total number of possible sand movements.\
\>", "Text",
 CellChangeTimes->{
  3.747572202183044*^9},ExpressionUUID->"aec06be4-0abb-4209-98bd-\
cd2962e311fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nout", "=", 
   RowBox[{"Length", "[", "outboxes", "]"}]}], ";", 
  RowBox[{"nin", "=", 
   RowBox[{"Length", "[", "inboxes", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nvars", "=", 
   RowBox[{"nout", "*", "nin"}]}], ";"}]}], "Input",
 CellLabel->
  "In[104]:=",ExpressionUUID->"50c77fc6-14e1-4ac5-bfa4-f03dc7c276a1"],

Cell["\<\
 
Creating a graph of vertices and edges contributing to the flow (bipartite \
graph of two sets of vertices: source set and target sets) 
EdgeCost: Assigning cost to each edge which is calculated by the Euclidean \
Distance between the two vertices. \
\>", "Text",
 CellChangeTimes->{{3.7475721628591304`*^9, 
  3.7475721776949883`*^9}},ExpressionUUID->"555ba4a0-0cc1-4dcc-a180-\
33e6cc1cd530"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.732632593343721*^9, 3.7326326650452313`*^9}, {
   3.7475718419541245`*^9, 3.747571856638435*^9}, 3.747571982263337*^9},
 CellLabel->
  "In[106]:=",ExpressionUUID->"41283e83-57dc-4bb7-b9c8-4fa2593fecf7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nout", "+", "nin"}]], "Input",
 CellChangeTimes->{{3.875793799868103*^9, 3.875793802614621*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"275892e6-15d7-4bc5-ba5d-5a64948be5a2"],

Cell[BoxData["182"], "Output",
 CellChangeTimes->{
  3.875793820835017*^9, {3.875793888002529*^9, 3.875793952134191*^9}, 
   3.875793984998168*^9, 3.875794019713022*^9, 3.875794102587914*^9, 
   3.875794169302956*^9, {3.876262298902234*^9, 3.8762624729171753`*^9}, 
   3.876303023061964*^9, {3.876303053307283*^9, 3.8763030675195103`*^9}, 
   3.876303173715815*^9, {3.876303303336472*^9, 3.8763033552100153`*^9}, 
   3.876304495365291*^9, {3.8765854203638*^9, 3.8765854444276037`*^9}, 
   3.8766053546908083`*^9, 3.876605443268002*^9, 3.876605619214157*^9, 
   3.87660565196585*^9, 3.876605844734748*^9, 3.876606202738798*^9, 
   3.878736358207883*^9, 3.878740388750732*^9, 3.878740778781474*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"c602cf24-44a8-47c4-b192-5918908ef1e9"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7320488798519497`*^9, 3.7320488811962485`*^9}},
 NumberMarks->False,
 CellLabel->
  "In[108]:=",ExpressionUUID->"9e1c6c9f-d0f4-4319-a17d-4e3a5ec7daea"],

Cell["\<\
Create lists of the amount of sand that needs to be moved out (supplyamount \
with positive values), and moved in (demandamount with negative values)\
\>", "Text",
 CellChangeTimes->{{3.732048402335739*^9, 3.732048457991173*^9}, {
  3.747571741412285*^9, 
  3.7475717430986366`*^9}},ExpressionUUID->"88f9deac-6a44-4609-bd3d-\
f79761a7858e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"supplyamount", " ", "=", 
   RowBox[{"{", "}"}]}], ";", " ", 
  RowBox[{"demandamount", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "nbox"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", "nbox"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"diffarray", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "gridboxcutoff"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"supplyamount", ",", 
          RowBox[{"diffarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"diffarray", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "<", 
         RowBox[{"-", "gridboxcutoff"}]}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"demandamount", ",", 
          RowBox[{"diffarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.732047307722587*^9, {3.732047369000198*^9, 3.732047396097019*^9}, 
   3.73204744306359*^9, {3.7320483605694847`*^9, 3.732048361937667*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"851fa3d7-0006-44e1-8b12-6fd1cdcc9bc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["New codes begin here", "Section",
 CellChangeTimes->{{3.8413586497106695`*^9, 
  3.8413586567506685`*^9}},ExpressionUUID->"e36a8e42-632d-439a-88a9-\
bbf3b66f071b"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "mat0", ",", "i", ",", "j", ",", "mat", ",", "k", ",", "l", ",", "m", ",", 
   "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.8414455693714323`*^9, 3.841445573032248*^9}, {
  3.841446523782212*^9, 3.8414465288888655`*^9}, {3.8414467553688374`*^9, 
  3.841446758540719*^9}, {3.841447872694888*^9, 3.8414478747358923`*^9}, {
  3.8414801748109426`*^9, 3.8414802033999434`*^9}, {3.841481094388789*^9, 
  3.8414810992017703`*^9}, {3.84148121384779*^9, 3.8414812146497726`*^9}, {
  3.841481352167692*^9, 3.8414813523376937`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"3222929b-4701-4498-bcb5-33aa4590e6be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Create", " ", "the", " ", "cost", " ", "matrix", " ", "with", " ", "rows",
     " ", "being", " ", "all", " ", "supplying", " ", "boxes", " ", "and", 
    " ", "columns", " ", "being", " ", "all", " ", "demanding", " ", 
    RowBox[{"boxes", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mat", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{
         RowBox[{"outboxes", "[", 
          RowBox[{"[", "o", "]"}], "]"}], ",", " ", 
         RowBox[{"inboxes", "[", 
          RowBox[{"[", "q", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"o", ",", 
         RowBox[{"Length", "@", "outboxes"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"q", ",", " ", 
         RowBox[{"Length", "@", "inboxes"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "FindMinimumCostFlow", " ", "method", " ", "requires", " ", "the", " ", 
      "columns", " ", "and", " ", "the", " ", "rows", " ", "to", " ", 
      "contain", " ", "all", " ", "boxes"}], ",", 
     RowBox[{
     "no", " ", "matter", " ", "supplying", " ", "or", " ", "demanding"}], 
     ",", " ", 
     RowBox[{
     "though", " ", "I", " ", "think", " ", "the", " ", "method", " ", "will",
       " ", "not", " ", "actually", " ", "use", " ", "the", " ", "diagonally",
       " ", "lower", " ", "half", " ", "of", " ", "the", " ", "matrix"}], ",",
      " ", 
     RowBox[{
      RowBox[{
      "so", " ", "we", " ", "can", " ", "keep", " ", "elements", " ", "in", 
       " ", "that", " ", "part", " ", "quatiling", " ", "to", " ", "0.", " ", 
       "\[IndentingNewLine]", "Now", " ", "create", " ", "a", " ", "zero", 
       " ", "matrix", " ", "with", " ", "#", " ", "of", " ", "columns"}], "=", 
      RowBox[{
       RowBox[{"#", " ", "of", " ", "rows"}], "=", 
       RowBox[{"#", " ", "of", " ", "all", " ", "boxes"}]}]}], ",", " ", 
     RowBox[{
     "and", " ", "put", " ", "the", " ", "cost", " ", "matrix", " ", "from", 
      " ", "previous", " ", "section", " ", "onto", " ", "the", " ", "upper", 
      " ", "right", " ", "part", " ", "of", " ", "the", " ", "zero", " ", 
      "matrix"}], ",", 
     RowBox[{
     "where", " ", "the", " ", "rows", " ", "are", " ", "supplying", " ", 
      "boxes", " ", "and", " ", "columns", " ", "are", " ", "demanding", " ", 
      RowBox[{"boxes", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "@", "outboxes"}], "+", 
         RowBox[{"Length", "@", "inboxes"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "@", "outboxes"}], "+", 
         RowBox[{"Length", "@", "inboxes"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", 
      RowBox[{"Length", "@", "outboxes"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", 
        RowBox[{
         RowBox[{"Length", "@", "outboxes"}], "+", "1"}]}], ",", 
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "@", "inboxes"}], "+", 
          RowBox[{"Length", "@", "outboxes"}]}], ")"}]}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"mat", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{"j", "-", 
            RowBox[{"Length", "@", "outboxes"}]}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{
       RowBox[{"Length", "@", "outboxes"}], "+", "1"}]}], ",", 
     RowBox[{"m", "\[LessEqual]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "@", "inboxes"}], "+", 
        RowBox[{"Length", "@", "outboxes"}], "-", "1"}], ")"}]}], ",", 
     RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "@", "outboxes"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "m"}], "]"}], "]"}], "=", 
        RowBox[{"mat", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{"m", "-", 
            RowBox[{"Length", "@", "outboxes"}]}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", "//", "MatrixForm"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8414481719044375`*^9, 3.841448263199439*^9}, {
   3.8414482987994437`*^9, 3.8414483691114388`*^9}, {3.8414485856880803`*^9, 
   3.8414486575770683`*^9}, 3.8414793839445667`*^9, {3.8414796056779747`*^9, 
   3.8414796184409695`*^9}, {3.8414796666909957`*^9, 
   3.8414796693719974`*^9}, {3.8414797189669995`*^9, 3.841479736503998*^9}, {
   3.8414797957833433`*^9, 3.841479808655347*^9}, {3.8414798408483453`*^9, 
   3.8414798409783597`*^9}, {3.84147992159634*^9, 3.8414800628595266`*^9}, {
   3.841481328512048*^9, 3.8414813388010445`*^9}, 3.875793730245781*^9, {
   3.87660389009202*^9, 3.8766039646544323`*^9}, {3.8766040101822023`*^9, 
   3.876604013907318*^9}, {3.876604069481089*^9, 3.876604084193413*^9}, {
   3.876604188980917*^9, 3.876604207241887*^9}, {3.876604251078076*^9, 
   3.876604256005031*^9}, {3.8766046287970743`*^9, 3.8766046377635937`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"c1d9eed1-0022-4222-8bd2-904ac3fed851"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "mat0", "]"}]], "Input",
 CellChangeTimes->{{3.87660465674741*^9, 3.8766046585749807`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"6c16e990-8c98-496e-a1f7-d6286a98117c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"182", ",", "182"}], "}"}]], "Output",
 CellChangeTimes->{{3.8766046405721188`*^9, 3.8766046699643087`*^9}, 
   3.876605355140252*^9, 3.876605443781749*^9, 3.8766056199260406`*^9, 
   3.876605652961513*^9, 3.876605846385687*^9, 3.876606204224636*^9, 
   3.8787363588898907`*^9, 3.878740389499848*^9, 3.8787407789147997`*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"69daef19-d7f9-4a29-a9a9-afae8aa9dc2e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Then", " ", "put", " ", "in", " ", "the", " ", "numbers", " ", "for", " ",
     "the", " ", "upper", " ", "left", " ", "section"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "<=", 
      RowBox[{"Length", "@", "outboxes"}]}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"l", "=", 
        RowBox[{"k", "+", "1"}]}], ",", 
       RowBox[{"l", "\[LessEqual]", 
        RowBox[{"Length", "@", "outboxes"}]}], ",", 
       RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "l"}], "]"}], "]"}], "=", 
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{
          RowBox[{"outboxes", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", " ", 
          RowBox[{"outboxes", "[", 
           RowBox[{"[", "l", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]",
       "]"}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", "//", "MatrixForm"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.841479395850571*^9, 3.8414793960655684`*^9}, {
   3.841479742842001*^9, 3.8414797697763433`*^9}, {3.841479816531345*^9, 
   3.841479843832347*^9}, 3.875793734593319*^9},
 CellLabel->
  "In[118]:=",ExpressionUUID->"d2571b6a-7e27-40e3-bd15-ef1cf9d52163"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"For", " ", "the", " ", "lower", " ", "right"}], ".."}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{
       RowBox[{"Length", "@", "outboxes"}], "+", "1"}]}], ",", 
     RowBox[{"m", "\[LessEqual]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "@", "inboxes"}], "+", 
        RowBox[{"Length", "@", "outboxes"}], "-", "1"}], ")"}]}], ",", 
     RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{"m", "+", "1"}]}], ",", 
       RowBox[{"n", "\[LessEqual]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "@", "inboxes"}], "+", 
          RowBox[{"Length", "@", "outboxes"}]}], ")"}]}], ",", 
       RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"m", ",", "n"}], "]"}], "]"}], "=", 
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{
          RowBox[{"inboxes", "[", 
           RowBox[{"[", 
            RowBox[{"m", "-", 
             RowBox[{"Length", "@", "outboxes"}]}], "]"}], "]"}], ",", " ", 
          RowBox[{"inboxes", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", 
             RowBox[{"Length", "@", "outboxes"}]}], "]"}], "]"}]}], "]"}]}]}],
       "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", "//", "MatrixForm"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.841479846079341*^9, 3.841479878728359*^9}, {
   3.841481153466199*^9, 3.841481159092202*^9}, 3.8757939306154327`*^9, {
   3.876262330300892*^9, 3.87626235304852*^9}, {3.87630306970643*^9, 
   3.876303071201099*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"f105721a-a752-41d7-85c8-e05cffc9d29b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "mat0", "]"}]], "Input",
 CellLabel->
  "In[122]:=",ExpressionUUID->"75386c27-017d-4a2f-b2f6-31115e6697fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"182", ",", "182"}], "}"}]], "Output",
 CellChangeTimes->{3.8766046889535093`*^9, 3.876605355358542*^9, 
  3.8766054440529633`*^9, 3.8766056201624107`*^9, 3.876605653444491*^9, 
  3.8766058472473087`*^9, 3.876606204718449*^9, 3.878736359102524*^9, 
  3.878740389698071*^9, 3.878740779010634*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"90c6c71d-9416-4ead-a3eb-d6e86518f72c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<supplyamount.csv\>\"", ",", "supplyamount", ",", "\"\<CSV\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<demandamount.csv\>\"", ",", "demandamount", ",", "\"\<CSV\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<mat0.csv\>\"", ",", "mat0", ",", "\"\<CSV\>\""}], 
  "]"}]}], "Input",
 CellLabel->
  "In[123]:=",ExpressionUUID->"0e344b13-1464-458f-af48-a2b6e71e1a49"],

Cell[BoxData["\<\"supplyamount.csv\"\>"], "Output",
 CellChangeTimes->{3.876605444090106*^9, 3.876605620220331*^9, 
  3.8766056535138807`*^9, 3.876605847319927*^9, 3.876606204790926*^9, 
  3.8787363591559362`*^9, 3.878740389740293*^9, 3.878740779050255*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"b68b360f-7165-4926-8978-d6889f512223"],

Cell[BoxData["\<\"demandamount.csv\"\>"], "Output",
 CellChangeTimes->{3.876605444090106*^9, 3.876605620220331*^9, 
  3.8766056535138807`*^9, 3.876605847319927*^9, 3.876606204790926*^9, 
  3.8787363591559362`*^9, 3.878740389740293*^9, 3.878740779055211*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"f68784d5-ae37-4c38-844c-f7acdd0d3f44"],

Cell[BoxData["\<\"mat0.csv\"\>"], "Output",
 CellChangeTimes->{3.876605444090106*^9, 3.876605620220331*^9, 
  3.8766056535138807`*^9, 3.876605847319927*^9, 3.876606204790926*^9, 
  3.8787363591559362`*^9, 3.878740389740293*^9, 3.878740779163047*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"56d2730c-2c36-4d70-b00a-dddc5c392319"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Find", " ", "the", " ", "minimum", " ", "cost", " ", "flow"}], 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"FindMinimumCostFlow", "[", " ", 
   RowBox[{"mat0", ",", " ", 
    RowBox[{"Join", "[", 
     RowBox[{"supplyamount", ",", "demandamount"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.841479871470343*^9, 3.8414798990173435`*^9}, {
   3.8762622784028587`*^9, 3.8762623497679367`*^9}, {3.876262407259721*^9, 
   3.876262409381081*^9}, 3.8762624633824673`*^9, {3.8763029991594877`*^9, 
   3.876302999420178*^9}, {3.876303041838646*^9, 3.876303057947942*^9}, {
   3.876303192509048*^9, 3.876303195754176*^9}, {3.8763032640470037`*^9, 
   3.876303345178494*^9}, {3.876304469196013*^9, 3.8763044811269207`*^9}, {
   3.876304640583706*^9, 3.8763046407153883`*^9}, 3.8765854310417347`*^9},
 CellLabel->
  "In[126]:=",ExpressionUUID->"46ec8bcc-cb89-4095-9bfc-e7e1ecd4e719"],

Cell[BoxData["0.7321965945862122`"], "Output",
 CellChangeTimes->{{3.8762623709534893`*^9, 3.8762624219059963`*^9}, {
   3.876303024203535*^9, 3.876303067926257*^9}, 3.8763031744978313`*^9, {
   3.876303287815226*^9, 3.876303290712359*^9}, {3.876304470531726*^9, 
   3.876304479291031*^9}, {3.876585420906397*^9, 3.876585445007853*^9}, 
   3.8766053554254293`*^9, 3.876605620717754*^9, 3.876605655805501*^9, 
   3.876606207228194*^9, 3.878736359627205*^9, 3.878740389891325*^9, 
   3.878740779177042*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"9fd0d7e2-a214-44d3-9e4c-eb87dcbdc1e0"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.876585475273717*^9, 3.876585510532605*^9}, 
   3.876605426834422*^9},
 CellLabel->
  "In[127]:=",ExpressionUUID->"144c39e3-2c82-437b-be18-a501ebbd17c6"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949, 816},
WindowMargins->{{Automatic, 20}, {Automatic, 0}},
Magnification:>1.15 Inherited,
FrontEndVersion->"13.1 for Mac OS X x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f18c5299-2190-41d4-805a-fc836aee0eef"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 240, 4, 184, "Title",ExpressionUUID->"db21e94a-4d5b-44de-85a4-2189ac2807bc"],
Cell[823, 28, 789, 21, 90, "Text",ExpressionUUID->"b7678db6-d45f-455b-85ec-513458b119c0"],
Cell[1615, 51, 363, 7, 39, "Text",ExpressionUUID->"41db1386-6c3a-4e02-80a7-437487129e45"],
Cell[CellGroupData[{
Cell[2003, 62, 161, 3, 77, "Section",ExpressionUUID->"6b7c1d83-4d3a-49ff-8eba-e2fc473f6487"],
Cell[2167, 67, 306, 7, 39, "Text",ExpressionUUID->"20bc7c2e-b83f-4d5b-8aa9-ecd013b816cc"],
Cell[2476, 76, 1798, 31, 97, "Input",ExpressionUUID->"b6d1e559-02c0-4274-956a-6b1a937d77b2"],
Cell[4277, 109, 936, 13, 34, "Input",ExpressionUUID->"da9295af-244e-4c60-890c-9adc0afec214"],
Cell[CellGroupData[{
Cell[5238, 126, 3294, 109, 332, "Input",ExpressionUUID->"1f2696b0-e746-46e3-b02b-7f37f5ad28ef"],
Cell[8535, 237, 1275, 23, 64, "Output",ExpressionUUID->"4131192e-f945-41ee-bd6e-0e6513c95a45"],
Cell[9813, 262, 1373, 25, 64, "Output",ExpressionUUID->"1f42620a-01a6-4ef3-ad60-f5474fc7c6b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11223, 292, 747, 19, 34, "Input",ExpressionUUID->"aa317fa4-c1f8-449a-a609-2ea7db5867da"],
Cell[11973, 313, 558, 12, 33, "Message",ExpressionUUID->"7cd81909-0b6b-4595-9383-3a3929ecf0a3"],
Cell[12534, 327, 147835, 2403, 287, "Output",ExpressionUUID->"1872b661-398d-4f12-86fa-90e3bfd89a32"]
}, Open  ]],
Cell[160384, 2733, 489, 9, 116, "Text",ExpressionUUID->"1bb1f213-cb72-49cc-b2d9-4588364d7295"],
Cell[160876, 2744, 3158, 51, 83, "Input",ExpressionUUID->"c46fd729-895e-44ae-9525-59dd9bf3d2c2"],
Cell[164037, 2797, 522, 10, 116, "Text",ExpressionUUID->"04339642-b964-4f9e-ad5d-8ef64a024b98"],
Cell[164562, 2809, 778, 18, 105, "Input",ExpressionUUID->"2a5d1af2-5d1e-4a5a-85f3-30db64d15748"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165377, 2832, 173, 3, 77, "Section",ExpressionUUID->"61a6fe87-0b2e-482d-8c84-753eac290ab7"],
Cell[165553, 2837, 224, 5, 39, "Text",ExpressionUUID->"ad0732b7-e6df-451c-980d-51a684a42f77"],
Cell[165780, 2844, 1433, 38, 155, "Input",ExpressionUUID->"0f22cf90-5a25-4ce3-a902-6c597856a554"],
Cell[167216, 2884, 753, 12, 116, "Text",ExpressionUUID->"36e4f744-d1a7-444b-b926-cdbac989a41a"],
Cell[167972, 2898, 1721, 45, 129, "Input",ExpressionUUID->"3304fdb8-6edc-4663-b71c-762e2a83631b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169730, 2948, 230, 4, 77, "Section",ExpressionUUID->"4947032e-3eea-44ff-891d-6adbdff643a9"],
Cell[169963, 2954, 908, 16, 116, "Text",ExpressionUUID->"929b6fe4-4875-415a-98ef-9a3e8fa4434e"],
Cell[170874, 2972, 3407, 78, 227, "Input",ExpressionUUID->"b47c93fe-f966-4cca-abb6-4d4e4ad0a41d"],
Cell[174284, 3052, 299, 7, 65, "Text",ExpressionUUID->"aec06be4-0abb-4209-98bd-cd2962e311fa"],
Cell[174586, 3061, 372, 10, 59, "Input",ExpressionUUID->"50c77fc6-14e1-4ac5-bfa4-f03dc7c276a1"],
Cell[174961, 3073, 405, 9, 116, "Text",ExpressionUUID->"555ba4a0-0cc1-4dcc-a180-33e6cc1cd530"],
Cell[175369, 3084, 251, 4, 34, "Input",ExpressionUUID->"41283e83-57dc-4bb7-b9c8-4fa2593fecf7"],
Cell[CellGroupData[{
Cell[175645, 3092, 203, 4, 34, "Input",ExpressionUUID->"275892e6-15d7-4bc5-ba5d-5a64948be5a2"],
Cell[175851, 3098, 779, 12, 39, "Output",ExpressionUUID->"c602cf24-44a8-47c4-b192-5918908ef1e9"]
}, Open  ]],
Cell[176645, 3113, 200, 4, 34, "Input",ExpressionUUID->"9e1c6c9f-d0f4-4319-a17d-4e3a5ec7daea"],
Cell[176848, 3119, 350, 7, 65, "Text",ExpressionUUID->"88f9deac-6a44-4609-bd3d-f79761a7858e"],
Cell[177201, 3128, 1756, 46, 179, "Input",ExpressionUUID->"851fa3d7-0006-44e1-8b12-6fd1cdcc9bc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178994, 3179, 169, 3, 77, "Section",ExpressionUUID->"e36a8e42-632d-439a-88a9-bbf3b66f071b"],
Cell[179166, 3184, 656, 12, 34, "Input",ExpressionUUID->"3222929b-4701-4498-bcb5-33aa4590e6be"],
Cell[179825, 3198, 6104, 142, 611, "Input",ExpressionUUID->"c1d9eed1-0022-4222-8bd2-904ac3fed851"],
Cell[CellGroupData[{
Cell[185954, 3344, 216, 4, 34, "Input",ExpressionUUID->"6c16e990-8c98-496e-a1f7-d6286a98117c"],
Cell[186173, 3350, 446, 8, 39, "Output",ExpressionUUID->"69daef19-d7f9-4a29-a9a9-afae8aa9dc2e"]
}, Open  ]],
Cell[186634, 3361, 1530, 39, 203, "Input",ExpressionUUID->"d2571b6a-7e27-40e3-bd15-ef1cf9d52163"],
Cell[188167, 3402, 1929, 51, 179, "Input",ExpressionUUID->"f105721a-a752-41d7-85c8-e05cffc9d29b"],
Cell[CellGroupData[{
Cell[190121, 3457, 149, 3, 34, "Input",ExpressionUUID->"75386c27-017d-4a2f-b2f6-31115e6697fd"],
Cell[190273, 3462, 417, 8, 39, "Output",ExpressionUUID->"90c6c71d-9416-4ead-a3eb-d6e86518f72c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190727, 3475, 494, 13, 83, "Input",ExpressionUUID->"0e344b13-1464-458f-af48-a2b6e71e1a49"],
Cell[191224, 3490, 340, 5, 39, "Output",ExpressionUUID->"b68b360f-7165-4926-8978-d6889f512223"],
Cell[191567, 3497, 340, 5, 39, "Output",ExpressionUUID->"f68784d5-ae37-4c38-844c-f7acdd0d3f44"],
Cell[191910, 3504, 332, 5, 39, "Output",ExpressionUUID->"56d2730c-2c36-4d70-b00a-dddc5c392319"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192279, 3514, 957, 17, 83, "Input",ExpressionUUID->"46ec8bcc-cb89-4095-9bfc-e7e1ecd4e719"],
Cell[193239, 3533, 587, 9, 39, "Output",ExpressionUUID->"9fd0d7e2-a214-44d3-9e4c-eb87dcbdc1e0"]
}, Open  ]],
Cell[193841, 3545, 201, 4, 34, "Input",ExpressionUUID->"144c39e3-2c82-437b-be18-a501ebbd17c6"]
}, Open  ]]
}, Open  ]]
}
]
*)

