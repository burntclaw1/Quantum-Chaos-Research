(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    252611,       4902]
NotebookOptionsPosition[    242264,       4699]
NotebookOutlinePosition[    242658,       4715]
CellTagsIndexPosition[    242615,       4712]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "$ProcessorCount", "]"}], ";", 
  RowBox[{"$ProcessorCount", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nbox", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"begint", "=", 
  RowBox[{"AbsoluteTime", "[", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.882273802551115*^9, 3.8822738162741547`*^9}, 
   3.882525056992518*^9, 3.882526114078844*^9, {3.882526207829938*^9, 
   3.882526223899239*^9}, {3.882527059866036*^9, 3.8825270599823847`*^9}, {
   3.882527231198407*^9, 3.8825272315011*^9}, {3.882528404737377*^9, 
   3.882528404881288*^9}, {3.882528475865507*^9, 3.882528476055049*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"02a91139-9e12-413c-8074-2b123cf8870f"],

Cell[BoxData["3.882510476273843`16.341687625429653*^9"], "Output",
 CellChangeTimes->{3.8825250746208153`*^9, 3.882528476291744*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"ff97d060-9e22-407e-846d-3f02ef1d39aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical Calculation: FindMininumCostFlow", "Title",
 InitializationCell->True,
 CellChangeTimes->{{3.718713698564654*^9, 3.7187137052744064`*^9}, {
  3.7475729787223797`*^9, 
  3.7475730185404563`*^9}},ExpressionUUID->"5ab48ef2-37b6-4427-9b76-\
52beb23a2d40"],

Cell[TextData[{
 "This notebook is designed to take two distributions of sand in a specified \
box, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "init"], "(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]],ExpressionUUID->
  "f6f4e356-e2ab-4750-a1bf-5185f201258a"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "final"], "(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]],ExpressionUUID->
  "a005c7ce-debf-4ce9-b696-c35ec95aa070"],
 " and calculate the cost of moving the sand from the initial to the final \
distribution. Cost is defined as the amount of sand moved times the \
distance."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.7187137106772213`*^9, 
  3.7187138091258593`*^9}},ExpressionUUID->"218fb7cb-ad86-4458-be35-\
483377849491"],

Cell["\<\
The FindMinimumCostFlow function will output the minimum total cost of \
flowing moving from supply to demand. \
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.718837968909587*^9, 3.71883798673643*^9}, {
  3.7188381917295427`*^9, 3.7188382769472013`*^9}, {3.7475730726166506`*^9, 
  3.7475731381142893`*^9}},ExpressionUUID->"547b3576-5df0-4ac7-b122-\
771ad07fe964"],

Cell[CellGroupData[{

Cell["Enter Parameters", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.718713659939337*^9, 
  3.718713668392317*^9}},ExpressionUUID->"d7fc7ce7-81d8-4cbd-9dcf-\
8cfc9958b6a0"],

Cell["\<\
Define the initial and final sand configurations. (These will be \
automatically normalized below.)\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.7187134100605803`*^9, 3.7187134589721775`*^9}, {
  3.7187138265382032`*^9, 
  3.7187138348340445`*^9}},ExpressionUUID->"79599781-ac64-4776-9359-\
b334ce0a95f4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x1", "=", "0"}], ";", 
  RowBox[{"y1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", "0.1"}], ";", 
  RowBox[{"y2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", "1"}], ";", " ", 
  RowBox[{"p", "=", "1"}], ";", " ", 
  RowBox[{"\[Theta]", "=", "0"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.732030528018759*^9, 3.7320305301988163`*^9}, {
   3.733793701148775*^9, 3.733793752075521*^9}, {3.73379453747824*^9, 
   3.733794545885833*^9}, {3.7337945876704054`*^9, 3.7337946009734435`*^9}, 
   3.7489099147051525`*^9, 3.748909982229043*^9, 3.7489102241472054`*^9, 
   3.748912084949465*^9, {3.748914401723262*^9, 3.7489144045763044`*^9}, {
   3.7489147918774853`*^9, 3.7489147965147*^9}, {3.873990337461932*^9, 
   3.873990355564694*^9}, {3.873990878511148*^9, 3.873990914210498*^9}, {
   3.87555583102358*^9, 3.875555843913355*^9}, {3.875609105293663*^9, 
   3.875609107493991*^9}, {3.875609145886279*^9, 3.875609148480603*^9}, {
   3.875609202745201*^9, 3.875609216215477*^9}, {3.875609399538727*^9, 
   3.8756094011066103`*^9}, {3.875610311101206*^9, 3.875610321206208*^9}, {
   3.8756308759891157`*^9, 3.8756309051654797`*^9}, {3.875630979382516*^9, 
   3.875630981106518*^9}, {3.8757936773518553`*^9, 3.875793677490267*^9}, {
   3.875793740357883*^9, 3.875793760326046*^9}, {3.875793978051387*^9, 
   3.875793980718894*^9}, {3.876605412007324*^9, 3.876605412443317*^9}, {
   3.876923519352556*^9, 3.876923523288248*^9}, {3.87692415815628*^9, 
   3.8769241583366117`*^9}, {3.8778997462512903`*^9, 3.877899747719096*^9}, {
   3.8778998259834623`*^9, 3.877899826559716*^9}, {3.878055650837706*^9, 
   3.8780556611012506`*^9}, {3.882272349810952*^9, 3.8822723520872726`*^9}, {
   3.882272386850973*^9, 3.8822723888707447`*^9}, {3.8822727482469883`*^9, 
   3.882272748798112*^9}},
 FontWeight->"Plain",
 CellLabel->"In[2]:=",ExpressionUUID->"61d4b75a-5312-41ec-a10d-5b02d98bccd5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "=", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ")"}], "2"], 
      SuperscriptBox["p", "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"]}], 
      SuperscriptBox["\[Rho]", "2"]]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", "=", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["p", "2"]], "-", 
      FractionBox[
       SuperscriptBox["p", "2"], 
       SuperscriptBox["\[Rho]", "2"]]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"], 
      SuperscriptBox["p", "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ")"}], "2"]}], 
      SuperscriptBox["\[Rho]", "2"]]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"finit", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "w_"}], "]"}], "=", 
   RowBox[{
    FractionBox["1", "\[Pi]"], 
    SuperscriptBox["E", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", "x", ")"}], "2"]}], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", "y", ")"}], "2"], 
       SuperscriptBox["\[Rho]", "2"]], "-", 
      SuperscriptBox["z", "2"], "-", 
      SuperscriptBox["w", "2"]}]]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ffinal", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{
     FractionBox["1", "\[Pi]"], 
     SuperscriptBox["E", 
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "x2"}], ")"}], "2"]}], 
        SuperscriptBox["p", "2"]], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p", "2"], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"y", "-", "y2"}], ")"}], "2"]}], 
        SuperscriptBox["\[Rho]", "2"]], " "}]]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ffinal", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_", ",", "w_"}], "]"}], "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   SuperscriptBox["E", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"aa", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "x2"}], ")"}], "2"]}], "+", 
       RowBox[{"bb", "*", 
        RowBox[{"(", 
         RowBox[{"x", "-", "x2"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{"y", "-", "y2"}], ")"}]}], "+", 
       RowBox[{"cc", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"y", "-", "y2"}], ")"}], "2"]}], "+", 
       SuperscriptBox["z", "2"], "+", 
       SuperscriptBox["w", "2"]}], ")"}]}]]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.875609362452834*^9, 3.875609362464476*^9}, {
  3.875630944243865*^9, 3.8756309683511887`*^9}, {3.877898765566511*^9, 
  3.877898773577755*^9}, {3.877898810527088*^9, 3.877898813884079*^9}, {
  3.877898945411683*^9, 3.877898953479877*^9}, {3.877900724589119*^9, 
  3.8779007266535063`*^9}, {3.877900963948606*^9, 3.8779009689991407`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"b5d5b115-91cc-459b-94bc-d68b112b873e"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["w", "2"]}], "-", 
    SuperscriptBox["x", "2"], "-", 
    SuperscriptBox["y", "2"], "-", 
    SuperscriptBox["z", "2"]}]], "\[Pi]"]], "Output",
 InitializationCell->True,
 CellChangeTimes->{
  3.875609406933152*^9, 3.875609922946134*^9, 3.875610008609488*^9, 
   3.875610049278322*^9, 3.875610324114811*^9, {3.875630886687756*^9, 
   3.875630909451852*^9}, {3.875630972212187*^9, 3.875630983788144*^9}, {
   3.875793687502449*^9, 3.875793762847867*^9}, 3.875793809432104*^9, {
   3.875793880052947*^9, 3.875793950673831*^9}, {3.875793983274036*^9, 
   3.875794009408383*^9}, 3.875794095504784*^9, 3.875794160894525*^9, {
   3.876262291122809*^9, 3.8762624658306313`*^9}, 3.876303015676037*^9, {
   3.876303046255165*^9, 3.876303060581039*^9}, 3.876303166545682*^9, {
   3.876303296307084*^9, 3.876303348149238*^9}, 3.8763044881038847`*^9, {
   3.876585409633469*^9, 3.876585434130595*^9}, 3.876605200053411*^9, 
   3.876605343580845*^9, 3.876605432412238*^9, {3.876605611648827*^9, 
   3.876605636776754*^9}, 3.876605824432742*^9, 3.8766061874843607`*^9, 
   3.8778996713594093`*^9, 3.877899712179925*^9, 3.877899774031931*^9, 
   3.8778998282776737`*^9, 3.877900787702714*^9, {3.8779008521589117`*^9, 
   3.877900877518608*^9}, 3.87790096962283*^9, 3.877902329971468*^9, 
   3.877902382355098*^9, 3.878055747269801*^9, 3.8822711039310207`*^9, 
   3.882271847450614*^9, 3.882272153054818*^9, {3.882272391711475*^9, 
   3.882272394832079*^9}, 3.882272754826131*^9, 3.882272902742881*^9, 
   3.882273062279234*^9, 3.882273774886072*^9, {3.8825250795932617`*^9, 
   3.882525099169186*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"b66335c7-8625-4bbd-85a8-168659eadcc2"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["w", "2"]}], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.1`"}], "+", "x"}], ")"}], "2"], "-", 
    SuperscriptBox["y", "2"], "-", 
    SuperscriptBox["z", "2"]}]], "\[Pi]"]], "Output",
 InitializationCell->True,
 CellChangeTimes->{
  3.875609406933152*^9, 3.875609922946134*^9, 3.875610008609488*^9, 
   3.875610049278322*^9, 3.875610324114811*^9, {3.875630886687756*^9, 
   3.875630909451852*^9}, {3.875630972212187*^9, 3.875630983788144*^9}, {
   3.875793687502449*^9, 3.875793762847867*^9}, 3.875793809432104*^9, {
   3.875793880052947*^9, 3.875793950673831*^9}, {3.875793983274036*^9, 
   3.875794009408383*^9}, 3.875794095504784*^9, 3.875794160894525*^9, {
   3.876262291122809*^9, 3.8762624658306313`*^9}, 3.876303015676037*^9, {
   3.876303046255165*^9, 3.876303060581039*^9}, 3.876303166545682*^9, {
   3.876303296307084*^9, 3.876303348149238*^9}, 3.8763044881038847`*^9, {
   3.876585409633469*^9, 3.876585434130595*^9}, 3.876605200053411*^9, 
   3.876605343580845*^9, 3.876605432412238*^9, {3.876605611648827*^9, 
   3.876605636776754*^9}, 3.876605824432742*^9, 3.8766061874843607`*^9, 
   3.8778996713594093`*^9, 3.877899712179925*^9, 3.877899774031931*^9, 
   3.8778998282776737`*^9, 3.877900787702714*^9, {3.8779008521589117`*^9, 
   3.877900877518608*^9}, 3.87790096962283*^9, 3.877902329971468*^9, 
   3.877902382355098*^9, 3.878055747269801*^9, 3.8822711039310207`*^9, 
   3.882271847450614*^9, 3.882272153054818*^9, {3.882272391711475*^9, 
   3.882272394832079*^9}, 3.882272754826131*^9, 3.882272902742881*^9, 
   3.882273062279234*^9, 3.882273774886072*^9, {3.8825250795932617`*^9, 
   3.882525099173224*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"4f9ea409-3b0a-4cbd-a247-20173d60f6ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ffinal", "[", 
      RowBox[{"x", ",", "y", ",", "0", ",", "0"}], "]"}], ",", 
     RowBox[{"finit", "[", 
      RowBox[{"x", ",", "y", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.873990292424479*^9, 3.8739903286377487`*^9}, 
   3.8739904466766567`*^9, {3.874159135512912*^9, 3.874159135817031*^9}, {
   3.875555862705727*^9, 3.875555892757313*^9}, {3.877898966564402*^9, 
   3.8778989694436007`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"cd84edeb-706b-48c5-8846-b9c3398f8109"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
67F3O7YuhOi6EKn/ILr+Q+o8iK7zkHoOous5pG6D6LoNqc8gpj5DztfQdRhS
b0F0vYXUVRBdVyH1E0TXT0idBNF1ElIPQXQ9RIwb/UyEPQXtM4tGpRLdfCZU
PT0z20R4Jf/jLp2H75N1x2d3NhWqmdfr+ue2Zh6Ot61u/Pd7mZNzzufMDtHM
w0drDIS4D6aC96Fx+/ROaeZhn7eGc/7W4d3PPQzV3VdAdFPXWyLNhPSa+VNQ
+G9at5UmwvmNfR3bVjMh8xCfKzIRnq1KsY26cIHoZjOzTru/dnZtstV1r3kr
otsu9efRVDj4/chNg2NriG412llu/2vn+dfTBgc4aHRbGWiF/to5pFeL2cay
80S3uspf+2171xK+LfreX+oPq6j/Ggn5N5JmSf1h0V/d4oyE1jmzE8wl/vDx
X31m1hbO/ujY/HeUxh+q9TQ1Fo7etinK+GlG/KFaz5nGwgvPpZ8KhngTf6jW
86ax4HSn9/uscyvI59dPbX8t4dqu1QN+OwUR3byHNo6oqKgl6HX9+utyU1fi
D4fVay77a+fX0vvBBVPOE924rFbj/9rZLeps5BS5Nfn8qvWstLOzrUEPwwaa
z69az0o7Z7RYtPSR5POrtqfSznn3z0/Klnx+7X1Lud5B1YWRb4aMkK7X9dQ6
6ws1g548fyFZr6uq/xoI06berdpasl5/UOtsIOzZXeXMwyma9RrrXEPo8aH5
6hZ3NOv1FbU/MRSOvR9qP7VfJlP/MRT8k/M2WeS/Zepp1YUVtutHLmn1m+iJ
da6M94vD1jW7F0X0nK7WWV+47fVgUpZTO7K+YJ0NhBEvXmcNC9GsL0itcw0h
2bPw03hfzfrSeq+DEFhpp9fWvWv7SNaXOuMdbf7a2W/ygRnbJOtL1wufX87M
riJsPnH6oDSebKPWuarQYGW1l4aSeNJCrbOOoJy8bqC5JJ7UUf/VFVTbN1rY
SOJJrLOuYFc35VmatSaexDpXE16ljC5M2NWcqf/oCSc9IwIze8hJPIl1riJ0
2jfP0X/jABL/YJ2rCvMDiuyixv4heq5S66wjfJ7sZOPabxfRE+usI8w/trWK
RQtN/DNcrbOuYL0uythmiyb+6aLWuZpgZug1uLYk/sE66wkt1s84Jo1/Thc8
rbDtXcY/3prSTZrvrJ31ms+O+8F/PfHkQ4Ik3xldUrQyyPYX79HYruYKSb7T
Xq3/bz5gRuqhJZJ8R0/9t5z3tvvg0GmOJt/JUutZwaf3qVVrf1NNvvNEzWXC
BhcD91azFhE9V6v1KeN7bXQIiLq9geg5Uq3DD37ylop+c3y6kPi8rXq8v/jh
t2d1798+n+hZtamLX69KOy2K5r1dmKKJz59Ed0UVFX/4lyZHwx5L4vOTbfvK
/tp5jdPrf0MSn2OdZULXkl1u0vg87lrEymdxhbyj3Z4cad494f65it5BRfzC
0eXZzSR5t9Hz6ysvzPzEv8g6oXSV5N1Y58+886Gvto0leXc7tc5f+Gdju23L
i9Xk3dXUf0r4gmBz70P1NPUfrPM3/kb2uy5fa0cQPceqdSvkSzeMyXiz5BTR
s7panyJ+dbumDS2d5hM9z6h1+MRvGrv1vp+HJn9so9b5M1+zxanVKdM1+SPW
+QsfvaiX4ogkf8Q6f+Ut3fnmDyT5Y4y6/2/8z3kt3kjzx/H3Zv5elB3HZxuk
GEjrP8/qBpTPzb7OW0Z8spLWf24cnFqxw/Y+7+vfP/y2pP7TIGFLxazsR3xL
lcmkkrea+s8s9Xt5xncu1S16PUNT/5mg1v8VX1Po9PPnq0CiW/iYENmMSntW
yOeHBPheIbotUPPrvO9ohwydzUFENyO3ebLASnuCnqY0W/tCU8cYr27/iNf7
2qnnHkkdI27BZVnPSnt69h5ttkxSx9BT9/OKv9cFjZTWMc4OWuNXXvGaH+fO
nZfWMfZhzvX2m/5aOg+/9lD3w337cLe1tP6zBT+X89zQrHpXyTx0wXZyI8Ze
MC+SzMN8dT/3ufrt69Q4cNuB6FNa8fffa67X2+ddLlxMIPr0w3pywpOtn53P
hRN93LD+3Kfv7s4zVmjqYyUX1e+LO59/27qppD62D79fLt+s6rGdkvrYVjwf
uCcRUful9bGUu+r5w3n/vv1YWh+LxPONu9XRs4/U793B85Nb1Xb2dWmdp6yJ
ej5zE+fPa7ND4vea4vnPGXwu7h+RpPF7e/HnhfN2nmb89qTG731V91PE6fX5
deW0vifR7R7+nHK9Wg+y6+y1n+j2W63nV26789gWEVe2E92aYz/ATb5mvLVR
qmZeDcZ+gyuu7rNwXKJmXv14pvYz3OXZnVbNk8yr/tgvcYf7uF/aL5lXB7Ef
41zvfDwtnVcK7PfQ3kNrLknXX6xnBXd3RPMnRpL1Nx37Va5v7/jAsZL1F+v5
mxvd2F51qplm/bXFfpsL/e5r6bhJs/4OwH6eK96x4E56kw7Ev/nidYHLOJi3
ZOUBP6LnA7yOIFnB+GD7Z4uJnljnCi7S27Pz2rgZRE+s8x9uX13bigsNNf6t
BV7XuCaL72/09tL4N6zzL+5B0/595kv82zK8bnKH7nX1l9bHDuN1lrszc95T
qX9riddl1NV8Vpg0PsQ6V0NDJ/fvly+JDwfjdR8Na598Pk8SH07FcQKSmfdz
uLRYEx8uw3EFCtrdrk0bHz+m/lAVRVfzd6vW/T2JD4/guAV1tT9/f7Zld6In
zk/1kFd84WPfd3KiZwaOi5Dbq++J6U/bEz0LcRyFThwzTz37n6Y+Vq7WWQeZ
nj00/OwFzfprjuM0tNnxzPBlkvW3JY7rkP3y0eul9TEVjgORf97chtL11xTH
jUiWGoAmS/KXFjjOROkP9nfoIclfsM410MRA73ZnQjT5yyAcxyK7p71z9N9p
8hessz568KEfF3urHtFzOY6T0c6XV01HnQkiemKdq6Ojtb5+Nc/5zNTHDNHp
a3rnljcoYOoPhqhoYt2KjwY5JD7EOtdAJ1plLarupKmPYZ0N0K56adtOGGji
Q6yzPgo5YZEhl9THzHDegXwfVHktk8SHdjhPQWPWbegmjQ9X4LwG+Rc+rF0g
qefo4zwIHd34LHGeJI/egfMmlNyE35TyQJNHy3GehUYf9TP506uc5NFYZyNk
ebp5k9dB4SSPxjrXQsfOPvY6vLoZ0RPP51ro6IL1j2LqriN69sZ5Iir45G73
II3kQSgT55XIa+DJtG23FxA9x+I8FLVKbF8qFLUkemKda6PT6+sUzmqryV8K
cJ6LLuXrjWgtqY/9UetcC4W0n79JWh/DOtdCXZ93/ymtj337Yl0cGGmGLs2q
8urAQk09R8zHkZ538slEST3HAOfvKLrn4BORczT1nJ0430fWMYWrE5VTiJ7W
uD6AbG7N/3m8Xm2i51FcT0BW1f4or3c8ROoSHXH9AXVeqO91aWs1oqdYr0Bz
+p08cSwS1lkZcsf1DVQkb5g+du5XUpd4iOshKNf8+657/TX1sXG4foJypn04
cailpj72Dtdb0MC3s05ekNTHFuD6DBo/TXV8gCa/Bt0EWjcrBFxvSLHP1x+a
/S3qP34mwrRJ/NMBh6q7wnhrqP/m8b69qjgZdDlH1pG9Ylw36Jn9ohaL4onf
g/ZOVDxTzEOcs5buh/s9Wt0P50/Fh1aCunmlzmMLpfUoKwSctpOMC7HjgnoX
s5+H7LOi64TF5L6Opn2yvAyraezvjeN/LmqJbYbumyOEQxxSNOOBwT1uN+Hw
fdnHBKtZLiqSLwjNcNzLtfPM3X974yLCId6zL5re+tpRH9IP3IPh7jnq47i3
cYT/EXXrMu9N6IqlRH++m7qf+1xFq7Hrf8y5QHQG+xs0fPcrc+MZonNvvB9e
yP6lY76oRxH5fInzTriRER83pdYesi5A++DWsd3XGjsSPwZ/+z3yMg8pjCIc
2je+PrQ4FCHi3+C/vxs14n7LKgsIh/Y1mpxpc+xELbKOQPu30ePaCba6hEP7
gQNvvVz4ai/5/EL78Pit+zoPHk44tF/WsdHEDluLyeca2jvUWvjdpcUywqH9
i6FC262vyPcRMmifJ+7DB52BO1L9yGTQz3XxfAR5LyLPpftH0E8IbT+5n8GX
sl+ftK9xlNKHtI+g9DEm7ad6UPqT9uso/c1J+xf0+yXtN1Pv14K0L8qk5g9p
P8deOn+sSPuqo62aew0fSD6/xJ4/0vlpRe6FeJ22I8VfPovMT+Ble1xcHi44
T+YhcP9bU0Z2nnCFzDfgp89kBkYkbiPzCvhLmdX9OiWNSNwCfHWnJpfaxc4l
6yzwFj3CG48ZGkzmCXCFeB8FvHfgVnR7ci/ELKp/fcLNq0jtMSbc56zUfnPC
v1HjtSA8J1yqjxXhc+5I9bQi90Lc2PGzm1f/x0Rn4PVepzWcs9GGxNvAmy/a
YXL/Nqm3Ex6140r1tT5lRGfgk/VPmNY8uJ7oDHwMZ3dG6JNNdAbu1f+SXXLn
KuQ+H2KneJ4OdAY+nm5P7oVAVP/6hIdT9hgTrtoptd+c8C/UeC0Iv0XpY0X4
951SPa3IvRAzHft23PTWjuSJwGfffLx0xcR5RGdyb8O+k982py4nOgNff9vh
7vF2fUieCNzJom2Z4YRsojNw55pZl/jhbck6AvzT+pxxek2GEJ2B54vnQ0Fn
4O/o9uReCCuqf33C/Sl7jAm3SJPab054yH7peC0I73xLqo8V4Vc6SfW0IvdC
ZPVyVYZemazZbybyVWc/mHXzOanZbyby2sPuHu7y/ALRGbjrRuNbA2+u0ew3
E7lFzNwks+I6mv1mIm+hPHKz/QAvzX4zkb+rtf5G+6Nbic7AleJ5Z9AZeA7d
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
GyFdKh+EcxxGKHy6NH8s5rH+tVBFQyrflNmJdbb3TD0Q7Hd+QuWz6IVofzyV
/4r1wEr7o6l82RiB/Yup/Npc1N8I9TklzcctkJ5of60iaf5uJepfCw3Ik+b7
Yj0w0gwVPc77MHeipk61A9cNUMv70rqBOdb/gym6vUNaZzAWmuO6BJpO1SX0
hdm4joGcqToG1LdN0K1wad2jmFefv/MzQaGjqDqJ+D2CCdqgrR5YaX+OGVWH
QTtF+x2puo0+AvtHUnUeYwT2j6LqQuZojmj/M6qOBPVtE2TTRlp3Eve/RZoJ
tJ5WqKfItz2huThe4XRNaV2rmC8W47S6Y5/fs87R7NPL1BpPFnPYb+TxZWPo
9r/FfZJGVD+Qh+ZzoeI982C/TNSfrrNZIR2R969Jc3FciB0X6MfsvxJgHtF1
UZkM7vG7Qt07KpPB/YRJFId6Zqoik/4eWQZ8hfg7BTTPUaxk+Cmxf4F5LtwT
OIG6VxP+CUlsP7shPmf6gXsyJ1H9VL5HMX+pO1gavxXzc8U8ayyVZxWT+zMP
0t//ivaX8oOZuOWF2P8dOj6UJYr97Kbeu0wG/e9j+BGRH2c4L473MvNelotx
YD/G/iwxXi0fRI8XvkcOZcZ1Q+SbmOeeF+M0eh+LTAb9BDHt4V7KV+J9m/AC
S8T360XlX1A3e8XtovKOYnLfpvvWS4Ed/RMJdxTzhSmz9wZ1+E4+j3xXMe+I
tI0a+SIyicQzkeJzfajnFpN7OLvS/XNWYr4zY82SvZcnxJN+bMQ4PH2+ndzU
ShNHwXjr6R+0PpN5iPBp4nt51n71xIpnmnuo3otx/vYD/ftM2RtNOM434zgv
elyctziuMGZc/cV884CoG/W785X+rV//qhndvNNcqN+pr+Sxny3GyJ7Knanf
o6/kS+/1+nI7sCH5fVjgw3acXHK0dgcF9Xv0lXxom/ofIvINyO/DAr/27vN8
eXoU+d1S4A72IWO/baxG1hfgF5OXP3X605L8PizwAbt7RQfrmJDfhwXe9/yG
+O0dEpXU79FX8gOvH8y6udqO/D4s8NkDRlzZ2mC0gvo9+kq+/9ksyx+tB8up
36Ov5A+6DwtuvcvQldJTZiR0Mjlbf76puyulZyVfpHz+a8S0S7SeldykSuOH
4Y330HpW8nNmz2d4BZ2m9azkq7fHXM5NWUfrWcm7/96nW62KrYrSs5JvDPlc
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
z3ye6nvjJinHp/qeVZRyPlTfuzdSOX+q701f9Kn16nlvNyX/pL5zwA4lX6W+
8562Sn5LfeeDDB+W/vT8NfIeK7tePb+b4eHUR27WXcnbqY9claDk+dRH/pfJ
C6iPnHxMmUdQv/jAZ8p8hPrFN9so8xfqF/dk8h3qF9sy+RHVPTZ9+vrkz5H3
Otl9MPBmxcp8jfrIv/sp8zvqI3evVuaD1EeOd1bmj9RHnvOHMt+kfvHMLGXe
Sv3iVUyeS/3iRCYvpn7xRTaP5qT458z9Tv3iD0yeTv3iO37KvJ76xdEHlToA
9Yu/sFbqBtQXrrRS6g/UF27J6BXUF/Zg9Q1Oiud8Gj9R4FSlfkJ94Z1FSr2F
+sL7lij1Ger/fvhHqfNQ/zeW1YU4KX6DOY+o/6u7qtSdqP/7ntGpqM8bxupd
nBTvx5zv1OddUKjU08ifib9lM7xI1gnFCy0ZvU7WIT8weTT1QS50Fs0dkcCD
cVAwM470pxdKGDyhOuQ1Zhz6F0GeAwTz4Zt5KedDn5OZ0K18vl+vn6Gfxb8+
4XLoUsYqlW55zww/183GDfwL+4txDX32qHyxKZ8cn+OSp/n2vtMgkv8/otju
WA==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
iRsZs03vz5h34U/gYrFrJuX6zYy/iP+vg5/O2aaqwp1zzl1V4E7wCvhj+aLi
K9ddcIuc41AtuCf8Jrxaz5xz7NT8ax2W07+fNke7iqskXDnnvZzq6uvgxfAe
xQJ4EfyB4gW8FP5I85zz/b7J1nQZ/ftoCzR/XHv1vvI5rjWaO8ZPhtfCX8Gz
4M1a/2xNSxQ4Bu7WXMAf6PNsfjbRJoWuxTZn/lWYxSLFR31XPrwD/+xAW1To
+j+XxU/lpXyB87pquTIF9ueW/N9fNpJzLNT7KOxqH7Gezw4Fr506Cwp9L7Fi
umrDkNWE+l3Fj/bBewzFut1Ffg49z3L6Ts577X+D40LHhvNTX2Ld/1d4VWYz
Uxn7nuaXZ5sBb9S7wlPgdfDX8Ex4E3w8Z3/6OnLemUP/Vtof6Z8Nb9G75TyH
qpVOzXv+NI/6bdmmWL53Wt7zolgnm1es/zLzV+VC/YbmXT72adYWZvf5I/tf
vC32u++I/b5aD+1TavJuo/WM3H8Sn82GP+TZDjB3z8SuwbQZ0XuqFi3Iey5U
u8o+ZWv/z4Op31Xz+WewbanW/SPY5lSjNkhdp31O+1PIfF51S7Cfa99RLG9b
XF3k2n4J44+m9ovDma/LlzfQnsTYdpk+cIy2bWpf/laxK2R1Cff5OTimaI+Q
y3v9VsJ1Ur/vYdWqse1IdqYcdEJm83He67qqyPFwHXxi3j4sX9Zz/Bocm7Tv
+D3Yz1XzN0qtmXxJ2z9Yd3gfHhi8t9+tOpdrpeyEdkCwjrAL7husWezQPRLv
N0eoTkwdA9dw/37B2sRO+oYG6w4fqX5MrY18pppXcyW7pR0SrJV8qD1B6jr8
iPYTwfpLM+75W3Dc1P7iMT6bq/hJWzLvmLJF9XawTtQEbphaC/qCdnCw3rEH
HhSsWXygGjy1RvS11jGxdvEaPCtYq2rOfb4JrjNmwLem1km20d6WWhvZTluZ
ayK8n/aW1BrLVtqzU+tLS2nPTa0pLaM9J7XW9I5yUN6+p3lL8/bJtXCl1PX/
PtozU+sAS2hPyTv2KW5UT13/f5J631k6izN3aN4jz//tqfUcrZf2LHoGPUuF
1HW71qVa6n3Tx7SFeeeqdUX2Qe1hD9LWSL2fOkBbMXWdv5f26+CaTHvPm1Pr
XVtU3wbXYdrDHguu52bB3wXXWLPhqxnXnfHrtF9JvT86RPttcM03kzFfBtd2
U+EufPZh5Lr3q+C6apriT8j2A/BVqTWxtbSnp9ZwVJtdm1pbe4/2+tT61Qba
O7l6Rr7PjyHbb8A/BNeF2o9fmlq7W0V7WWrtbjXtFam1uzW0x4NrPsWrG1Pv
NzfR3pBaH9tIe11qLW69ni1v334XXo3tXUD/KPlcYt1spOYmWKPUc3bM9v56
BulRiqnaI/QI1i51/57B2qV+t1uwfqTf6gI3iT3PRVzPRN6DdA3WuTQnHTKd
YSXcKdMQ9I5Tctb99sgHgrXXprxjG/jp2Dasfav2KappJTqpHtPeuW0Wq2Xz
L8ENYttwmUwrka2Wylh59mfevTZ9CxjzU+L6ZD68J7E+9pbWk/s8FdunOsPP
x57/g4lrm+lai8T76Hnwd4nrornwscR10RzZe7BerJg8MXh/rlgxJVhTVtye
FqxNN+Z9v+C7D/Dd2fQfTbxvnQV/nljjmgl/kriOnQpPCs5birFvBWsBinUH
Eu9zp8mm6G8c21YP0f9v+mfIToP1VvnR68FahnJNr2AtWLHljWDNQvH5I757
M9+dIv9IrCtOht8M1qMV314N1nnls72D9WjFsQ8S641vKhYm1pDHwlsT63sT
4O2J9b2JihnBOoti+IbEmuQ4eCN8GTweXpRY1x0EL06s9w6GxwTrBcpr44I1
DsXwhYm134HwTvga+A14W2Kt8nV4eWINeRi8LrGGPxpekVj/HA4vSaxhDkl9
ZiAdcig8LFjLViwdG6xTKL+8l/hcYAw8PFj7VgzfkVhfnZRag6gfOb92TF2X
rpfWFKynKF7NTaz99oUXwKfCA+D5ifXq/vCcxFpxH3h2Yi26t3w2dQ22nXtO
CNZ0VIf0CT4nUH55LVhTVuydl1h/7if7T137beS7PVLXb9vgbqnrPeXEDqnr
6vfgTqlrwg1ZLFX+3QSPCtZnFefbp64fFP9bp96nKB91TV1bboZHBp9DKO+M
CD6rUO7onrpW38qY8qm1JuX0i1OfXyi2fMXz3wJ3YMzexOdBL8Hzg/eEreC5
wXubF+GlwXtUjdfcquyTP74TvGfuCO9PfJbUGl4XrLlI1zqU2VIbeB98eeT7
LwveY3dSPR6s10ineiL4DEO21yD43Egx5+lg/V3+9Uyw9i0ffzZYT5cvPxV8
BiO/ezL4nEk+VTf4/EN+9Giwzi5/qR98RiIbezxYu5d/1QvW9GXzjwXr6fKp
9cFalTS6tcE6lPS0NcE6lHS/z7N4Ii3x3eC9epci+5Tyywvw0SwXSN97P/E5
mub5C/qbxtb6yuS955RNSsc/M6tvS+W9J9T6Lkt8FqZaq3Te+0zZ3q7E52Ut
4ZXBmkJXeEWwXvCycnrivb/WbnWwriE983Dis7+2qrsS6w+d4VXBOoj0z+XB
eoT6v06sJ2gdP018Btcebha811X83xisG0r/vDv1mZpq3SOJ987tipx/5bPK
a82Dzy2Ud5oG65LKHd8n1lI0nz8k1jT0XlUVWyPXKsezGK53XBisv8j2FgXr
IHqvqsHnK4qH1YLPqBTTHgo+61K8qhJ81qL4+WDwOY1iWqXgMyTFlg3BOqm0
4gdT60uqqcql3quqXr0L7hG5dvoky9fSpfcGa2HS2Kuk1s1Um20O1jp19vFx
lmele28K1kx1PvJZlnOlXe/Pcrr0833BOph09erB522KybWCz8xUV9cMPidT
bfNI8PmfYu/Dwed/iue1g8/5VAs1Dj4nU84tF3y2p5jZKPicTDn3ueDzJ+X9
OsHni8pfTYJ1JeX654PP2JSvGwafnynPPhB8jqiYXD74HFExXOe82j9qH1kx
+CxNMbxy8HmY8lSN4PM/7X0WB2tesqW3g7UzxaIlwbqYbHJBsP6lWFch+FxQ
MbxFsA6ummdO8Pm3/HRe8Lmy/Gh28Hl5C/l74rNy7Ynkrz217jpTy1uLUS4o
kbe2olitsyHto7X3aZVas9IeNuSteSmX5fPWbpQXiuet3SgvbOa3zo68DyrK
WxdTHmmZWgfT3lP7OO2FtW+9J/XZtPaJF6auG1Xf3pf67E97rk2Jz/H1Lvem
PifVfvN/QhZnNg==
            "]], Polygon3DBox[CompressedData["
1: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
Mj4DfgVe6QLn+0yDx3H4Afyn/bQ6vMVifnYrxtvA+8NXMD6+Juacc2+NPYvv
upjXQxxPYrwX40dmfdYmBR+V9WFb+N5c762HreF7asLLrK7EnPF31s5+6aIU
+riS9ca5KfT9VVk/Ppmi312T9ebAFPX96Kz/2sH3wVdn/flUin54WdYb/VPo
48ZZH/VLoU8uzfrk0RR6q2Xur8NT9J9fitD3p6bwc38VoafPSeFfamrH9V+e
r9+59lXrda7JejK92abw1CI8pd5Sj/R6ERpLreWf/gr8axH6/LQU/qPk82tq
hWfTux2W9ejtcE/4d/irSnhI+9khWe+2hLszflDW77fBXeFDs/5tBfeAD856
twXcrSY8m1pATTCb79Iq64uXUvTfG7O+ey5Ff/A7+93rpdAPo2AOK7VT+ON+
nP93+Lyq6E9nw4/A96TQf+dk/dwrhf5rkPXb/Sn8whg+j/8qNSn81DiAS1LZ
MEU9+K4If358Cv08tlg/hSp1UvirCcX6aV/ZKIWeGl2Ez69O4bfseS6NMoVf
uiHr7WdT9KOLsj58KIUfuSDrzQdS+JtT4PvgLin046llaM27U+jLk+BecKcU
+vSmrO+fT9F/G2X93DeFvr8w69sHU/ipk+F74c4p9O4x2V+0T+E3zoIfhnum
0NcnwvfAHVPo3zPzeu2Rwg8cm/3OnSn83Rnwg3D3FPp9ZRF66IAU/l+Podew
JrxfhGdRK3mO51ozrZ325OPL6An2BnvufmVoYLWw99R7q+ZUe6pJzytDk6pN
1cz1y+hR9ip7YsMyeri93J6zTxn+ax7fbW2lsn4i2KPsVc5x57o93d6uBtgL
nsOrO8cjee/umujp9nY1wB5laAK1gT3uX2V4RrW4mnxNEZpAbeA98l5Zs63d
1szatUPjqnWtCdYGe4a9wx7zRxE9xl6jJv6ziB5gL7AH/lRED7QXqil+LkID
qAUGwpeU0bPsXfak34vQHGoPa5K1SQ2kFvKee+/tSfYme95vRWhutbca+PQy
PLZeW4+8ughNrDZ2DjgXrPnWfj3qh0V4dL26Hv2zIta82lDNZi2wZupVrQnW
UuewvXlEvl7WXLMJ57y12DltVmCNdq67pvT61nTXmnNYr2iNdm5bo/WSrklr
t55MLaomXVSEp1WL7wkvLyITMBswY/i0CM+od9RTvl2Ep9Rb6omXFeGZ9c47
WUOLWJNqYzWwa9U1My/ff9eSNUvvas+wlqnZ1e4rrAFleDq9nR6jfRk1U++i
p7GW2lPUKnMr0WusMWq56ZWoPX3yfBuY74eeUe9oJtiujJ6m17NH2evsiWoN
NYe90p6o97Fm2yutqXpre6C11ppqFjMkr0drmFmNPdbatqoIPXlgijzwoyL8
yL9T5J/vFuEv902RP3rNrA07pbiWXbJ/m5zi2niPnEs7p7h33iPn3p4p7p33
xHu1e4p7Zc/x3vwtRS+yv9gr66bole2zPxmb4lq7xsz7zkyx9tplPzEmxbXz
Hjt390hx7+2T9suveS3M3udjjtc5n1Ks4Sbe2xRr257t3Ngs9/LNyqgdl6fw
+9eX4T+eSaFXm5Wh3wel0LNNytBbA1LkhXeUke+9nMKPNS1Dzz2WIk9VEzhX
t02hFZwTzo3BKfRuizL06Is2WX5+izJq4xUp8gnnlHNrWAr92bwMv/FCCv14
Wxn+eWgK/XhrGX5ySAo9eGUZevHxFPmoNUv/claKWpbK0Pfnp/Dr1gjz2/1T
1A57hHnqfil6xw9F+PsTUuhj16T69j8p1qo95Fhrb4re8mMRecOJKfSvNUf9
fHCKWmRNtlYemqJWf1lErTsyRT5rTbO2HpKi1n1dRO08KkW++00RtfiYFP5s
XRG1+ugU+bM1Vr93Roraa43Wf56UonarV82zL0zhTzcoIx+qnyIfqVuGv7ok
hV+sKiMfOi9FnmJN1g+dnqJWW8P1u6ekqO32APOVk1P0ho3K8AuNU/jHemX4
tUYp8u2yjHz8ghR5jHm8venSFPlUTRn5+MUp8pkNy/CHDVP4saKMPK9BCn99
XRl5w9Mp/IM1xdryRIo8vnUZ+xcjUuQRrle14nYp8pA5ReRX26fY75gM14M3
TZGnvFlEHvDPFPnHJLguvEmKfMX1plbePEXesLiIPOMfKfzt0iLyht1S5Cnz
i8hrdkyRjy0pIl/YNUV+Mq+I/ObvKfIw65G9Y5cUec/cIvKbHVLkGfZItUfX
FL1zRhH7PVumyCtmFZHvb50iz/i4iHznoBT7PxPhDeGNU+RBK4rIS/ZJsR9j
/bNX7ZUi73uniP2hvVPkV68WsT+wTYr8xPnqfsyxKfL7tUXs7xyRIr+dWcT+
wVYp8pdvi9jPOS5FXju9iP2ALVLkQa4ftc1hKfYrPi8iPzs8xX6AGkIt1iGF
tlDTqdXuSqH17En2pm4ptIP11t40OkUe0RV+D56SYr+iG/w+PDXFfkYneDk8
IUV+1wF+Gx6fIg+xf9hLJ6Xw893hD+BpKfbLesAfwtNT7Ge1KWN/a2SK/OfH
MvylPtP9qLZl7F+NSpGn9IRXwjNS7GeZB66CZ6bYb+sMvwNPTOH3O8LL4FdS
5G2bl6Etm6TIN9Ss7ifdl0LLqmndH7s3hda1x9pre6fQwmoitVGfFNpSjWve
8XAK7aumdG/nrRRaU437VyX2HNS+W5ahrZumyN/ViOYnj6TQjmrgnvCtKbSx
ew8b8Xmb1opMcmvGWzN+VYr9uK3K0L5Xpthfs+aaPVhzrcXWbLMNa7a13AzI
LMjPOLCMNd8o6ylrQV2+78a14nduyPGL1XHs9zDvNRP1e/h96pnV1I7syL+x
qna8t5bjZinO1VObE5gX6LUrebxSK87XF+uPq3kt4Xg3vlNVrciAzKO8bn62
+YU5hpmQWYme3c/TX8v14Doczyjj+Dve+7OM77f+d9WKz+7F64dKaIg/ypjT
7tVZE53rzqmfsl5zrrkm1mS97FrZRM9TiTn6E8f/5fUFx1/y+l8Zv9Pf7d/4
axlryL0/NYNryzm5LutH56prxizRHu5aco24t+yacO04Z82K7fnOZdeMe8Gu
CdeSa9AsXU3h2nTNfZP1qmtxYRnX1nvqvXU/xevse0W+Xh0rcQ+8ftZIs11r
trXTmmQ2bE22VtkTGme9bq+wJrtXYY20VlvD3etQY1rbrclmzdZIa7U11yzZ
HmAtNmNwL94aZ/aghjHbUlOpbayhZtH2HGurmmll1stqKT3/YTmfMQswDzev
cU/9+zI0hXu/ahq1hjXGrFmNZ+2xpjbIfsRaawZySs531K72APcG7In2BmvQ
6qz3rU27es1rxZp37ZsHeux71bWjJ7r3YI+yV9pD3Zuwp9lbzTROy3mNWYeZ
h3vL9iizEDMT96LtEWYpZh7uNdvTzELMUMxW7TlmK/bc+tkPre/FdcJ/6Ges
lWbcZt3O2d/gkZzzSSU0tNfLvMfs6zPrRRkewWcV7Fl6B3tes+w/7YX2RJ9V
sAfZK3/l+PtKfP643BNvyH7cXmkm6N6/zxAY9Njj3SvRs9j71RTurdiT1Rpm
GGbxx1ZCa6oZ3IvR06gl7KHuhZq52VvtiW2yH7dX2hPbZr9trzTzc++vSSW8
gpmle/tqQrWhGZR7uWaYZlPuOZrvumZcO3PL8Op6dvO4RWV4bz24+eiSMvKc
yVWRny4tIy+bUhX55htl5EvjqyL/m1dGvjSmKvK7+WXkRWOrIv9TA3TK+YTa
QA3RMecRagszRp91MIM1ezTjdO9FTao2XVBGvjWuKvJCPaHPiqhJ9Ip6CrNp
PY5eQ4/oszJqEL2jf6N/qz1pfRZZE3vxZo47lLGn796+GfHuZey5u/dunrNt
Gc8cmO+4J7FdGc8c+OxBZ3jPMvb83fvvAu9dRkY6N0VNt7a7x+9ev5nojoz/
XEYvsAZbi83czd7NVJdVhyY039KzqhXd83fv38x05zI0qHst5l9qU++J98Z7
ZhbtPfPembmZhZuJm5V7j83KvWfeO6+pWa7PCPisgBn2vmVkVGZV3eADyrin
3lvnjFmt99R76z036/WZBZ9d6ArvX8Y98l45B8x6zQDN39R0ajszQ59VcE6Z
JTrnnHvmQ2b1ZoI++2Ema1Zo5uheu5mnWaQZpnvt5nlmm2pen306oRJaWE/p
3oQeUq9pP7fXd8z9TM/sXrkeUi/tMzs+u6Mn2b4MDdI3rye1iXtY7mXpqf5e
hmZxvV1fCS1jxupevhmt2auexr0mPZxeR0/uXpIaSa+uh+qd16/eSg/j3qoe
Xm+jJ3evVA+kV9dj+SyRHljvtSyvf+uPXsvM12cHzGzNgvVM7r2o6fRSen6f
FVITmgXoocxfzFv0Vnp2ny24phJeXg/XPa8/vZ0az2ct9HhqPzMCn71Sc5od
mDG4d6amNHvwGSefddLzbVPGHp97fXrGncrIEMznzNPMFvT4Pgs1pBLeX8/q
XqeZil7WPUH3BvWgu5Th+d2r16ObBeipfXbKDECvPT3X2+NyfdET++yAHlqv
vDjXl4a5XuqJfdbAjECvbGZhnmW+ZZahZ/XZAj2zXlaP6l6wHlnvqgZ3r1EP
rjbXw9+S673e/v8ibncZ
            "]], Polygon3DBox[CompressedData["
1:eJwt13WclWUWAODrgOOMCLv2GtgtomuhpIKgIqEoIAiitEpJx5CSkkpII90g
OcAwdAkCSouFEoICK4rugrruc/beP85v3vN85/3qfm/MzXWbV2mWlkgkPhEX
isPpicSIPInEVjhJXks+JiOReJ1NZK3Z5Ww0e419yFqxy9j9orCY4Vhzx97J
TCTuld8jprGmrDsbqV1be5y+zfUt4Pgu0YnNZ71YKfl34n22iY1nL8tzRAP2
lfP8Q/sasVI0ZF+z67ULilmu8TZbqG9ffR9hH7BabCxrxvKzb8V7bCMbx6rL
R6mrwyawluxSdp8oJKY71syxHq41W7ud9nJ1g9XluyiROKRmCNvAxrJq8j2i
M1vA+rAn5btFFvuI9WZPyO8Wd4mpztvEsW6usSE92T6amXyP8T43pSfv4fvM
5PuO974xPfl+j2Um7zPu95zY4Nw/uMY2x87Lxzp3Xe1JrI1jV7C5rCtby0ay
0mw/288OiHwXJBK3sXGsnnyyurbqroxvhb3CxrCm7BI2h3Vha9gHrAy7Tlwr
JmQkf7/27vNsPIv2EHV11f0qzxWN2DeO36B9o/hGDGbr1Y1RV1U+3nnqsyms
HbuK/VM8IGY61sKxns6Rpf2odlt1ZdUd8ZEPYzXYKPYWy9SnOyvJurBK7JS6
d1kFNoDVZn+wvqw8e5e9wn5ng9mLbCirz/I431LxDOvIyrP/qHtPXVU2nDWM
8aYmWzzLOrHn2Dl1/dVVZAPZq+xPNohVYe+zeiwtvjP2EhvGGrC8MV5YNTaC
NWLpbCB7gb2Xes8XsHdYmRij7EX2s2v0ZE/Fe2MvsV/YcrXPx/eeqou+C0Ux
1pQVj+9L3QJWlDVhxdgJtoSVZq3ZU6lr9HON51h/VoudZ4vVPclasTLsDFvG
Ksd8waok4kGME33Lsd6sWnwv6vqwp1kfVp39xnqxsqwXq8rOskX6P8FastLs
JzZcXU02mjWJ8atmAKvEBrE67L/qVvHG7JDv6Sbtm2N8iB5sqbqB6p6OMa5v
EdaOlWNH9e3KirMsVoGdZHvVdmOLWX9WVt5R3QOsBSvFvlbXhT0WY4U9zY6x
TuwR1ib1Tg+zoexlNpK9yS52vq9Ff7aajWDPy78U/VguG8YqyffFt8+WsAGs
nHxHenI+W8Z2OXahea29axTWjsWihGNfue6B+I5YNhvEnonnUleCdWYV2Y/q
erBSrCurzE6z1WrfYN96p7do3yraqbubvaGuiLp96r7i77JVbDirLP9c9MyT
vL+4z2flX4i+bCUbyirK2zjfnawRe4Ttcb4O7H7WnJVkX7K27C7WmD3K9rKD
+vdhOex9ViG11sSa82FGcr3p4N6ny+/QflndHalrxPoT69DEjORc1lHdGPlV
2qXUXaluvbqx7Gr2JLuKbWDj4hqsDLuabYz5iv2NlWeXsBw2ml3JSrAr2Lr4
DlgB9gzLx1awz9zDWpYn1kfWN9Zatk6eN+ZZ1o/tZKvlF4gvWW/2KVsjT4v1
lvWJ+UXkl5dzjYvZctcYwNLZY8yfxEI2il0hKcYuZ2tjvLG/swosP1vJjsS6
zLaxyay2fLHrDmP72DxWgy1iQ9leNje1F8hmY+Le2FL2GhspLmePs8vYmphL
1I2N52fZrK6aluxaVpPdyTapG8EvZZVYAZbL3lZ3DauR+n3j91jKRsd7YkvY
6/otZ+PifbJlrB4bJDJY8bTk3mpxrAEsHyvNdElksyHsYvYEM9QSS9l2B3PZ
X+wg6xnjkq2KFyy+8KcX+4TlyP9Ud4D1YJNi3WQvsBtib+d8c9mDrD57iH3L
JrIbWGVWkG1jk9kt7CV2C/uUTYnxyaqyW9lnbCq7jVVjt7Fd7CSbHvfGFrNm
MVZEQVaRXc+2qpvHHmIN2MPsOzafPcwapsZqzGtzYk1n9diD7FCsKZ53ONvP
5rOasb6Ji1hRlpctijWZZbKSaf9fOhJL2PjYh7Bn2bVsC5sQY5U9x65jH7PZ
sX9iddh97As2ixVir7JC7CA7xkax7WwqqyM/Leax79hK1lY+Q9zDarF72AF9
Z7J7WW12L/ucnWJzY05kOayNfL14ix3JTO4NY4/4o5jGDqpbpK6p/AcxlX3O
FrIm8j/i+2D/jnk89hHyraIVm86yWBH5xzEe2DTWiT0qn+8992Zb2ARWnq1m
M9mPbCNrzn4SS9gJtp51lq9SNyNPct8Z+88WbC2bzU6xzawlW8NmsZNsE3ub
bROt2QzWmT0WzxBzOZvJurDH5dtFWzaLdWVF5Z/FOsrmsZ6sZGqtjjV7ckZy
vcnyHlfIq2v3U1dTXYb8zpjHxZSM5Pvuqm5zevL/mOOZyX1l7C/PiJXsJ323
pcZl7FFjrzopI7lP6KR+S3pyD3pC+8H43mM+FR3YXH3f0bdEPKs+N7PX2f1s
u+9gJ2/P5rAerHj83uJ2Vp3dznara6HvZawKu5GtjrHFerHNacn/mWJtXMkm
s6NsFXuD/Svm2Xg2to5lyY+LCWw3m8Maxvx1UXL/v49/HMec6yMxQHuHumnq
qsQ3xW5ir7HCbId7WcgGsU/ZDPaiuu/FeLaLzWYN4h2ru4SVTa15MSeuYBPZ
4dQ4aqTuaMzv7BM2hb0q/y09uaeNve2W+NblC/QdqL2TTXfsBZbDJsU4Yrms
MftIPM7eYkXZcdfdqG4B+4VtZ+3VnIh5jO1JrT1xL+vUzWGn47qsFctlU9gx
tpq9GWOLLWPn2V7WNcYgW85+Z/tYt/ju2Qr2B9vPurMtLJudY3tYF7aJLWRn
2Q7WgW2I34T9nJb8P75dzBtsPjuT+k5jHtrMFrFf2U7Wkf0PfSUjTQ==
            "]], 
           Polygon3DBox[{{1730, 874, 970, 2260, 1574, 1575}, {1571, 1570, 
            2261, 980, 981, 2262}}]},
          Annotation[#, "Charting`Private`Tag$5835#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFmmW0VVUbhc+93O0691UU6e7uLkVAEDBQBCRFBVsEW2xsMMBOxG4F7O7u
ThAkRUBCAcH+njnmHuP7sXifs+7e+5xda805F40mnTB8ammhUFjGPxWol0Sh
8HRZofBzKhQaZYXCzJJCYV8+N4RnwPvAjeHL4P3g+XBb9n2A2oJ2Ff0H0t8c
ng0Pgy/nWNfDTYuFQgP6L4X3pn8zbSRcm1qf/kvgIfBftPFwY2pdjl1K287n
v/l8MLUJtRnbz4IPEPP3Kvr9tDr0n0//QPrfobWAV3Jib+s3wcvhd+GW8E/w
x3A7+Df4PbgVvAZ+E24KL4Hf0nfAS+GaHP9cuD99e5cXCqfDZ3B+02gXwzU4
x9psMx0eoOPxm1rSLuRzLfrPo+5J/xbaQXAd6lbaKLgutZxtJsOd1cexjoQP
5di1OEaN/FrsSEu0EtpOtCKtjDaLfStTr6QeT/uJfe/jOJfCVeGzdI1pv8EX
U4dy/G90H6mT+PwDPIftz4B/hR+Hz8y3fwJexe9YAQ/ivMv5nv/gf3UP2P9a
3RfqR2zXFt7EtbqQff/Oj6/ftSvtLz4fwuf68MHU1tRKtD/pX8a+w3UNqT/S
hsHVqEtpB8LVqYezTyO2P4w6vOh9h1H3pnXUfeQ3ns33NoS38huCv+9A21ri
WqBtgZ/kWE2oC9lmOTwCrkk9huM0YZtJ1GM4zjL676L/Q1obeEMFX/tt8O+0
1+nvTN1G/xfwALhI/Zy2J5yon9H66/upH9B6wwVqH45/P3w0vJC2D1yJ+gat
C7w9v4bfwt9zXt/rmYN3oZ5C/2J4rr6H+9FBzxLbTKb/K/gG+neH74OPgneD
74WPhPeAH4CPgTvAN8Nj4fbwTfAYuBt8h549uCt8u+4b3AO+C56o65H5vT5I
9xy+AR6l9wm+ER4N7wUvgE+AB8Lz4am6TvA8eAo8CH4MPhHuDt8JHwbvzz1Y
qfeU8xoCN9a5wy24/s1pDUv9LLTI+WWNF2yznuv2GtwA3gy/ANeGV8Oflvla
/Q6/BNeB18GvwPXgjfDzcC14FfwcXBNeAb+qcQr+tYLHyGrwYvipMr9fi+Bn
4Orwj/CzcA091/AqnSe8E/UTXWt4C/0rdY3gHak/0QbDFalLdJ/gjPotrafe
NbZfrOcGLqP+oHsMV6Au0j2GSzW2cQ2vhofDX+r+wX+y71e6r/Bf8Hp4KFyV
uo62L1yZ+gttP7gK9WvdD427bP+N7j38D7xC9xIOPad811x4AnwU/CN8B3wY
vBC+RXMJbQxcn7pRf4ObUdfQxsINqBtoh2qOoK6ljYMbUjfRJsLNqb/SJsEt
qP/QpsJdqH/QjoU7UP+jnQh3o/5JOw7uSP1NYwfckvov7QS4K3VIua/VZTxX
BX7zSXB3+kvhU+CecBE+C94DTvCZcB+dE/w5fI1+L/wlfJ3OCf4CvhbeAT4D
3h3O4GnwbnBZ5rmjN3w6330afDzP+FWZx/gZ+v7k3zCA31iDz1fCQ9m+BD4Z
7gFv15gFt6duox0Nt6Pek3lMPZ86mvYZfLWuE99xN3wctRP9j4g1hsGPwpN1
H/nbdRqXqBNpt/O3j9EFHakP038s24zmc08+V+O3HQIPhuvCTeDv+Psy9jsZ
PpL+jvQfDY+Cm8HnwafCu8Mj4NbwrtqXOofjj9P7lM/pF+mZoP826niNnfCT
8ClwP/gF+Ey4L/w8fIbGWvhF+CyNjfBL8Nm61/Dr8AUaR+E34AvhXvAT8Mnw
cPgj+AqNP/B78Az4APh9eCY8DP5Azwx8IPwhfDm8D/wmfJHeJ87/An0H5zeR
uoj+W+m/IvM5XZ75/KrmuuUmPp9K/40aj3NWX68yPxvT4Z3zuaxKyf/nM81l
FUs9H2e0Q4seC9tTr8+sH9pwjFvha+DbqBUyH1PHvi5/zq+ljin6e0/juavD
MWqX+vMU/raaen+ZtcY/JZ7Xp9L/M/UBPXfwUvhOPWPwcvhueEI+f92o9xv+
Hr4ZPgT+TucIT4M3wY/BJ8O/wI/ovOEN8Hy9r/Aa+EG93/Ba+CH4JHgd/LDe
I3gjvEDvfWatco/G13K/B5u5F0cUPX/p+jQttXaskM8hmkukY6rlmmpViXWV
WOdbkusuzfvV82u+ucTXXSwtNFDPt/ST3gl4tvRT+J2uketYHa9afh2v5u81
S73doDJryHmZtY22r170savnekv3PPJnoFL+jug9T7kubJRvs3OudXR+TfNt
RpT5vX4ks45SvzRb8/z8de5V8n20/dzMfXdQW2UeNyaV+bP69XwXcw2qa6Xf
WTG/Jrvk10q/Z2TRz7zO5Rr2OQJuXea/75Jrqfpco/c1p7HNwWzzNn2XaszW
2APP0hjFtl1KfQ4jy6w9HuLvHfL+9qXWbh1pjWndaN1LfU0Hl9lf3J/Zs3Qq
9XXukDyX/UMdlvy+7FS0Vu2U69UDkn/zjvSPStbnFeHR8PHwzkV7IH1XG9qj
mX+DrvO9mbX/ZdTGyXPo79QmyXP6Nmrz5Ll7uzxX8py7VToneX7/g7prsgeR
L6uU7E1WU+tmvh66t93zc26T/5a2+blrfL2HeniZr1OH/BqKO+fX7ZhkX1OJ
czlKGlr3ED4+2bPsCk9N9jWV4Q/hd3VsnvFvw7pQc8FHyeNkW/jT5LG0A/xB
8ljaBn47eextCb+VPCa3gN9JHj9bwT8k64de8OLk8bM3/AX8KdwJXqP3OZ9f
NM8sof92zvHj5PG5Hf2t4b4ar6ifJI/V7envn+y5EufSI1nzlMK94P313sM9
kzVSBXg87Qa+Yw/Ng8ma7V/dq2TtVKL5NFnj/UftnKzlCvT3S/Z6O8B9kz1v
Bg+BJ8ABD0r2vEV4cLLPLYfrJevehfCSZI+2G7+/ZbIO/JPaMFnXbUnWMdIz
jfTOwZfD9XSczM+Fnv9Lk71zffpnJnv2hvCMZM/eQHNXssevq3eBfbqy7wLN
Tck+ogP905PzgTrwFcn6vxl8drLHrwWfm5wb1IZvSfYjHeFbk71PJ3hOsh/p
rPkn+X2pBt8GP6jnVJol2Tt0g+9J9hTd4XuTvUMPjevJnqIr/CD8FNwTfgh+
Ws8S/Dj8Mrw7/AT8CtwHfhJ+Fd4DfgR+VtcZfhh+Rs8efGOyN2mnZyHZH7WF
r0z2O8015yZ7pTZwreRsYWOyN5Pv+JVaO1n/b6KeTLsArlq0b9Xccg61RrLf
XE+tmeypN1BPTM43qihLSdb2m6nVkrOLX6hVk/ONddTKybnHGmqV5DxkLXWf
ojXFPjzPrZK9xl/Uz5N95SD+/l6ylxwoXQrfoncTfg5+C+4Lz072jy2lGZO9
QGt4VrKXbAE/nzye9ys6l9BcKl97edibfU//68nj/J7wG3pX4QHwC/A7cH/4
u2Q/OBh+kf1a61zwI+/T/zW8l97TzL/tEnmfZN3bmfdlUbL26Am3S/bXS9l+
LHyIxuSidesQjefUNsm+/kf67wh7MGnaLvT3on85PCbZs2zTvAZfoX05/txk
HVtF3iJZt+8C35GsY6uWW5NIjx1ZtGabI93J93RNzgdWaE6BO8FLip4b9b3/
cb77JuchG+g/EB4N/waPTPZNW+ERyd5qi3KSZP+1GZ4Xzpt+hX+X1tczLM+X
nL1s1LMdzsI0FzdNvs6L4d3gfvBKuHdyprEKHpqcn2ySV4Bv1RzB+d2VOfu6
mzou2fdtZ5vDk/3af0Wfv65D46K317uwF999bmatJC11QrIvyzjmScneZwd4
ZOb39zy2H5H5vT4XPijzuzy9zPODnqXZ8ruZ3+Vp0ueZx4fTdO6Zx4fTyzx3
a358OHOuJ4+W+K69k/Oo9fzOs5J9XJH+Kcl+swyemOy//mGbw5Kv7d/w0cle
tZRtJiX7tX/pPyLZnxboH5/sc/+Q/kn2uX/CE5J961/wJfA58E7SmMk+NKRt
k/3pjvDkZG9bAT4WngKXwOck+9Dycnuv9fA8eRb6D9C4wfH7JOdXq+GX4Oc0
L7D908n+qD78YrLPagS/muytmsJPwY9rroFfTvZljeFnkv1aA3hp8hzdp9y+
W8/FFp61deE8S35QflParRK8LDlP2KPcfkpaTLncK8n+rgn9P4bzI3nP+5N1
Tg3462QP3hX+Jtmbd4O/SvbsXeCFyR6kR7nzNfmU7vCb8Gsaz+FV4edJvlX+
VdrjKq7bPLZ5CK5J/6PJvrhWuX2w9j2fbeYn++va9C9I9td1yq2rdY53Zs7R
5EfksZV5aX7RWKCMtAHbTCjaM1bO892Zmf2KMl75C+lq6eurch8hP9E2f6+l
V+5L1u3Vy+3XdY9O4u91k/PPRey7usxjSD355eQxcA39D4QzqZ/hAcnZ41p4
YHJWua7ojFo+8SDq7smZ50+5XqpH/zjqymQ/2L/c+YP0pvy+stZ28gzlztKl
L7aHsw/5pVty/ayM+L7MawzStA9mzjda5f2ay/4ocZ68Ijmz7VfuzFD++Lui
M1LNq7+Evei3+Ry0PNm39tW1zOzhlI3XDmfE2rdKnlHrWv8R1kM1pYHDWZv0
wAfh9Q/pgffD6x/SAE3Dua3mi0/DOan0z+fhvFWap2E4I9Y4/0k4V5W+ehGu
mllfNQtnxJoXXoKrZdZmjcJZs+ap1uF7qfvVPJyha6y+JZw5an7/LJzPSne9
Hl4vkVZ8LbxuIR34anitQjqwVTgf15jQJpzl6dl4N7wOJD3wQzjPlaZqG871
9JzcGs5bpb1vC+eP0szzw2s88lA3hdcM5HHmhjNH6efG4Txdc3SfcB6nMfAF
uEpmPXlPOCeVVu8ezgE13z0H75JZQ94ezi6lw3uH80HNQe3DmaPGvWfhnTNr
sK7hHE3zqby8tKg06VP075jZBz0N75TZB3UMZ5Sai5+BK2bWZgvC61XyhneG
81l5hJfh6pk1+UPhvFU6f7dw/qjxv104A9X7dVc455U3uT+cI8uz3BvOYeUj
7g7nwvIp94UzZXmNnuGcVNrmebhyZk3+cDj/le94NLwWJc/bK5yNSs/0COen
0hKPhNfq5H8fDOfF8ilPwpHZM74SXhuTp3gvvD4nHTggnJ9qjusbzj01Jw7M
99XctDH87mldaWvYq2itcFM4C9MYWDe81iIfNDR/LzSXrQzrAGnFffNz1Hw9
KpxpSmsdFM46pcdG5jmm9MkGuFLmNbvV4dxBGrJ/OLfVHF0vvB6jcXJteH1F
+nNI/sxIk+ydP2/SJA3CazzSS2cmZw4aK9aHNY2y3MH5cyLN8FNYs0pjD8qf
K83dP4ezD+nwfuHsWLpir/w5lJZYEdY90szLw/pGOnlMONPUmL9f/r5Iq4wN
56eaH/cMZ9nSYC3Da28at0cXnf2N1XgezpqlQ8aH81bNcQeHM1bNa2+F13Tl
fd4Mr+PKA74TXj+WL1gcXvuRz1oa1l7yDm+H15XlEQ4sOnMZQW0RXvOTtlwS
XkOSLxsXznk15+6fj4HSP8PDGbE0trJr+dzJOmY4U5Ym/z2clWiu+Sq8piUv
uS2cbUlvHJC/m9JRw8KZu7TWlKL971TqF+E1M3nSLmENLS29LKwj5XGUo9bN
r2G3cEYv7d0hvP4hDflEeK1XGct14bVq5ULXh9enlQtdE157lq+/OrwmLa93
VXh9S15yYXgdUf70+HDeqkzmiHBOLQ12bXj9W5nSGeE8Vzrnu/C6oDzyleH1
M3nMy8JrYPKSs8PrXvKqV4TXzORJHwtneZr364T9mHzc4eGsXPpwVnhdTf73
uPC6iDKfw8L5u/TkseF1FOU/h4YzemnICeHsXnppUjiLlxY9Mpy5S/vNDK/P
yed+H17vlMc/JrzmIf02PZwjS3OeG86XlZ90Cq8nye+cE86RlS9NDOf4DfL7
rvxMa/tHhdcGpHUXhddQlQ9MDefayrsuCGfZ0hKnh3Nw6c8p4bxb2de0cDYt
LXpheK1dWuWb8NqncoxTw3m6fOul4TVF+fevw+uyyj1OCK+xKeM6MbzGoFzr
pPBavjK3G8Pr1soV54TXApVz3hz+fw/Kji4Or18qS5wRXrNUPnBKeD1POdtp
4bVwaeYvw2t+ylg6h9fV5PvODufyyusmh9fDlONdFP4/BNJ+Z4bXDKS3Hw+v
T0gfnhXO9+XNzw/n+NL8/wMR9BYX
            "]], Polygon3DBox[CompressedData["
1:eJwtmnXAFUUbxd/73ll37rUAUaS7G5FSQFpApaRBBWwURGzsVgwsDCwEG/Wz
u7u7AFERURCbEKzv/Dzzx8L8dvbuuzHzPOc5sw2nzhw5o7KiomKJ/gn6v0Ve
UdGuUFHxjuDackXFk9qGqH2e9p2ivkHa9lb7R+27S30NxM3EL4svF/cWDxCv
Et8qriduIn5RPE9cX9xU/JL4MvEe4oHib8W3ibuKe4q/EN8i/kvcW5yJrxP3
0nZVVlFxsPYdoL7N2nZXu1L9V6uvS+Ll4oXiiqhrFm8jvlG8JZ2/KL5G3Enc
Tfyp+CbOL+4v/ka8WPyUtqFqn699p6lvV227qb1M+25WX6XOv5e4Wvp7f6T+
gni+uKG4ufgV8RXiRuIW4lfFV4qf1zZC7Uu173yeRe7zrdO+O9W3j3hf8e/i
u8WjtN2p+79S+65W31jxVJ6V+FbxMG2j1V6vfUvUt1HcVfxX0X9/gHio+Af1
3yEuRr/PHdLzbqz+luLXxFfx7rWdpr93rPYdx7m1TVT7T/Xfq76g3+8jri5e
JO6m/l7iFYkL0X+vanpei9R/s7iLzvmJeIO4C+crevz8mX4f0vhrLm4rfju9
r5bi9uJ303hYzzsRbyl6PD2nbbj6LtG+8xib2tqo/VYaH7+LO4s3Fz0em4pb
i99M76td6v9QvEDcMT2/T9L4uU58tbidrv/9st8B76K1+B3xAvE14vbiD8TX
iK8StxG/y/PV9q/+dnft24WxUKqoeEHts3T+w9V3rfbNF7fV8e+VfQ+niWtl
vreWOv5F8dk6fjrjV/ye+DLxMeKbdfwNnFvHf8j9qP9N8Vz1H8X9iN8VzxPP
FrcXvyW+SDxLfKDeVzPFgpv1+7fFt+h8N6l/V/HH4oXiG8WdxR+J2+r3b4gv
1O9n8r7Ez4vPFB/G+Bc/Lj5RPE08Qeevq/PP1+/vF48W1xJfLv4f80N8mY4f
qePXc//av1m8s465VO2z9fdPgdV+Rv27aKurY8dq3wj1navtVLVrqv9Z4pP+
/mPiE3TMVPEDxCi1T9K+g3RsY/U/qfYc7TtIfQ8Sk9Q+WfsOV38j9T+h9kna
d6D6HtLWJ/gaDiW2qf8ptU/WvoPVd4/+bkdda1VtA4P/xnT1lzL/7WY6/jnx
Geo7VLyr+EPxleLjy44Bp4trZ44NV+aODc3Fb/C+0nj/SMdfLx4jnsT8Ft8n
flrbXmpfwN9QX22df4naR2jfZPXtVHKsmCYeJ35YW9/gZ3aEjn9E3C94zM0Q
V9Px16k9Qfv2VV8N8SLxgeLx4g5p/n4svkHcWf0fiK8QH8f7Eb8vvlx8rLiW
+G7xdPGkst/RMLUvLvjd7az+O9U+TPsmqK+m+C7ehXhi2e98H7UvKngstFH/
62pfoH0z1LeDeIF4onh02c+kU/A74FldlDuXNdDzfFl9cxkz4vril8hP+v2D
4mP0myni1uLXiM3iI7lWjc+i3u35Ov4F8YX6/Tnqryd+UdxKx79K7NHxR8Da
tlN7T+3rq2Prqf8BtWdr3wHquyT3u2qk378qvjz3s2gqfq3sGNuR2FBw7L04
dy5qqP5X1Fdd57tePEnHjBFfkTv2NVP/68wN9d8vPlr9+5M71T9P3EL9b5JP
osfqheLfyF/aevDudMzgkvfTX03bXGKYfr9MfVMyx5P3xMvFUzPHj4/EX4kP
yRyPPhR/KT44c7x5R7yU3J05Xrwl/ky8X+bn+4b4U/HkzM+vjriT+HldUx3x
2+LPxftnft8fiFcwl8VHiz8Wf83czDzeXsk9Hsdnjq8v5x6P4zLHp1dzz78J
mePpS7nj6djM8/Nz8WrmhvhMYnDueDky83x/Nnd8HZE5fjyTOx4Ozxwvns49
Podljn9P5h5P+2SOR1zzpcExmXvZSVsrtZ/Uvtpl66ddxC+I65YdM4mdx/AM
1HdEdG7mnfHubueZMRa0rw/zKXp8DtK+zeqbLu6kd3kF70Tttjqmr9rvq79h
yn/9uBZxI/FE8VHif8U9ys4J5IZGOseU6DHJ2Nyi/q7qm6F9u6rvbO07Uu0X
c9/bGP3mEPUfHh1/Woo3iW/V/y11/JnatzhzPu6h9hs6X33mn7iP+D1xg7Jz
BLliNmOG+Js7l76u/nrq+0znX0+81jG1xHfo/7Y6/5/ad7vaTaLz9b46foP6
D4l+FnXUt7FsDbhtsGZEG3J9rfT7LeJFao/Tvhlq/61juunYT8QriVeZ411V
3qH4EfWfW3aMIlbVUP9w4oW2NUVrrB3Vd1/u/NMnczy8N3e+2SNzvDtV243B
Y/yr3M/w9OAcwrPlnrg3cs69zFXN2XaV1ohoxbvSu+qgbYnaS3Ln496Z4+v/
cuevvpnzwyO59cjgzPHp9tzxsEfmeH9b7vjVPXP+QHMSX7pl1qL38M7Ie8wB
tEju+N0hc/64KXf875g5Pj+cWy/smTk+PZT73gaJ9ytbz5C/OmWOb8RH4l0T
8UjxvNzxvrF4RNm/mRV8TZzr0dx6aUjmeL6zuK74GXJO2fOttvgp8Vzym7iO
+GlyDLFbXJ1zic8mHxHDxc+iMcvWyP8UXUOgnato21Hth9V/DvmIOSh+jBqC
eC2uKX6cHC3+VPwN+S1z/q8mriF+lJpL/K34N/GJ6j9LvEz8PblZfKJ4lfhX
8QnEJ/HX4p/Ex4pPK3vM/Eg+yzyWVop/Fh8nPl38pXgd+UF8iniF+AfxLPHJ
4qXi75jL4hPEy8VrxDPFJ4m/EK8VHyWek/LHfWp3rnRsGq6titoXaN+v6ttX
xx+m4zfr/rqIRzKmxZvEncVrtS0OfiY8mwHBsaGFzrFQ57heW0O1G2i7jjEa
zez/PcVG9GU9bVerfXfm+d0+jX/0GbGpTZovXBfXxxwn/jBvmD/ESGLETeLG
lZ5DN6TzMZfYNyp4fD2k8w3V/q/0958XP0N8Ea8qO8ZwHs5H7H2AOa/+Aepf
UXY+eVo8SvwN41HHnFXwNY2MzsmXZNa/5Gqe4aniPwp+to/p9w+rvZf2fa2+
x9Fw4r3FK8VVSr72u1K83Uu/+Yv4xTFqT42OH8TIQ6OvsbXadTNf+2RxffG1
4l+IZ/r/H/KBtnPU/qlsnYtGGMH16u9v5H0SQ9L751prpPv5EY2i39UWj42O
2WuLznnE8osy66vq2i7OHOupDzie363T8RuLrgH76t7uIEarvbv6PlffpOh6
gWveT+0NOrZQ6Wuao2O6B48NxkhR/HMab6vIyTp+25KfxR0pHzTWviaVvia0
34h0/irp3m/Vb0OlnykaYWy631My3yvn5Hmdlf4WeYn8VKHfnJvGL7mFvzFN
7VG6n0PFf+i8u6b4u1i8m479jHhOzBf3Ei9Dq4mHi7/U8c3EPcUjxV+LW/C+
xVPEv4g7lO0nTBP/xpgs288YIl4qblp2TYpW/Sy4Vu0sHiz+XNykbH9klHil
uKV4d/EIcpO4uXhKbu0YdH29y87R5OpKcU/xVPHx4ky8h3iCeKb4H/2+e9k1
HN7OxuDa7i1tCzJ7BvPVN0nbLJ6f9u2mvr3FU8W/6viOjFfx0eKC+ncXTxOf
IN5K3Ed8oPhEcS7uW3Z9Ri0Yxf3EQ8UHiH/W+dqLB4v3F/8kble2fzJBvFbc
VtxfPF68Rtym7PqVWIWmOSi6hqWWRXPvSW6Ojl3U2NTaaDK0GZoJ7YTm+77o
nERuIj/fo3Y/Xd9y9f2d258qJX/ifvG94v7q/6JszcMYI2eRu4ihH6k9PXNs
vVN8m7ineGmKN8zNmsQ7tKT6K9Wuo20ctbm4vo5/Tn/v0rJrGGrt74Jrm37i
ceLvxa3RB5njB/fDfVEjnZ80ytDoeuFttadp3/dlx+zTM88B5gJ6/CW1J2rf
avW9Jn5ZPEn8XZqPlxcc85kv/+T2G8upHt6UOxf/XbS/9ijvKLimPkp9Mdq/
ahjsf5Wi6+dGwX4b73yn4DHNWCirfzK5PdjvZAzsGDznGBvMoZrBHh1zizHe
Eq+g4LHPGGwRPOcYm4zZ5sFjlrHMnKwRPGeZq2h2tOfqYC1fM7o+3VP8uLh2
dP2HJ4s3Wy+6XqQmpjZmTOK14bkxVneMzp/k0cfKHqNVguc8Y7d+dL1IDU4t
zjvcPnjO827rRNeneKB4oXXFFxbsMeA1NIj2J/Dc8KdqRdfXg8VPiLPoZ8Mz
wk/dKtqfrBXsD+fRtUrtYP+3l/hZ8anB+ZEY0jZYIxBbekbn11OCxzt+cDHl
/InRNRG1ETljTHSMaRccU4k93aPz5bHB+aJbdP6m3ie+7iZ+VHx8cHwdQAwM
jlHTeZ/R+Rq/h/k4kBgaXCMdqf6G0XMdTxf/ZjvxEQV7EHgRg7R1CY5hM4m1
4q7BMWuWeNtor4Kan9p/h+ixiyeDNzOYaw6OqbNz+7PkInLSkGjNzfPcEKzF
t4nW4q2C/eCto8cmYxQ/eSj3HByTT8odQ3cOjvHEVp4nv78yc+3JmOb3l2Wu
xfAQ9g/2CPEWxkfnat4B8QMPA28CzY52x8PaL9hDxNualzn2VCZ/D89icrCH
iZeBRzwzWDP95x1njp3EAPQY9eiN+n9hwfGUv0/sIgeTi/F4xgZ7qng/eCbj
gj1cvBR0DVqB54fXOChaC6AJiJd4uIcG51y8XTzcg4JzMt4uHuiRwTEabxQN
iDdLzYE2xIPFe6OGoZbBQ50RHLPxVvF8xgd7xnhB5Dt0LTli/+h6Ge2KJj0s
2mPGe8ODw3vuEa33jguO52jAc4JjKNqQOcRcYs6gPalZmwTnNGpZcm7T4JxH
LqaGJzYSI6ntq0R7nXiieKPbi+cU7KHiZ1aN9g7xRPFG8QiaBWsOvINq0V4i
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
alBq0Z9zx2I0AFrg/96UUOo=
            "]], Polygon3DBox[CompressedData["
1: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
26m5TtvLtd3O35D/7pobsTKx/oo32U5WlZWPcaCuaYxP/hB7JNZVlos1j3WQ
XRzjINZnNjKugz0c4481y0rGeIz1/8eeS7wm/yVPss+K/da36t7Lm8xpMbeV
cx/j+TiR27WfrY8X2TZ1r6s7qaahtmVz2r7P/mZnxGJ1E/kEkUvbjLYvsBPy
t9TtVlNN2wqxhoq3Y9yy6qyi/Ij+DrMKYjjrEvMay9ZPI3YlG8t+YD/Kq8Q+
gPViB9hueTHRn7Vi37O98hJiIGvLvmN75MXFANaGNXKt45zjofju2ZesIRvL
lsc7YV/kS/5HHJOV/O8R/4Mciv+P9PddzhiIsVCLNVY3Xt2KuGdtv9K2YDp5
Hl0yybONZ5xmR9QUEn3UdWMZdlReRJwf8y7LZj/IC4u+rHvMf+nk/5jumWQP
NDVnTH6TN3kX8U4qO1YkneyNemSSPW7sdY+xn9VVF6P014ftZ7vkRUU/1jq+
LXZcXiPWeNaXHWXH5FXFJaxnvmQv/6u8jCgrGjvXYXbI7/JimLrO8f2yn+TV
xKWsd6wL6WQP3y2T/H8W/6cVTSf78J7savk1sR9KJ/v/3plkjxZ7tUPsoL7K
xf5Df53inYsXYz12/0VZwdhzpZNx3DWT/N8Q/z/Ee/s+53rjuh937B89hgnD

            "]], 
           Polygon3DBox[{{2072, 1297, 1455, 2377, 1912, 1913}, {2138, 1428, 
            1067, 1068, 1429, 2139}, {1908, 1907, 2371, 1405, 1406, 2372}, {
            2320, 1321, 1122, 1121, 1438, 2145}}]},
          Annotation[#, "Charting`Private`Tag$5835#2"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[
           0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
          "Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsv3lEYB/Dj9dZd2SQkxB/AUJFIg9QlIoiIkUHYdHgZdTB1qMTe/gXs
knbuwCgk7vdLxIK2CYui1c/TSH7ffM45OXnOeU5+9RNTw7m8lNJHeZIY38uF
LL1KqZLfWcc1NvKYbbzhAB85ypKClN6zmjXywbiZc+ziFw5zkeP8xmmuRA1e
M98FNvkgt3GXTEpb/M3tWOdO7Odu3Jl7/MN9/uUBn3mYomBKR9EXj5nhSSzz
lFmeRW/8EXPnn0d9uZN599rgLJeZ41eOcYFD/MwOfmIT38iMcRUnWcSR6ME7
9fOKrTxkA1dZG+fZdxm9SEXsl19xhl5ec5DlHGAZ+1jKXpawh8XsZhE7Wch3
VDq101GplVm+zfx/ntRCX1o3+fnyH/wDAY9GUw==
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rsvHXAUB/AfrlQ8aqg3VzGKgVEMjCpBYhEDg0FCPP4AJg0DgxiJ2Dxb
bVlI05mImUhEpKnH5XqLmEQ/N4ZvPudM5+T8fuXdQ22DSSGEMfmYHMInTTqf
mf0hhApGWcMqNrCOrWxiFzs4wF72yYh6jJOc5iznucI1bvEPd7jHAzanhfDK
XLPPmMmILERCONcv8oJLjHGZl1zhFVcZ5zde8zvX5Eb9g7f8yTv+4j3X+cAN
PiZ2Tg3hjXnmPjGLqXJux1P9Ife5y23+5mZiJpc5xxlOcYJfOSrD6h72s52d
bGQLa1nPSlbzizu8JG5vbjkzmJR4j5QQyvRP/MwHlvKOUd6whHEWM8YLKVKf
sZD/WMC/zOcJ83jMXB4xh+PuEJLf/8N/DCJKEw==
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1457, 1778, 773, 1456, 2378, 1676, 1458, 2379, 1677, 1459, 
        2380, 1678, 1460, 2381, 1679, 1461, 2382, 1680, 1462, 2383, 1681, 
        1463, 2159, 2477, 1464, 2384, 1682, 1465, 2385, 1683, 1466, 2386, 
        1684, 1467, 2387, 1685, 1468, 2388, 1686, 1469, 965, 1687, 1779}], 
       Line3DBox[{1471, 2160, 2478, 1470, 2389, 1688, 1472, 2390, 1689, 1473, 
        2391, 1690, 1474, 2392, 1691, 1475, 2393, 1692, 1476, 2394, 1693, 
        1477, 2161, 2479, 1478, 2162, 2480, 1479, 2395, 1694, 1480, 2396, 
        1695, 1481, 2397, 1696, 1482, 2398, 1697, 1483, 2399, 1698, 1484}], 
       Line3DBox[{1486, 2163, 2481, 1485, 2164, 2482, 1487, 2400, 1699, 1488, 
        2401, 1700, 1489, 2402, 1701, 1490, 2403, 1702, 1491, 2404, 1703, 
        1492, 2165, 2483, 1493, 2166, 2484, 1494, 2167, 2485, 1495, 2405, 
        1704, 1496, 2406, 1705, 1497, 2407, 1706, 1498, 2408, 1707, 1499}], 
       Line3DBox[{1501, 2168, 2486, 1500, 2169, 2487, 1502, 2170, 2488, 1503, 
        2409, 1708, 1504, 2410, 1709, 1505, 2411, 1710, 1506, 2412, 1711, 
        1507, 2171, 2489, 1508, 2172, 2490, 1509, 2173, 2491, 1510, 2174, 
        2492, 1511, 2413, 1712, 1512, 2414, 1713, 1513, 2415, 1714, 1514}], 
       Line3DBox[{1516, 2175, 2493, 1515, 2176, 2494, 1517, 2177, 2495, 1518, 
        2178, 2496, 1519, 2416, 1715, 1520, 2417, 1716, 1521, 2418, 1717, 
        1522, 2179, 2497, 1523, 2180, 2498, 1524, 2181, 2499, 1525, 2182, 
        2500, 1526, 2183, 2501, 1527, 2419, 1718, 1528, 2420, 1719, 1529}], 
       Line3DBox[{1531, 2184, 2502, 1530, 2185, 2503, 1532, 2186, 2504, 1533, 
        2187, 2505, 1534, 2188, 2506, 1535, 2421, 1720, 1536, 2422, 1721, 
        1537, 2189, 2507, 1538, 2190, 2508, 1539, 2191, 2509, 1540, 2192, 
        2510, 1541, 2193, 2511, 1542, 2194, 2512, 1543, 2423, 1722, 1544}], 
       Line3DBox[{1546, 2195, 2513, 1545, 2196, 2514, 1547, 2197, 2515, 1548, 
        2198, 2516, 1549, 2199, 2517, 1550, 2200, 2518, 1551, 2578, 1780, 
        1781, 1552, 1782, 1783, 2579, 1553, 2201, 2519, 1554, 2202, 2520, 
        1555, 2203, 2521, 1556, 2204, 2522, 1557, 2205, 2523, 1558, 2206, 
        2524, 1559}], 
       Line3DBox[{1563, 2424, 1723, 1561, 2425, 1724, 1565, 2426, 1725, 1567, 
        2427, 1726, 1569, 2428, 1727, 1571, 2262, 2429, 1728, 1800, 2259, 
        2430, 1798, 1802, 1729, 1790, 1784, 1805, 2585, 1730, 1575, 2431, 
        1731, 1577, 2432, 1732, 1579, 2433, 1733, 1581, 2434, 1734, 1583, 
        2435, 1735, 1585, 2436, 1736, 1587}], 
       Line3DBox[{1586, 2537, 2217, 1584, 2536, 2216, 1582, 2535, 2215, 1580, 
        2534, 2214, 1578, 2533, 2213, 1576, 2532, 2212, 1574, 2260, 2531, 
        1792, 1794, 1793, 1573, 1795, 1796, 1791, 1801, 2582, 2263, 1572, 
        1799, 2530, 2261, 1570, 2529, 2211, 1568, 2528, 2210, 1566, 2527, 
        2209, 1564, 2526, 2208, 1560, 2525, 2207, 1562}], 
       Line3DBox[{1589, 2218, 2538, 1588, 2437, 1737, 1590, 2438, 1738, 1591, 
        2439, 1739, 1592, 2440, 1740, 1593, 2441, 1741, 1594, 2583, 1797, 
        1742, 1804, 1803, 2219, 2584, 1595, 2442, 1743, 1596, 2443, 1744, 
        1597, 2444, 1745, 1598, 2445, 1746, 1599, 2446, 1747, 1600, 2447, 
        1748, 1601}], 
       Line3DBox[{1603, 2220, 2539, 1602, 2221, 2540, 1604, 2448, 1749, 1605, 
        2449, 1750, 1606, 2450, 1751, 1607, 2451, 1752, 1608, 2452, 1753, 
        1609, 2222, 2541, 1610, 2223, 2542, 1611, 2453, 1754, 1612, 2454, 
        1755, 1613, 2455, 1756, 1614, 2456, 1757, 1615, 2457, 1758, 1616}], 
       Line3DBox[{1618, 2224, 2543, 1617, 2225, 2544, 1619, 2226, 2545, 1620, 
        2458, 1759, 1621, 2459, 1760, 1622, 2460, 1761, 1623, 2461, 1762, 
        1624, 2227, 2546, 1625, 2228, 2547, 1626, 2229, 2548, 1627, 2462, 
        1763, 1628, 2463, 1764, 1629, 2464, 1765, 1630, 2465, 1766, 1631}], 
       Line3DBox[{1633, 2230, 2549, 1632, 2231, 2550, 1634, 2232, 2551, 1635, 
        2233, 2552, 1636, 2466, 1767, 1637, 2467, 1768, 1638, 2468, 1769, 
        1639, 2234, 2553, 1640, 2235, 2554, 1641, 2236, 2555, 1642, 2237, 
        2556, 1643, 2469, 1770, 1644, 2470, 1771, 1645, 2471, 1772, 1646}], 
       Line3DBox[{1648, 2238, 2557, 1647, 2239, 2558, 1649, 2240, 2559, 1650, 
        2241, 2560, 1651, 2242, 2561, 1652, 2472, 1773, 1653, 2473, 1774, 
        1654, 2243, 2562, 1655, 2244, 2563, 1656, 2245, 2564, 1657, 2246, 
        2565, 1658, 2247, 2566, 1659, 2474, 1775, 1660, 2475, 1776, 1661}], 
       Line3DBox[{1675, 1789, 1788, 2581, 1674, 2577, 2258, 1673, 2576, 2257, 
        1672, 2575, 2256, 1671, 2574, 2255, 1670, 2573, 2254, 1669, 2572, 
        2253, 1668, 1777, 2476, 1667, 2571, 2252, 1666, 2570, 2251, 1665, 
        2569, 2250, 1664, 2568, 2249, 1663, 2567, 2248, 1662, 2580, 1786, 
        1785, 1787}], 
       Line3DBox[{1807, 2120, 2264, 2586, 1806, 2692, 2023, 1808, 2693, 2024, 
        1809, 2694, 2025, 1810, 2695, 2026, 1811, 2696, 2027, 1812, 2697, 
        2028, 1813, 2698, 2265, 2587, 1814, 2699, 2029, 1815, 2700, 2030, 
        1816, 2701, 2031, 1817, 2702, 2032, 1818, 2703, 2033, 1819, 2370, 
        2796, 2034, 2121}], 
       Line3DBox[{1821, 2266, 2588, 1820, 2267, 2589, 1822, 2704, 2035, 1823, 
        2705, 2036, 1824, 2706, 2037, 1825, 2707, 2038, 1826, 2708, 2039, 
        1827, 2709, 2268, 2590, 1828, 2269, 2591, 1829, 2710, 2040, 1830, 
        2711, 2041, 1831, 2712, 2042, 1832, 2713, 2043, 1833, 2714, 2044, 
        1834}], Line3DBox[{1836, 2270, 2592, 1835, 2271, 2593, 1837, 2272, 
        2594, 1838, 2715, 2045, 1839, 2716, 2046, 1840, 2717, 2047, 1841, 
        2718, 2048, 1842, 2719, 2273, 2595, 1843, 2274, 2596, 1844, 2275, 
        2597, 1845, 2720, 2049, 1846, 2721, 2050, 1847, 2722, 2051, 1848, 
        2723, 2052, 1849}], 
       Line3DBox[{1851, 2276, 2598, 1850, 2277, 2599, 1852, 2278, 2600, 1853, 
        2279, 2601, 1854, 2724, 2053, 1855, 2725, 2054, 1856, 2726, 2055, 
        1857, 2727, 2280, 2602, 1858, 2281, 2603, 1859, 2282, 2604, 1860, 
        2283, 2605, 1861, 2728, 2056, 1862, 2729, 2057, 1863, 2730, 2058, 
        1864}], Line3DBox[{1866, 2284, 2606, 1865, 2285, 2607, 1867, 2286, 
        2608, 1868, 2287, 2609, 1869, 2288, 2610, 1870, 2731, 2059, 1871, 
        2732, 2060, 1872, 2733, 2289, 2611, 1873, 2290, 2612, 1874, 2291, 
        2613, 1875, 2292, 2614, 1876, 2293, 2615, 1877, 2734, 2061, 1878, 
        2735, 2062, 1879}], 
       Line3DBox[{1881, 2294, 2616, 1880, 2295, 2617, 1882, 2296, 2618, 1883, 
        2297, 2619, 1884, 2298, 2620, 1885, 2299, 2621, 1886, 2736, 2133, 
        2134, 1887, 2737, 2138, 2139, 2622, 1888, 2300, 2623, 1889, 2301, 
        2624, 1890, 2302, 2625, 1891, 2303, 2626, 1892, 2304, 2627, 1893, 
        2738, 2063, 1894}], 
       Line3DBox[{1898, 2739, 2064, 1896, 2740, 2065, 1900, 2741, 2066, 1902, 
        2742, 2067, 1904, 2743, 2068, 1906, 2744, 2069, 1908, 2372, 2801, 
        2128, 2130, 2070, 2132, 2375, 2802, 2131, 2129, 2798, 2071, 1911, 
        2157, 2158, 2809, 2072, 1913, 2745, 2073, 1915, 2746, 2074, 1917, 
        2747, 2075, 1919, 2748, 2076, 1921, 2749, 2077, 1923}], 
       Line3DBox[{1922, 2639, 2315, 1920, 2638, 2314, 1918, 2637, 2313, 1916, 
        2636, 2312, 1914, 2635, 2311, 1912, 2377, 2808, 2156, 1910, 2634, 
        2122, 2140, 2142, 2141, 2800, 1909, 2136, 2137, 2135, 2797, 2371, 
        1907, 2633, 2310, 1905, 2632, 2309, 1903, 2631, 2308, 1901, 2630, 
        2307, 1899, 2629, 2306, 1895, 2628, 2305, 1897}], 
       Line3DBox[{1925, 2316, 2640, 1924, 2750, 2078, 1926, 2751, 2079, 1927, 
        2752, 2080, 1928, 2753, 2081, 1929, 2376, 2804, 2082, 2149, 2373, 
        2803, 2144, 2147, 2083, 2127, 2754, 2123, 2146, 2152, 2317, 2806, 
        2151, 2150, 2155, 2805, 2084, 1930, 2755, 2085, 1931, 2756, 2086, 
        1932, 2757, 2087, 1933, 2758, 2088, 1934, 2759, 2089, 1935}], 
       Line3DBox[{1937, 2318, 2641, 1936, 2319, 2642, 1938, 2760, 2090, 1939, 
        2761, 2091, 1940, 2762, 2092, 1941, 2763, 2093, 1942, 2764, 2143, 
        2094, 2148, 2765, 2145, 2320, 2807, 2154, 2153, 2321, 2643, 1943, 
        2766, 2095, 1944, 2767, 2096, 1945, 2768, 2097, 1946, 2769, 2098, 
        1947, 2770, 2099, 1948}], 
       Line3DBox[{1950, 2322, 2644, 1949, 2323, 2645, 1951, 2324, 2646, 1952, 
        2771, 2100, 1953, 2772, 2101, 1954, 2773, 2102, 1955, 2774, 2103, 
        1956, 2775, 2325, 2647, 1957, 2326, 2648, 1958, 2327, 2649, 1959, 
        2776, 2104, 1960, 2777, 2105, 1961, 2778, 2106, 1962, 2779, 2107, 
        1963}], Line3DBox[{1965, 2328, 2650, 1964, 2329, 2651, 1966, 2330, 
        2652, 1967, 2331, 2653, 1968, 2780, 2108, 1969, 2781, 2109, 1970, 
        2782, 2110, 1971, 2783, 2332, 2654, 1972, 2333, 2655, 1973, 2334, 
        2656, 1974, 2335, 2657, 1975, 2784, 2111, 1976, 2785, 2112, 1977, 
        2786, 2113, 1978}], 
       Line3DBox[{1980, 2336, 2658, 1979, 2337, 2659, 1981, 2338, 2660, 1982, 
        2339, 2661, 1983, 2340, 2662, 1984, 2787, 2114, 1985, 2788, 2115, 
        1986, 2789, 2341, 2663, 1987, 2342, 2664, 1988, 2343, 2665, 1989, 
        2344, 2666, 1990, 2345, 2667, 1991, 2790, 2116, 1992, 2791, 2117, 
        1993}], Line3DBox[{1995, 2346, 2668, 1994, 2347, 2669, 1996, 2348, 
        2670, 1997, 2349, 2671, 1998, 2350, 2672, 1999, 2351, 2673, 2000, 
        2792, 2118, 2001, 2793, 2352, 2674, 2002, 2353, 2675, 2003, 2354, 
        2676, 2004, 2355, 2677, 2005, 2356, 2678, 2006, 2357, 2679, 2007, 
        2794, 2119, 2008}], 
       Line3DBox[{2022, 2126, 2799, 2374, 2021, 2691, 2369, 2020, 2690, 2368, 
        2019, 2689, 2367, 2018, 2688, 2366, 2017, 2687, 2365, 2016, 2686, 
        2364, 2795, 2015, 2685, 2363, 2014, 2684, 2362, 2013, 2683, 2361, 
        2012, 2682, 2360, 2011, 2681, 2359, 2010, 2680, 2358, 2009, 1410, 
        2124, 2125}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{568, 774, 2378, 569, 787, 2389, 595, 2482, 801, 609, 2487, 
        815, 623, 2494, 829, 637, 2503, 843, 651, 2514, 857, 665, 2526, 870, 
        2425, 678, 882, 2437, 691, 2540, 895, 705, 2544, 909, 719, 2550, 923, 
        733, 2558, 937, 747, 2567, 951, 761}], 
       Line3DBox[{570, 775, 2379, 571, 788, 2390, 596, 802, 2400, 610, 2488, 
        816, 624, 2495, 830, 638, 2504, 844, 652, 2515, 858, 666, 2527, 871, 
        2426, 679, 883, 2438, 692, 896, 2448, 706, 2545, 910, 720, 2551, 924, 
        734, 2559, 938, 748, 2568, 952, 762}], 
       Line3DBox[{572, 776, 2380, 573, 789, 2391, 597, 803, 2401, 611, 817, 
        2409, 625, 2496, 831, 639, 2505, 845, 653, 2516, 859, 667, 2528, 872, 
        2427, 680, 884, 2439, 693, 897, 2449, 707, 911, 2458, 721, 2552, 925, 
        735, 2560, 939, 749, 2569, 953, 763}], 
       Line3DBox[{574, 777, 2381, 575, 790, 2392, 598, 804, 2402, 612, 818, 
        2410, 626, 832, 2416, 640, 2506, 846, 654, 2517, 860, 668, 2529, 873, 
        2428, 681, 885, 2440, 694, 898, 2450, 708, 912, 2459, 722, 926, 2466, 
        736, 2561, 940, 750, 2570, 954, 764}], 
       Line3DBox[{576, 778, 2382, 577, 791, 2393, 599, 805, 2403, 613, 819, 
        2411, 627, 833, 2417, 641, 847, 2421, 655, 2518, 861, 669, 2530, 980, 
        981, 2429, 682, 886, 2441, 695, 899, 2451, 709, 913, 2460, 723, 927, 
        2467, 737, 941, 2472, 751, 2571, 955, 765}], 
       Line3DBox[{578, 779, 2383, 579, 792, 2394, 600, 806, 2404, 614, 820, 
        2412, 628, 834, 2418, 642, 848, 2422, 656, 966, 2578, 967, 976, 2582, 
        983, 984, 982, 969, 2430, 979, 977, 2583, 978, 696, 900, 2452, 710, 
        914, 2461, 724, 928, 2468, 738, 942, 2473, 752, 956, 2476, 766}], 
       Line3DBox[{8, 1463, 23, 1477, 38, 1492, 53, 1507, 68, 1522, 83, 1537, 
        98, 1552, 240, 263, 113, 1573, 258, 241, 1790, 128, 271, 1804, 143, 
        1609, 158, 1624, 173, 1639, 188, 1654, 203, 1668, 218}], 
       Line3DBox[{580, 2477, 780, 581, 2479, 793, 601, 2483, 807, 615, 2489, 
        821, 629, 2497, 835, 643, 2507, 849, 657, 968, 2579, 862, 670, 2531, 
        970, 874, 2585, 683, 985, 2584, 887, 697, 2541, 901, 711, 2546, 915, 
        725, 2553, 929, 739, 2562, 943, 753, 2572, 957, 767}], 
       Line3DBox[{582, 781, 2384, 583, 2480, 794, 602, 2484, 808, 616, 2490, 
        822, 630, 2498, 836, 644, 2508, 850, 658, 2519, 863, 671, 2532, 875, 
        2431, 684, 888, 2442, 698, 2542, 902, 712, 2547, 916, 726, 2554, 930, 
        740, 2563, 944, 754, 2573, 958, 768}], 
       Line3DBox[{584, 782, 2385, 585, 795, 2395, 603, 2485, 809, 617, 2491, 
        823, 631, 2499, 837, 645, 2509, 851, 659, 2520, 864, 672, 2533, 876, 
        2432, 685, 889, 2443, 699, 903, 2453, 713, 2548, 917, 727, 2555, 931, 
        741, 2564, 945, 755, 2574, 959, 769}], 
       Line3DBox[{586, 783, 2386, 587, 796, 2396, 604, 810, 2405, 618, 2492, 
        824, 632, 2500, 838, 646, 2510, 852, 660, 2521, 865, 673, 2534, 877, 
        2433, 686, 890, 2444, 700, 904, 2454, 714, 918, 2462, 728, 2556, 932, 
        742, 2565, 946, 756, 2575, 960, 770}], 
       Line3DBox[{588, 784, 2387, 589, 797, 2397, 605, 811, 2406, 619, 825, 
        2413, 633, 2501, 839, 647, 2511, 853, 661, 2522, 866, 674, 2535, 878, 
        2434, 687, 891, 2445, 701, 905, 2455, 715, 919, 2463, 729, 933, 2469, 
        743, 2566, 947, 757, 2576, 961, 771}], 
       Line3DBox[{590, 785, 2388, 591, 798, 2398, 606, 812, 2407, 620, 826, 
        2414, 634, 840, 2419, 648, 2512, 854, 662, 2523, 867, 675, 2536, 879, 
        2435, 688, 892, 2446, 702, 906, 2456, 716, 920, 2464, 730, 934, 2470, 
        744, 948, 2474, 758, 2577, 962, 772}], 
       Line3DBox[{592, 964, 965, 593, 799, 2399, 607, 813, 2408, 621, 827, 
        2415, 635, 841, 2420, 649, 855, 2423, 663, 2524, 868, 676, 2537, 880, 
        2436, 689, 893, 2447, 703, 907, 2457, 717, 921, 2465, 731, 935, 2471, 
        745, 949, 2475, 759, 972, 2581, 973, 974}], 
       Line3DBox[{760, 950, 2580, 971, 746, 936, 2557, 732, 922, 2549, 718, 
        908, 2543, 704, 894, 2539, 690, 881, 2538, 677, 2424, 869, 2525, 664, 
        856, 2513, 650, 842, 2502, 636, 828, 2493, 622, 814, 2486, 608, 800, 
        2481, 594, 786, 2478, 567, 773, 963, 975}], 
       Line3DBox[{987, 1204, 2692, 988, 2589, 1218, 1016, 2593, 1233, 1031, 
        2599, 1248, 1046, 2607, 1263, 1061, 2617, 1278, 1076, 2629, 1291, 
        2740, 1089, 1304, 2750, 1102, 2642, 1316, 1115, 2645, 1329, 1130, 
        2651, 1344, 1145, 2659, 1359, 1160, 2669, 1374, 1175, 2680, 1389, 
        1190}], Line3DBox[{989, 1205, 2693, 990, 1219, 2704, 1017, 2594, 1234,
         1032, 2600, 1249, 1047, 2608, 1264, 1062, 2618, 1279, 1077, 2630, 
        1292, 2741, 1090, 1305, 2751, 1103, 1317, 2760, 1116, 2646, 1330, 
        1131, 2652, 1345, 1146, 2660, 1360, 1161, 2670, 1375, 1176, 2681, 
        1390, 1191}], 
       Line3DBox[{991, 1206, 2694, 992, 1220, 2705, 1018, 1235, 2715, 1033, 
        2601, 1250, 1048, 2609, 1265, 1063, 2619, 1280, 1078, 2631, 1293, 
        2742, 1091, 1306, 2752, 1104, 1318, 2761, 1117, 1331, 2771, 1132, 
        2653, 1346, 1147, 2661, 1361, 1162, 2671, 1376, 1177, 2682, 1391, 
        1192}], Line3DBox[{993, 1207, 2695, 994, 1221, 2706, 1019, 1236, 2716,
         1034, 1251, 2724, 1049, 2610, 1266, 1064, 2620, 1281, 1079, 2632, 
        1294, 2743, 1092, 1307, 2753, 1105, 1319, 2762, 1118, 1332, 2772, 
        1133, 1347, 2780, 1148, 2662, 1362, 1163, 2672, 1377, 1178, 2683, 
        1392, 1193}], 
       Line3DBox[{995, 1208, 2696, 996, 1222, 2707, 1020, 1237, 2717, 1035, 
        1252, 2725, 1050, 1267, 2731, 1065, 2621, 1282, 1080, 2633, 1295, 
        2744, 1093, 1441, 1442, 2804, 1106, 1320, 2763, 1119, 1333, 2773, 
        1134, 1348, 2781, 1149, 1363, 2787, 1164, 2673, 1378, 1179, 2684, 
        1393, 1194}], 
       Line3DBox[{997, 1209, 2697, 998, 1223, 2708, 1021, 1238, 2718, 1036, 
        1253, 2726, 1051, 1268, 2732, 1066, 1425, 2736, 1426, 1427, 2797, 
        1405, 1406, 2801, 1417, 1444, 1445, 1443, 1408, 2803, 1436, 1434, 
        2764, 1435, 1120, 1334, 2774, 1135, 1349, 2782, 1150, 1364, 2788, 
        1165, 1379, 2792, 1180, 2685, 1394, 1195}], 
       Line3DBox[{999, 1210, 2698, 1001, 1224, 2709, 1022, 1239, 2719, 1037, 
        1254, 2727, 1052, 1269, 2733, 1067, 1428, 2737, 1430, 1431, 1432, 
        2800, 1433, 1415, 1423, 1424, 1422, 2802, 1418, 1419, 1421, 1420, 
        1416, 2754, 1409, 1439, 1437, 1440, 2765, 1438, 1121, 1335, 2775, 
        1136, 1350, 2783, 1151, 1365, 2789, 1166, 1380, 2793, 1181, 1395, 
        2795, 1196}], 
       Line3DBox[{1003, 1212, 2699, 1004, 2591, 1226, 1024, 2596, 1241, 1039, 
        2603, 1256, 1054, 2612, 1271, 1069, 2623, 1284, 1082, 2808, 1455, 
        1297, 2809, 1095, 1446, 1309, 2805, 1108, 1449, 2643, 1322, 1123, 
        2648, 1337, 1138, 2655, 1352, 1153, 2664, 1367, 1168, 2675, 1382, 
        1183, 2687, 1397, 1198}], 
       Line3DBox[{1005, 1213, 2700, 1006, 1227, 2710, 1025, 2597, 1242, 1040, 
        2604, 1257, 1055, 2613, 1272, 1070, 2624, 1285, 1083, 2635, 1298, 
        2745, 1096, 1310, 2755, 1109, 1323, 2766, 1124, 2649, 1338, 1139, 
        2656, 1353, 1154, 2665, 1368, 1169, 2676, 1383, 1184, 2688, 1398, 
        1199}], Line3DBox[{1007, 1214, 2701, 1008, 1228, 2711, 1026, 1243, 
        2720, 1041, 2605, 1258, 1056, 2614, 1273, 1071, 2625, 1286, 1084, 
        2636, 1299, 2746, 1097, 1311, 2756, 1110, 1324, 2767, 1125, 1339, 
        2776, 1140, 2657, 1354, 1155, 2666, 1369, 1170, 2677, 1384, 1185, 
        2689, 1399, 1200}], 
       Line3DBox[{1009, 1215, 2702, 1010, 1229, 2712, 1027, 1244, 2721, 1042, 
        1259, 2728, 1057, 2615, 1274, 1072, 2626, 1287, 1085, 2637, 1300, 
        2747, 1098, 1312, 2757, 1111, 1325, 2768, 1126, 1340, 2777, 1141, 
        1355, 2784, 1156, 2667, 1370, 1171, 2678, 1385, 1186, 2690, 1400, 
        1201}], Line3DBox[{1011, 1216, 2703, 1012, 1230, 2713, 1028, 1245, 
        2722, 1043, 1260, 2729, 1058, 1275, 2734, 1073, 2627, 1288, 1086, 
        2638, 1301, 2748, 1099, 1313, 2758, 1112, 1326, 2769, 1127, 1341, 
        2778, 1142, 1356, 2785, 1157, 1371, 2790, 1172, 2679, 1386, 1187, 
        2691, 1401, 1202}], 
       Line3DBox[{1013, 1403, 1404, 2796, 1014, 1231, 2714, 1029, 1246, 2723, 
        1044, 1261, 2730, 1059, 1276, 2735, 1074, 1289, 2738, 1087, 2639, 
        1302, 2749, 1100, 1314, 2759, 1113, 1327, 2770, 1128, 1342, 2779, 
        1143, 1357, 2786, 1158, 1372, 2791, 1173, 1387, 2794, 1188, 2799, 
        1411, 1412, 1413}], 
       Line3DBox[{1189, 1388, 1410, 1174, 1373, 2668, 1159, 1358, 2658, 1144, 
        1343, 2650, 1129, 1328, 2644, 1114, 1315, 2641, 1101, 1303, 2640, 
        1088, 2739, 1290, 2628, 1075, 1277, 2616, 1060, 1262, 2606, 1045, 
        1247, 2598, 1030, 1232, 2592, 1015, 1217, 2588, 986, 1203, 2586, 1402,
         1414}], 
       Line3DBox[{1197, 1396, 2686, 1182, 1381, 2674, 1167, 1366, 2663, 1152, 
        1351, 2654, 1137, 1336, 2647, 1122, 1321, 2807, 1450, 1452, 1451, 
        1107, 1308, 2806, 1448, 1447, 1454, 1453, 1094, 2798, 1296, 2634, 
        1407, 1081, 1283, 2622, 1429, 1068, 1270, 2611, 1053, 1255, 2602, 
        1038, 1240, 2595, 1023, 1225, 2590, 1002, 1211, 2587, 
        1000}]}, {}, {}, {}, {}, {}}},
    VertexNormals->CompressedData["
1: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
6b9fO4FdN99UwBb3tTdn17+CxyM976zgGAJnRt0E0biXLLZIAIl7cEhmKxb3
Nv7MOfU6vASeyl3x7uWbGlh0Qf3miclBcCuvfQ7SPli0VxNrP1JBB2vfS3ny
KGIPOHWxDbNH6DAPZo/TYU4NpF8wG1SSQ/vlzz+O9Ss1FENB+gW/NRag8Rbu
Tr2F9bvstrc30i8I3Kp5j/YrqXsb67eCi2SHjndtYUQ70j6Y27IFa19F4DAV
HZdoppMs0j54vzQZa99QJwGzMyd/DxbHzG/dx+yEIR5N1B4P2HMTWv9a21Ws
vlrcF1d0vKEdc2i/4Nmdb7F+ueaobVUH5qjB45m8VIEK8NPhtWzUG0Pg1GK+
e8dzi+FlJwdXi5zNBO/G7/G/loTwwRw9WWR9Ad+d/YmtL7Y7RSfR9aVl6ZIo
pD64dZxrDVo/xTEQq8+zN5UkzfMK5Krw8c35VgbaCFSSQkSHwG7Hl/v3nI0C
l5qv7xqkRIFHfR0bVk0j5RTEx/5J4P5F6w/OSiSDXo0hftlDQ+DVhosWv+sf
gSOys+590aHgF0MfS5EJZN3RO7IJtafjVkw4Yg/8cFoCs6edgQckmPVwUX9R
1fZLz9Dy5xa/56g6y26/sviNxB+nKl1pmhiwK9tCopXCyJNQLDfda/j4UoH6
t3rFlWqMfAWD6w6/26n+ACg2XJxyfLQQYsPPgz2/Nt5m0WkGvJ98wad/3QH6
i8fzo/rbdsevHij4y2as9ff7O8a53HCZyoH9KkUJp1SVgj5tYso7evjJxg+c
4ALB81GLNNbBxqpk7N5Ek+fL1wuulAE+KVIDZa110JpSOs6vUM7LbfpkAMz9
zc58FG9G8IVtYx6NWztVCm35dUMmO0UIPKMw/vLnMv9LRX2wCRmOdCP6lVZN
2eu2MopGXtVS8kjjIoFXW39+Fux3PgSCP8Z6fm61h1NrK56g5zNV8kwTontX
gQPXpYY2L98Al8WswN6jl/xUGDT2CgKC9n/c+FS+DMpypNsTtmTjnodiO4Dt
oiKVINN79KG9dsuPrHYt1FzmUqp5dQ9hZ/AP2ZTxxYVFjQ7uOj9uxRJ22hcr
2DVdraF5GEvFtpMZ981/i5R+diiOgzIG84PatS9DAJ6f6nLztW9NfsGgaZ/w
eNGiaPjH6pkHe5H1sRI0pa7ZYw3uc0quje1xgi0VJkKG0X1S7eniiY7lYLmq
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
qPidy3WO5/a+v/f5d3/OZ5+199lnDfu71ncl7v1ARM+tKJ23IZKBt2HVStEn
nUG80JmMqIIzjutReZIusL7pOZkMqa3M69JZlQZto/P2G/0QnPA4Pgidf5n9
7mbeb8iMC1rE6RIVR/ZU/oQS8ltlpVy2wLemJxb88JJhHCf3ww3AeAPv7+ZG
bH7unkpLPq5jhPjBdXMXD2DxiKjifiBqry1+94hvqUfkIXS9RMhgoFRAHMdE
un1IiIzxIfzmWORtKGbgbVCVUyje6DQJrQojJ+ZbTECXW98sxlNfqE9MRvCw
uU9iV0yUFpz6IE+ONm4iyZ5V7KgFz5hVHX587Qzce31nJc3f7igHRc7oJhO+
dadS+UUiUTnNRFR9vOSy8c83OtgmDUSjcq4gttjXzbrg2Nfd/5FoZY7KeYnO
2xDPwNvA/ll++sVXdxi25FUVEvGCP68a9CpExu8rHM3rZvaFV5Nu6HYr34WP
lT07ko7EBQorHM0hSju+mFDpqK6G3WeendDwmj/yGPcmsLOo2jIIfe8dOm+D
MANvQ/4YG9C7LwnmKt6QwSGTCx+o4lLmHx4FW6Rh+PpENe5azlSstUwSOo92
gdGoy2QqaXsUwUVwGW+DUKzrTCVhlDwUr/BRvhBC9Wpok5+nR9gMBS+Uwl2p
iuHacvI6T86IVUFZpo7tuiNJgJXf4vdit594/XLqEPwjJm9MJ1sBfF6O96T5
yTLS9YIqN2NhHrxofWHDVVCqUpxPHdmHx/R7gI39i/cA/fR7gNZcsD9qXwb4
+JXJ+kfN18Gc2IOmxt+ReF9BmsnU1w58Vj2s93xADYzVEcqdROb/ELFVU5C5
HxjaB6Ul+ZUCgW+nFuRxcZrVpEaIAYW91WUCbt9Q+a+3VqjZxYoSVh/ZdgRy
wfpNuOGpp4KTe3Cln8jT61Oz0f3pnh5nn+WoIatYCrzvXcbPMALy3XcSek85
QTwa5L6GhOHm47+s7LenQKdNFRzcOG8BRjOL++MtcqJjq9dumDplc9Do8TZQ
gX2+f+G+tHGfstC0F3z2S+nJqojLoF8ocW0KLT6i8zBIM/AwcG4siZGetgab
XJpd1Mc0wBC3DB+aPylQOgjMsLcAzD/tB7kNnwF7Ty3yQFLtOA4NSm8A7G4E
HnLiHEPlzFQj2hoWrSeMVGkOvvPow/KBn662iTvVgHN37WDz/ZSC7kNuapy4
0v37FMHwNrz/Mh4GrSlPO8rEGchjn6v1bm4rYOn//ehUY0DtnoTqI9ula0In
gCx8/cJ4ojSU0dukAV/ntGvQTdEDcd7sybRzEidf6c5DDYDlmren7fgcCmYp
5yUw0eah8zBwM/AwfDzl6pVmRwKUr1sLjzc+BsRfLr5X92vr1pW1k4Sd1wlK
K/GtqJz73qtuidAdx7cZf5ANArB8/gFTmwtVO/NxT299Xv0x/Sa63r8jeuRq
7/NCXXbKwU7LeBhOO33n7vyUAtW8avfyHEpD8yi69ZgV9QVYYInjHt9KvnGA
Fdo9C3H9viS7H3ZEXVimzemhbY8FaLkhMIrGw7CGzsNwhIGHodiIh2gcUUbQ
MHjFYfYO42EQdhE9IbuBhC/22ucgX4nxMJStPt6wot8Tt0YA75dSb43K73Zl
vwbTLQC6v7+At3UZDwPPq9rZYdsCaLzEXm2LWglgQt+3TpvDcV4589DAd79J
Uwdu8EqH4//LwxAVPTaVyncen4k/8fJdKsbDMJaS6styQwZHlOh8/84Q42GY
cc/Uo/EwrG0qzSpfxsNwthaESsJjIWKpuIfokwJgPR3H+W88DNVter2cVs9V
Zt1lr41FYzwMFqVmSjQeho1Hz0ss52FYb3VUj4bnJlww3rYcz30QMujelh5c
Wv4k/ez5/Riee1/oi6XH/ofASpnh14e+kqBtdLtvVJ5TQMNzt80HlRosw3PT
+LM43ygMl6YSwmy/s2D86h2VDfNrjiqTiWHFl1JHMDxXSMMIPz7FAt67kicv
MCsA+108uHB/vtP+ok76l3JgFif8ID6yBiL3L8YXL4U3mr/pMAZYonvqE5fh
uRJxu3a12KmQ9nEbejyxxfjGu4u4D3A0BJNZ8CzrTHowPFdVuJdtByGGsiOz
/groiuG5txJV4l1HDoHV3Zm5VLGTcLb1gCoNd+hledD+dZIHvHDq8sz4r82w
k3Xcgj+Q0CleylP7FGhXIHUdUKVAQvQ8ebaavzMTReSALQI81wjL8FyxjIKg
LdIXSK9z1dbvD9ZD5fTq59g+K04hW6ZUcszmJaByGmrU5Up+raH8bRSvy+JX
gMrJUgHXU30ToMnBZtyB3SEQOx3P5bLwLODwCAE3by4ajLeLgruV/tIbR+yL
z+kiYdwxY1D6SYOF64AFvKnNZYCmJ0sE+bdXK7KDhQeJ04/2s8GXVvUunHPL
jt41zw4EA1YTHytfpHlDS/+jgUJM6sCtSgJFLtl67TI8d90Lnq2vXSNJwOW/
Vq31Oomu68qnmHS/D+3k+6Y3HP/a+ARd14038ZptPEMUNYHJiuQHmB+uWTnA
/3i0FNJUidg9kh8H8dD7MTkZ7u9Xm9SBY5n1nX1sZOGI+hCJBZw3Xyn616sM
kINrW8Dx5jyY+V1R0tMeRM+s6WyOZwsEg/n61+RGBMPpn0knBZDnQyjaktOI
vdwUZGCHu6UE7xTr8KPNw2+wfT/1LRVwX//20LuYXGg6afG9PZmVUZ6XmAAW
kfCfGat7UDl7ND1NhbmYCO6z5jK6y/BccLrn7/CJNJJkP1XosL8jug/TJgdL
rh4ZJ2f49G/eEYPV7er71d3XmfxFucQRquq4ohqdnyJ2JOh+YzX0dPea9lc9
9yBrs0V5prMa/ePFD8Mtrh6JQQd2whEBJS00XiYe9x3e4kbJ8Jz3x98RoB98
zPvLJd/ZUXA9X8otAksq2L22qtW7KhaWmq88ajaN+I0CKd6Up6fAxi5wq6yB
LpyLZ2qh5S1Y7eyqvRXdDZjkCaaRMqmQCM/MwnufPsvYL8m+DSCU3/M4dugH
KudOre9WA6FbCUMZD1a6dGD5278aNk3GUr/gZjZ8u8KxDM9lUa0MjnUt+IN3
+uEs0SiTZZbMiOfyc8uLNWqu+oMXunN4J8XrwlsUz23JWtQPVZbpIlJR1vAS
nvtVjo2fZl9MwxvOe5k+hr2yPR8lJI0Smlj/+uWN7MOFGouYGudasJqrzzB1
Pz/wbOAaTnkvsg9vqvKND+aDpHETybEjo4RVA6X5p0ZHQeG9jicJPC4o/ntZ
MfbOEDJ/Y0Af2Vl0HFjCf4Hk4QV5yP5GpL1Pdv2B/8rm5seOftr5B/5btD0/
nPPi2B/4r7N2eFdY0A1SdHtNPUv+cVT/n9foulb2/CzJmVXn2bsVGui4jaCD
ov7aDHKqqZ2wL+9N1B49d/UleJ30BSGRzxTLNfGg2xl+vjzEf069Iq9X89YH
PNYe8ICzKhB8fF++1ByRX3zHKcpdETlSAq+YS/umTRhudd/ZdbzCgzx843TV
msbj6PxMv45HGt/2pMSunm87r4vZR0k568v8OgfBKrVbH45wOoL21I+iE8j8
FhzcNSH31MFaXLjXmjhjMOdL8xaa/yP4lHclrxUb2LTbr6G1hxVc4za5oJeS
yqKzt1/sK/UbsVJo1cVw57Qjhtc1sneStfvt5aKUhLD84U37yytl5Cjisivw
0pWSqDyxV7/9lblrirLOTyvQdOMEOs4zVj8MG88D7MzyZuFT28Azt0JmaO+d
iaZmsHNMAPqqfXHXK9hA08vHFr7vW2q1wsu/igDN5Omo4sskQKRo8T/d5FC0
a5pJDnAKqc57KLMHtb+VfcUqUr0BpRt2bI+jnnVF5c810vIu1n9Fkn7oEakv
XYbZd9L+b1E278hFHL41aakYTu2slVxZwxpP6VyrfuetbTwq/25cwfQaUWEo
U1CsK19EEn1vxYW7vhwJccBFhb32E07lwEX6PaTw+2qHI5PXgPKVUoZVV1IA
f7p/zs17wijXUAcIyHkH++uYof6JvpIs/5Zv1YSnnHqtjz7UYPh4HV/auzk2
gv1gHXRWeiWWp12x0pSjUJ/0srBAvDsJO5+nd6eErBcwJwdTJSmwkBm6Lsmi
1AsRd7dRfM1ZjOZrJNB51nFfvva5LYciNDZIGaguRcfFd9eOG26eoAikOhqk
DHKh63VQ53K7/FsAMCd0nlbX0ETHVZT2Xr8/zAoY6SpYOotg9WuxkvCg0O1q
QlpLoWoCO8ZXFulfsMN7vxaB+j3MMAkwwHjAxp+V2zgH430cR6qr/YNQ+Qdn
C5PCWoNw1uKF1nZ5fuh6T9D5rMIY+KyK6PxUqnR+qmw6P5UbnW9KgYFviofO
K3WIgVdqn6uMofe5l7DzO90r5Ns8APDAelXyuVEwaPV3CZtz6XDOh81DEC4H
3Fi257PewChI0hc7sMEhC+xItq1rky8EedV6BpM/joIAnScwmIEn8DwdL278
l3ixat5PrhTltFLNpBWWDhL/Gy/mrX3QUpUeDzTcvOmy4mIxpI3W0y3ixfcY
8GL7Rs0eh8dcpFch14xX9WF4sUFd1ElFkjFZUPtTQyXlf+PFqUq++gGXmMEZ
/T1nhk34YBm96wv39hunCfrH3j8DbrhYiD09WQ498V98bwwdLwYY8GI7maN1
ewYsSMn6v1W19DGeE7/PsYknqEnk0KbegzFUDC+OlKGm/7LPopTtG7K4WYnh
xfx0vHgVA17crsXy7WmhIVgg88G0S9cGHvHkL6fhxdJVI+9M3blAvfQh4R3b
eODN+BcL8j+zS5yzZckD9sybcT7wJEKP6DzV/62PvKlL5tGupggSl9Jfr7yO
Y36LgWrrTFjeezKzSHZthj/Wx2SCRceEXfEzxeIcr+g4VxUq/92R5tk4cjak
elrDcfe+WKiOzsdoRseLYxnw4p2sYq1mxCDwgz2L2YGxW/A90iH1G3OjYDCF
tyzwgx7osoGgK1hoDFPdtibQ/BwxFvPDRuuZwLbjF4xF0n9DNd4hC/NP2bpc
5zTzADLai4ttxP9333ZlpeJT4CYi6bKl8MgNm0B0vbu/npj+qjRNNhO2+U7E
v0bXa91mHZJbwASlt/lbqfxsQedx1pa96094BUWdqP7SR82AfLUX3ysn7zcb
e8wUtrtdophiTICdfsesoNm1HjpebM2AF0cE7GnWUckED2vpX+UwLYBN35E0
HbpGwdV3tpN/3fQDJ0MzCoNe+MNrft7wdkDmUcwE0idxyqD+ftZUyeO74NK1
DQt9pYPVZpu/5xABHttjTBLCidA5ej9ijsFtbQIaQ4Q+zcC65/+iD7u/4Smp
Mf8qku16z4d3LLH+OBdziC7bmTkpbIq1tefVGtHnt+652t/Vsh5K62nF/fTv
xO69jTsmOqRaoLQfrutypjMhp8uL9zAaLWc3OBcehxMl9/u7SyvBAoGPv9PO
86S61eQLyiN4PjY66AlnEBwjrB2548coeJme/1/CkP8f1+RWcXilFfjYqdj8
J58aHOV56iTN36tybdrCHdUE5P/1ql1qtgAyp/e/DqnIjfvtvxYY1am+pLys
r3pZVkkprf/1aX7x0X/TV33mv+DL779W+/vPZZLKPY6V/4rzx/AXOo4cz4Aj
z9P7eo8w9PUOPPz1+R7dENLWR19H7HuxPqQbuyyM9fwqyGlP1B2y8GnoPPlh
i3hxSeY/8eJz3zy2zBn7gr07mR81P4gDRyovCcsi8eDDmPAHvV+9wPqkO72E
ZD9QQn3kahjNH6PjxRQGvFjvaHZKHWRMup+XzXJvVgmVx3PX7zlHn0iyzVoN
fCbOG5UnFu76Lq0TTtln31Zif/QKKg/Tr0W8eJ3AP/HiwTCuIXF3bbBSfGTP
CrwdyKcwEU+7z1xVkvwdx6UKSoPl7StNDcARziEq7T8Svkm0P02YB0LHk7yy
NX8DvA7/f59oDV4tHPcKNlJqH59jvRyGd6vaWp/379AkHwiY+fBuWBGz461B
j/GdWhRWTWmVN3JY39jZ0HzmmwmrIMm3d7QfiTJjdcqrF/s7M7H/s78zle/B
iYmM3wA+26HP7IUI2JzTPEsbpyheCwpXGAVqNscExU8yg+zfYhaeny1Xqdsg
nA281P9xr+V2AWBBz2fez/m+zXdaFDCAvph9+hd9maGhvWJnQpNLC8/6fY0w
jELXW3IZqHnn2U367Ku1yj6uBf2O1+OP6mR195GTlF33fM/G8HGeh12Ul3pZ
FNeIcy/q3LLR+TseVRwoK5WEzn8yn9LW3IvJw7yIF9t8/yde/N0rTHF3311g
06TY9iPKZcA0vR+H//P6k34JgYCOvN06btZEoJHeN+SIjOlrZVU1wOW1mlqs
H9Y3WUu7KbhNlkSoDA9oaVnWN/n5FUnX2rZv+CqZ4S9z/6Jvsq+wgmBw9xlS
Ta25+N0hLJ4q385XfrnUkfzymqi7XKc95pfuNm0U+nsvheX9nra6VkX0vSE8
R63SWoopHvG/DxXZYvi15cPthge2TVEIPupRKyq40f1Z6oNszoAXi/1oytj1
ajNQ6hcrHqyF3U+2BHMruietBLwoPNNnIrHv3n1y0gTgpRK8b4TbfZ7H8AjF
dp1Njk7KhMyz4fbrarBzG64b/3w60gU/+tLZ4cWyfseq0WRTWr/j5vj+suX9
jhPq8rb2ZDiQ7rIYBNv7nsLqDjZF+f2IdCFPD+SzvDyH8a7PfZJNQ95LqT4R
G7K+BkT1qlHrR39ETgp1+Fxo1zyWZ/UF/qGJrAuqznp452wk5of0PJYjI/sA
ybtfakP2AR1fu+BnrsUpMvBelnQ+UEH2maA744djruBGn29cfUcE+S4E+7gy
7mJbrH78N+cTO+Q7EkyHthJftyqi49d4pG57lTriHQnbneU77dF19e/6FR/Y
fQaX9GPgFXJO0H0AJARwdW3fyDtaTj+cZx9Fn3f/wbK1XZZECTmmFv7RhIzV
0fscHUPOM2QSLTaKnGfUb8xNSnZDzj/kPHOzATn/0NL5z7vHo438L9AZWenb
yP8CLf0vsVIbi2j937UY+CoT+0RXI/8jEO3x/vxBzb3oPqjLxosj/y9hzufy
xdduGP5Lwp0wy+zuw18MKkpG/neMz+3EnP9bz27cxcbBh4h+wHjO/Xa5nwpN
VonwIB6/bRiF+tvDxZEmftOiEFcTJQ7RS9h7Q+s5eYWzIb1vvh2IHoOW9NiA
dNE1RO9BrnNqrxG9B7PS9Z4JH7stoieh1IAOmcMvRGAiXU9eV4qMvlM+g7vI
wBvp8En/2o2EVQC5/X0EoofR91p9Kc/EdWoRbCrHiIjexvDN294jvh2a+L9y
PuxsHFbE/JZ6PdF1K9hwWeoJRMQuoOty9eikIPYFkuxqpyD2BeKh2xfTzlpm
PJcqXFFZK8RiagBfZVu0R7tC1/xC7Bcc/IXvHGK/4FXsi/bL8NSIx4ckXTwX
Ax9j9AXVcimdcALkZ7vC4egVVM71K0ObHHwi8c7qUucQe4rKSan3aK6BjHHm
eb3SiP3FeCTu4h4jdhweM/g5ithxuPzD8IIdTz3CJo3YfXjY5+ozxO7Dvn5u
C3Y/x/PF0WvfgvFvGXgLw9ufbdL1q8ALF/IEI34F5v9MNUfs0g3BnRCoZXXo
xfSAdsDtdsRfhcvHTBb81Vnzpwv+aqy6qxV+dI4QQ+frS6Dz9XVFz632ncvE
Kaz3LEL8InQesTAo4Jtgwx919PlR+5IUwA1/1NHflErT9CJs/qOO3qrq14W7
05/ROvrSycV8QgWLhtfXxM+idfTaaSu+0HBwZuC6tERLFjLu10v2HSVsgUbj
Or+NgrLsSjHI8/T6SyUyU8Pi88L8vVzI/Gj9+9L8scH9+EuEzfRxrP69e+LB
UXlwA13/YvXv27tyJ8cFG/7gZ0sUfKr6zICdYiAg7lhi0Izq53Di55Y5/7UQ
53HtDMRfxe5D3CziEP8Wqh9+9Q7xb4El//bkmWds5iut4Eq9Ag3EHwYp5xb9
4dfctURaHesQvY7Vll7H+trv86BT4XFQYgZ/CvHDQfv7i3644SH9U4jfDqh6
urMhfjuw5Ldb1PPuRfx8oG5r2w3Ez8d4qy4Yl0kzcxIuKOnudVJrROVvmR0X
HPGvwu1Y76kcbYn1z+qVCRsX1BiiqDiLkpB4BJ1Hgnuv2lQOEXLbtGNEXDgR
WIpfNntMfkLiHTjxvPwdJN4B/6bHO5qJD14g8RHsU+mTicRH4NOpxfio8W5D
G+18Am/lLiPnE6xLql44n0Qpl/lqg3mCD0Ndp8uTjJdIvAYO4cI2IvEaKMd6
dyFem/aOW4nEdwBVOqYFie+ApfhuC7GwI6eACZh1/hmIxINY/j//kP+Q0jSe
RdhG+Qn+NboPb5JflxE2EXFOlmW8N20C0X1QcyJycpl5QACe1R+JW1F/dUio
4hIS58Ku0xqCSJwLLMW5GlyOfUhcDItLukshcTH4xnMxLt4hf+8zEkfDfDqb
lZE4GrRUN1mIo1ufOrOMZ+riJRl4zLbukrVA4nSgdZrZGonTgaU4/b2H5iM2
xc+EMDOTLUhcj/EO1bGG3cx7j48s5S3M8Mf66xWxSTV+aorAVXXxZHgdd0TX
NZorq3eCJQ9SaJeuSvAkAkv3D3qsYnOm7lwwV0Hv4PZtPOAW+n1F+se4X08L
DeE3Tjtku3RtwObQxfsNXZFzX54h+l+VgR+s7EDn7Z/2WYTGDSTBm5VYXfxX
lVUBttQk/N/HOrbGULG6+PdaFS67BixwN7KpUlr6GK+XhIFewLH3zyD/4fSm
4pPlwNI9T5GSgW7AJWa4QIXKNWzCB+Lp90K7n10ooNnfqww8WoW+OhIKJGN8
Yvvg9UoKVi+/o5NJx+4xF+6ej/dvlr5lPFcOSbT7Lki5zb6X6WIxsHTflR26
T5Hm57Qy8EcZdcmyJymnqaQoR9bbS2B19JxMEU+I69xU7jPwI1XS8/2mH/8z
3+8wPd8vip7vd5ye7xe3sulVe8ErGo9Ix3E1fiDnufWHdp1R8Ef3Yl7fRYa8
Pp2mrNb/xMO5oeL2W2QeWt5gMRzIAzjvmHpPm4fbJ171P+UBruhbzCfMZ8gn
NJ9ST8znSIR1X2xolua9DgJsuayRtL4ke+7qj2nFghI/FaNTk73BlCqrHh/E
rh2g53VPDSzmdb+m53XHKj8QVl+TAZ6Gdu4MIxaAB+TTN0UgemAKTvRF5gev
jrF2IPPD284ULcw/n/n95caqhzT9H9s/OUpwDNioeg8Z/z+iEEpP
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{{3.873990321497046*^9, 3.873990360775103*^9}, {
   3.8739904473306847`*^9, 3.873990464200592*^9}, {3.873990872278893*^9, 
   3.873990919027059*^9}, 3.874159136663022*^9, {3.8755558482089767`*^9, 
   3.8755558932016897`*^9}, 3.8755559505015*^9, 3.875608779518321*^9, 
   3.8756088177909117`*^9, 3.875609114922443*^9, 3.875609219817253*^9, 
   3.8756092918127728`*^9, 3.875609407247745*^9, 3.875609923334978*^9, 
   3.8756100088746634`*^9, 3.8756100495201063`*^9, 3.875610324372719*^9, {
   3.8756308878810797`*^9, 3.875630909639102*^9}, {3.8756309723720417`*^9, 
   3.8756309839787493`*^9}, {3.875793688799498*^9, 3.875793762933404*^9}, 
   3.875793809674142*^9, {3.87579388026549*^9, 3.875793950754942*^9}, {
   3.875793983408401*^9, 3.875794009499598*^9}, 3.875794095587812*^9, 
   3.875794161135518*^9, {3.876262291859777*^9, 3.87626246603272*^9}, 
   3.876303016099277*^9, {3.876303046360381*^9, 3.876303060703002*^9}, 
   3.876303166841649*^9, {3.8763032965986233`*^9, 3.8763033484401903`*^9}, 
   3.876304488458064*^9, {3.8765854097658377`*^9, 3.8765854342919397`*^9}, 
   3.8766053438907347`*^9, 3.8766054325317383`*^9, {3.876605611999731*^9, 
   3.876605636894302*^9}, 3.876605824673028*^9, 3.876606187883404*^9, 
   3.877899671867755*^9, 3.877899712511904*^9, 3.87789977434214*^9, 
   3.877899830830907*^9, {3.877900868369198*^9, 3.877900879475931*^9}, 
   3.877900972073832*^9, 3.87790233033375*^9, 3.8779023827082872`*^9, 
   3.878055751020671*^9, 3.882271104555258*^9, 3.882272153229916*^9, 
   3.8822723966338778`*^9, 3.8822727550132504`*^9, 3.882272902896391*^9, 
   3.8822730624628553`*^9, 3.8822737750808907`*^9, 3.882525081964892*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"cbef7567-bac8-43b1-a53d-6e97570da7ac"]
}, Open  ]],

Cell["\<\
Set parameters for the sandbox
  xmin, xmax, ymin, and ymax define the borders of the sandbox
  nbox is the number of gridpoints on a side. The sandbox will be divided \
into an nbox x nbox grid and sand will be moved between those gridpoints.\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.718713496465699*^9, 3.718713510617713*^9}, {
  3.7187138394293213`*^9, 3.718713844168648*^9}, {3.71871396171179*^9, 
  3.718714028208855*^9}},ExpressionUUID->"2dc1d979-afd3-404a-9954-\
c9ca4348457d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"xmin", "=", 
    RowBox[{"-", "4"}]}], ";", 
   RowBox[{"xmax", "=", "4"}], ";", 
   RowBox[{"ymin", "=", 
    RowBox[{"-", "4"}]}], ";", 
   RowBox[{"ymax", "=", "4"}], ";", 
   RowBox[{"zmin", "=", 
    RowBox[{"-", "4"}]}], ";", 
   RowBox[{"zmax", "=", "4"}], ";", 
   RowBox[{"wmin", "=", 
    RowBox[{"-", "4"}]}], ";", 
   RowBox[{"wmax", "=", "4"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "running", " ", "40", " ", "nboxes", " ", "causes", " ", 
    "findminimumcostflow", " ", "to", " ", 
    RowBox[{"stall", ".", " ", "50"}], " ", "nboxes", " ", "finishes", " ", 
    RowBox[{"running", "."}]}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.718713513661891*^9, 3.718713530016432*^9}, {
   3.718713846896575*^9, 3.7187138489240103`*^9}, {3.718713887380218*^9, 
   3.7187138879316025`*^9}, {3.7187141179093075`*^9, 
   3.7187141263052235`*^9}, {3.718714370879244*^9, 3.7187143931580024`*^9}, {
   3.718837776609479*^9, 3.7188378312984858`*^9}, {3.7320306658514137`*^9, 
   3.732030669358096*^9}, {3.7320311116333337`*^9, 3.732031112117734*^9}, {
   3.7320311560831895`*^9, 3.7320312028903494`*^9}, {3.7320314071613874`*^9, 
   3.7320314080677214`*^9}, {3.73203150154478*^9, 3.732031504086841*^9}, {
   3.7320315454472227`*^9, 3.732031546419386*^9}, {3.7320458525475364`*^9, 
   3.7320458529452667`*^9}, {3.7326326839670534`*^9, 3.732632685008771*^9}, {
   3.73263274972233*^9, 3.7326327835315876`*^9}, 3.733231966505395*^9, {
   3.7332320039813833`*^9, 3.733232005643506*^9}, {3.7332321125974092`*^9, 
   3.733232113331465*^9}, {3.733232145644101*^9, 3.7332321461597514`*^9}, {
   3.7332321860642796`*^9, 3.733232186445855*^9}, {3.73323221920685*^9, 
   3.7332322520727825`*^9}, {3.733232290109403*^9, 3.733232318874716*^9}, 
   3.733232540569396*^9, {3.7337936188054357`*^9, 3.7337936487083664`*^9}, {
   3.7338383631922035`*^9, 3.7338383639750013`*^9}, {3.748914448810422*^9, 
   3.7489144505583835`*^9}, {3.748914875540037*^9, 3.7489148800757647`*^9}, {
   3.841479224685567*^9, 3.8414792250605726`*^9}, {3.8414793421775713`*^9, 
   3.841479342417571*^9}, {3.8414801070125427`*^9, 3.841480107211527*^9}, {
   3.87555592001357*^9, 3.875555920158445*^9}, {3.8756099159884777`*^9, 
   3.875609916096182*^9}, {3.875610043855516*^9, 3.875610043974502*^9}, {
   3.875793682680879*^9, 3.875793721473713*^9}, {3.875793875586993*^9, 
   3.875793948476336*^9}, {3.8757940069226294`*^9, 3.8757940069971533`*^9}, {
   3.8757940928913403`*^9, 3.875794092991233*^9}, {3.875794140097681*^9, 
   3.8757941564047956`*^9}, {3.8762623771585283`*^9, 
   3.8762623772471237`*^9}, {3.876262433417536*^9, 3.876262433544656*^9}, {
   3.876585405505458*^9, 3.8765854058776283`*^9}, {3.87660518827043*^9, 
   3.876605188399829*^9}, {3.876605340498394*^9, 3.876605340838002*^9}, {
   3.87660559796305*^9, 3.876605598071498*^9}, {3.876605633217105*^9, 
   3.87660563331977*^9}, {3.8766057335684757`*^9, 3.876605733755821*^9}, {
   3.876606176507572*^9, 3.8766061766473217`*^9}, {3.876924163356978*^9, 
   3.87692416376956*^9}, {3.877898977685113*^9, 3.877899005903067*^9}, {
   3.877899702915874*^9, 3.877899706033389*^9}, {3.877899837506752*^9, 
   3.87789983766284*^9}, 3.8779023191362677`*^9, {3.877902365206052*^9, 
   3.877902370759647*^9}, 3.8780557393301697`*^9, {3.882271093090618*^9, 
   3.882271093207245*^9}, {3.8822729687809343`*^9, 3.882272969017634*^9}, {
   3.882273770240546*^9, 3.882273770334634*^9}, {3.882526107807033*^9, 
   3.882526110117756*^9}},ExpressionUUID->"74e42838-0b56-4c36-af93-\
919ede059614"],

Cell[CellGroupData[{

Cell[BoxData["zmin"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.877899765858232*^9, 3.877899766206862*^9}},
 CellLabel->
  "In[457]:=",ExpressionUUID->"d03d8e42-57c7-434e-9014-591d89c37f98"],

Cell[BoxData[
 RowBox[{"-", "4"}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{{3.8778997694947357`*^9, 3.8778997744586143`*^9}, 
   3.877902330456007*^9, 3.877902382821459*^9, 3.8780557515303097`*^9, 
   3.882271105507769*^9, 3.88227215336375*^9, 3.882272755144224*^9, 
   3.882272903009502*^9, 3.882273062577958*^9, 3.8822737752139587`*^9},
 CellLabel->
  "Out[457]=",ExpressionUUID->"e55663ab-bc22-4a73-bb5b-04c490118c7b"]
}, Open  ]],

Cell["\<\
Set parameters for the optimization
  gridboxcutoff is the minimum amount of sand that a box must contain to be \
included. Specifically, if the difference between initial and final amounts \
of sand in that box is less than gridboxcutoff then the box is excluded from \
the calculation. Set this to 0 to include all boxes.\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.718714837186059*^9, 3.718714877180376*^9}, {
  3.718838284211881*^9, 
  3.718838346993821*^9}},ExpressionUUID->"d75deefd-6513-4d3c-a5eb-\
5061c90f76bc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"gridboxcutoff", "=", 
  RowBox[{".01", "/", 
   SuperscriptBox["nbox", "2"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "scale", " ", "to", " ", "nbox", "\[IndentingNewLine]", "divide", " ", 
    "by", " ", "nbox", " ", "square"}], "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7187155840273438`*^9, 3.718715593315936*^9}, 
   3.718837834737796*^9, 3.7338383153381925`*^9, {3.8414934264833436`*^9, 
   3.8414934476196184`*^9}, {3.875608785270916*^9, 3.8756088112454576`*^9}, {
   3.882271899836897*^9, 3.882271911107885*^9}, {3.8822729906416597`*^9, 
   3.8822729926229687`*^9}, {3.882528445337537*^9, 3.882528470417886*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"ca968382-f3a0-4270-a2aa-86f776bc4606"],

Cell[BoxData["0.0004`"], "Output",
 CellChangeTimes->{
  3.882525086718946*^9, {3.882528429051837*^9, 3.882528479023794*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"4a31bcfe-a8f4-4525-9355-71e72c75beb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"finitnorm", "[", 
  RowBox[{"x", ",", "y", ",", "z", ",", "y"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.877900368754545*^9, 3.877900391786859*^9}, {
  3.877900496626995*^9, 3.8779005040414143`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"f5940507-a400-45ac-b81d-783fbb88cfdc"],

Cell[BoxData[
 RowBox[{"finitnorm", "[", 
  RowBox[{"x", ",", "y", ",", "z", ",", "y"}], "]"}]], "Output",
 CellChangeTimes->{3.8825250898718157`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"4f49d38a-ad17-48aa-bc32-158eb40ba4a3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"finit", "[", 
  RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ffinal", "[", 
  RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.882272490156847*^9, 3.882272501691156*^9}},
 CellLabel->
  "In[460]:=",ExpressionUUID->"aefbd682-c15f-4f52-9f08-93cb757d27d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate Derived Quantities", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.718713923550826*^9, 
  3.718713930889989*^9}},ExpressionUUID->"fcab4606-304a-44f3-9ce6-\
a0e9f1cde2bb"],

Cell["\<\
Normalize the initial and final sand distributions within the total box.\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.718713478992344*^9, 
  3.7187134885471244`*^9}},ExpressionUUID->"19b38009-530a-4c05-9310-\
e585f52cffa9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"finitnorm", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "w_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"finit", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], "/", 
    RowBox[{"Parallelize", "[", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"finit", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", "zmin", ",", "zmax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"w", ",", "wmin", ",", "wmax"}], "}"}], ",", 
       RowBox[{"Method", "->", 
        RowBox[{"{", "\"\<GlobalAdaptive\>\"", "}"}]}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ffinalnorm", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "w_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"ffinal", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], "/", 
    RowBox[{"Parallelize", "[", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"ffinal", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"z", ",", "zmin", ",", "zmax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"w", ",", "wmin", ",", "wmax"}], "}"}], ",", 
       RowBox[{"Method", "->", 
        RowBox[{"{", "\"\<GlobalAdaptive\>\"", "}"}]}]}], "]"}], "]"}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7187132897194853`*^9, 3.718713321111663*^9}, {
  3.7187135349379406`*^9, 3.7187136370391617`*^9}, {3.7187144047611823`*^9, 
  3.718714411501978*^9}, {3.7489103073135967`*^9, 3.7489103183341403`*^9}, {
  3.877899043184792*^9, 3.877899063729828*^9}, {3.8778998086251707`*^9, 
  3.877899852051049*^9}, {3.8778998959048777`*^9, 3.8778998974732733`*^9}, {
  3.877900468455474*^9, 3.877900481952978*^9}, {3.8779006359160957`*^9, 
  3.877900651792243*^9}, {3.877900951586198*^9, 3.8779009538842163`*^9}, {
  3.877901024036831*^9, 3.877901026111554*^9}, {3.878055851826264*^9, 
  3.878055861114071*^9}, {3.882272380120509*^9, 3.882272384408659*^9}, {
  3.8822725252952213`*^9, 3.882272527686101*^9}, {3.882272589023706*^9, 
  3.882272609944558*^9}, {3.882526248838089*^9, 
  3.882526259746415*^9}},ExpressionUUID->"b5ce7998-2f93-4cd5-8a56-\
156a4db3e64b"],

Cell[BoxData[
 RowBox[{"finitnorm", "[", 
  RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.87790098798735*^9, 3.877901020429185*^9}},
 CellLabel->
  "In[465]:=",ExpressionUUID->"c44797cb-1405-4edf-9a26-ea3a4ddfce55"],

Cell[BoxData[
 RowBox[{"ffinalnorm", "[", 
  RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.882272426137673*^9, 3.882272426617476*^9}},
 CellLabel->
  "In[466]:=",ExpressionUUID->"41d822c9-e515-4619-ba99-33365e4cbe70"],

Cell["\<\
Calculate the amount of sand that needs to be moved from each box of the grid \
and store the results in an nbox x nbox grid called diffarray.
This is the difference between the initial and final amounts of sand, so a \
positive amount means sand needs to be moved away from this box (sources) and \
a negative amount means sand needs to be moved into this box (targets)\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.7187140698282948`*^9, 3.7187140763068504`*^9}, {
   3.7187149943912573`*^9, 3.7187150387746525`*^9}, {3.7187152642361326`*^9, 
   3.718715281446309*^9}, 3.747570827784646*^9, {3.747570864771738*^9, 
   3.7475709001404667`*^9}, {3.747571046420991*^9, 
   3.7475710917247972`*^9}},ExpressionUUID->"f7320f28-2730-49c2-90ec-\
36853d63e020"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dx", "=", 
   FractionBox[
    RowBox[{"xmax", "-", "xmin"}], "nbox"]}], ";", 
  RowBox[{"dy", "=", 
   FractionBox[
    RowBox[{"ymax", "-", "ymin"}], "nbox"]}], ";", 
  RowBox[{"dz", "=", 
   FractionBox[
    RowBox[{"zmax", "-", "zmin"}], "nbox"]}], ";", 
  RowBox[{"dw", "=", 
   FractionBox[
    RowBox[{"wmax", "-", "wmin"}], "nbox"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffarray", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"finitnorm", "[", 
         RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], "-", 
        RowBox[{"ffinalnorm", "[", 
         RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"xmin", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
         RowBox[{"xmin", "+", 
          RowBox[{"i", "*", "dx"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"ymin", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
         RowBox[{"ymin", "+", 
          RowBox[{"j", "*", "dy"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{"zmin", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "-", "1"}], ")"}], "*", "dz"}]}], ",", 
         RowBox[{"zmin", "+", 
          RowBox[{"k", "*", "dz"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"w", ",", 
         RowBox[{"wmin", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"l", "-", "1"}], ")"}], "*", "dw"}]}], ",", 
         RowBox[{"wmin", "+", 
          RowBox[{"l", "*", "dw"}]}]}], "}"}], ",", 
       RowBox[{"Method", "->", 
        RowBox[{"{", "\"\<GlobalAdaptive\>\"", "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nbox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "nbox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "nbox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "nbox"}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.718714081814747*^9, 3.7187141129027367`*^9}, {
   3.7187141544741526`*^9, 3.7187143172783017`*^9}, {3.718714421055709*^9, 
   3.7187144213419113`*^9}, {3.7187144546094537`*^9, 3.718714464540495*^9}, {
   3.7187147534778547`*^9, 3.718714755470257*^9}, {3.7187149653917446`*^9, 
   3.7187149895938635`*^9}, {3.718715133954979*^9, 3.7187151581871185`*^9}, {
   3.877899098908813*^9, 3.877899147844853*^9}, {3.877899208971393*^9, 
   3.8778992574903097`*^9}, {3.877899786887785*^9, 3.8778997879687443`*^9}, {
   3.8779003497883453`*^9, 3.877900351359305*^9}, {3.87790235845516*^9, 
   3.877902358569243*^9}, {3.878055846834485*^9, 3.878055846979607*^9}, {
   3.8822710258003473`*^9, 3.88227102616685*^9}, {3.8822722225270767`*^9, 
   3.8822722227597713`*^9}, 3.882272254226655*^9, {3.882272646041637*^9, 
   3.8822726538455887`*^9}, {3.882275080316695*^9, 3.882275082024537*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"e242a771-8e3e-4bfa-b60c-068cc29cb102"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.882525162950354*^9},
 CellLabel->
  "(kernel 3)",ExpressionUUID->"74b650e9-a6f2-4022-b33f-fc46379e12c9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.93628890809121`*^-13\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.275052509089179`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.882525168559923*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"18897248-c04f-4174-bf59-097bbd99fab7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.8825251721608877`*^9},
 CellLabel->
  "(kernel 3)",ExpressionUUID->"f4ae62f4-0e9c-4d7f-b158-3840532f0e73"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"7.233623506818336`*^-11\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"9.724472169997953`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.8825251894521008`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4f1fa562-75df-4220-8990-adff361f2de5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.88252519655543*^9},
 CellLabel->
  "(kernel 3)",ExpressionUUID->"6e8725c2-8152-4c90-90ec-078f65e4b663"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.8825251967060947`*^9},
 CellLabel->
  "(kernel 3)",ExpressionUUID->"fed103f3-6f0d-4694-b1de-4fda1c69116c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.174155809458844`*^-10\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.3357901628224267`*^-13\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.882525209213415*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6cd2e674-0018-4a71-ad34-cb8b708e22a7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.882525209304701*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"27492eb9-0629-430d-9e18-c887134febd0"]
}, Open  ]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.882525108446434*^9, 3.882525212302217*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"66391476-2ddb-4b00-bc83-176b9ccaac49"]
}, Open  ]],

Cell[BoxData["diffarray"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.882271151523635*^9, 3.8822711585374393`*^9}, {
  3.882272256718186*^9, 3.882272257785556*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"2c535cac-ee79-46b1-aea9-a10ae33bb0e8"],

Cell[BoxData["diffarray"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.882271470764914*^9, 3.8822714720915403`*^9}, {
  3.88227186644506*^9, 3.88227187052931*^9}, {3.882272091099242*^9, 
  3.882272093778336*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"755a50a2-2e56-4de3-9cc2-3fd085afa4ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Create Necessary Inputs to run FindMinimumCostFlow", \
"Section"]], "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.747572405771767*^9, 
  3.7475724495852785`*^9}},ExpressionUUID->"e8243c68-3d6c-445a-8e19-\
a68e650fe2cc"],

Cell["\<\

Create lists of all the boxes from which sand needs to be moved out \
(outboxes) and to which sand needs to be moved in (inboxes).
Each entry in one of those lists will be a list of two numbers: the x and y \
coordinates of the center of the grid box.\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.718715393471553*^9, 3.7187154746689825`*^9}, {
   3.7187155475985956`*^9, 3.7187155707979794`*^9}, {3.7187159199009247`*^9, 
   3.7187159375484276`*^9}, {3.718716818132281*^9, 3.718716839031063*^9}, {
   3.7320481965056753`*^9, 3.7320482074735203`*^9}, {3.732048253913473*^9, 
   3.732048254874402*^9}, {3.732048302752951*^9, 3.7320483353762054`*^9}, {
   3.74757182790379*^9, 3.747571829334055*^9}, 3.747572078460015*^9, {
   3.7475721406199784`*^9, 3.747572143906324*^9}, 3.747572220252279*^9, {
   3.7489098635711136`*^9, 
   3.748909867670958*^9}},ExpressionUUID->"092fc363-aaa3-4847-8d32-\
5984c856c9c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "diffarray", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.882271163476316*^9, 3.882271165281177*^9}, {
  3.882271800400872*^9, 3.8822718199347467`*^9}},
 CellLabel->
  "In[417]:=",ExpressionUUID->"e0835c5c-8e6c-4497-8454-91eae4ac5392"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "4", ",", "4", ",", "4"}], "}"}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{3.88227116577444*^9, 3.8822718235728683`*^9, 
  3.88227189137814*^9, 3.882272176120762*^9, 3.882272786593309*^9, 
  3.882272939784129*^9, 3.882273566791922*^9},
 CellLabel->
  "Out[417]=",ExpressionUUID->"e90284be-f22a-4316-9fe9-a290bb150175"],

Cell[BoxData["0.0001`"], "Output",
 InitializationCell->True,
 CellChangeTimes->{{3.882271169096603*^9, 3.882271189824561*^9}, 
   3.882271893580029*^9, {3.882272074890744*^9, 3.882272087650831*^9}, 
   3.8822721761481867`*^9, 3.882272786619363*^9, 3.882272939881152*^9, 
   3.882273566829381*^9},
 CellLabel->
  "Out[418]=",ExpressionUUID->"f35b2772-52d3-4324-9a3a-644ba71175b4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"outboxes", "=", 
    RowBox[{"{", "}"}]}], ";", 
   RowBox[{"inboxes", "=", 
    RowBox[{"{", "}"}]}], ";", " ", 
   RowBox[{"supplyamount", " ", "=", 
    RowBox[{"{", "}"}]}], ";", " ", 
   RowBox[{"demandamount", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "nbox"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "\[LessEqual]", "nbox"}], ",", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "<=", "nbox"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"l", "=", "1"}], ",", 
          RowBox[{"l", "<=", "nbox"}], ",", 
          RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"diffarray", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}], 
               "]"}], ">", "gridboxcutoff"}], ",", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"outboxes", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"xmin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "-", ".5"}], ")"}], "*", "dx"}]}], ",", 
                  RowBox[{"ymin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", ".5"}], ")"}], "*", "dy"}]}], ",", 
                  RowBox[{"zmin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"k", "-", ".5"}], ")"}], "*", "dz"}]}], ",", 
                  RowBox[{"wmin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"l", "-", ".5"}], ")"}], "*", "dw"}]}]}], "}"}]}],
                "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"supplyamount", ",", 
                RowBox[{"diffarray", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}]}],
                "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"diffarray", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}], 
              "<", 
              RowBox[{"-", "gridboxcutoff"}]}], ",", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"inboxes", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"xmin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "-", ".5"}], ")"}], "*", "dx"}]}], ",", 
                  RowBox[{"ymin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", ".5"}], ")"}], "*", "dy"}]}], ",", 
                  RowBox[{"zmin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "-", ".5"}], ")"}], "*", "dz"}]}], ",", 
                  RowBox[{"wmin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "-", ".5"}], ")"}], "*", "dw"}]}]}], "}"}]}],
                "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"demandamount", ",", 
                RowBox[{"diffarray", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}]}],
                "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], "]"}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7187151011727943`*^9, 3.718715117019005*^9}, {
   3.718715160978093*^9, 3.7187152354207497`*^9}, {3.7187152967701454`*^9, 
   3.718715389759921*^9}, {3.7187156660373745`*^9, 3.718715666405613*^9}, {
   3.7187158859058685`*^9, 3.7187159117441483`*^9}, {3.718716801836755*^9, 
   3.7187168126474085`*^9}, {3.7320454350464597`*^9, 3.732045475137607*^9}, {
   3.7320457835063353`*^9, 3.7320457839907713`*^9}, {3.7320459096176043`*^9, 
   3.732045914589596*^9}, {3.7320464038568344`*^9, 3.732046435487783*^9}, {
   3.732046561441983*^9, 3.7320465621295185`*^9}, {3.7320472556593637`*^9, 
   3.732047292387204*^9}, {3.7320473932194576`*^9, 3.7320474334639626`*^9}, 
   3.7320483527897673`*^9, {3.732632461103332*^9, 3.732632483734434*^9}, 
   3.7326325609955654`*^9, 3.7337936572063227`*^9, 3.7475711172050734`*^9, {
   3.747571190786585*^9, 3.747571242142131*^9}, {3.747571329054353*^9, 
   3.747571378354741*^9}, {3.7475714173245277`*^9, 3.7475714285559196`*^9}, {
   3.7475714797340403`*^9, 3.747571530544854*^9}, {3.7475718018644857`*^9, 
   3.747571819019231*^9}, 3.7475719317060776`*^9, 3.747571992940705*^9, 
   3.7475720498855886`*^9, 3.747572148700659*^9, 3.747572215160716*^9, {
   3.87789945621411*^9, 3.877899613084569*^9}, {3.8822719805425377`*^9, 
   3.882272002848894*^9}, {3.8822721015490837`*^9, 3.88227210427993*^9}, {
   3.8822728633368177`*^9, 3.8822728917074747`*^9}, {3.882526274001505*^9, 
   3.882526277427836*^9}, {3.882526376239431*^9, 
   3.882526376390458*^9}},ExpressionUUID->"cfe5b9e9-81c7-4f56-8413-\
dc9f32817438"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diffarray", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "]"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.882272066621097*^9, 3.882272069401288*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"ac9becb4-862a-4679-8bef-0e04f6614b4a"],

Cell[BoxData["1.0863922604202773`*^-11"], "Output",
 InitializationCell->True,
 CellChangeTimes->{3.88227206972738*^9, 3.882272176218402*^9, 
  3.8822727866918716`*^9, 3.882272940022346*^9, 3.882273566908662*^9},
 CellLabel->
  "Out[421]=",ExpressionUUID->"76450c65-c6f0-41a1-a539-d918bd5f065a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["inboxes"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.882272038880967*^9, 3.88227204819396*^9}, {
  3.88227211962315*^9, 3.882272125564938*^9}},
 CellLabel->
  "In[422]:=",ExpressionUUID->"9f097671-06e7-48f1-99e8-b47fd3a096c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "1.`"}], ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "1.`"}], ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "1.`"}], ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "1.`"}], ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", 
     RowBox[{"-", "1.`"}], ",", "3.`", ",", "3.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", 
     RowBox[{"-", "1.`"}], ",", "3.`", ",", "3.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", 
     RowBox[{"-", "1.`"}], ",", "3.`", ",", "3.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", 
     RowBox[{"-", "1.`"}], ",", "3.`", ",", "3.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "1.`", ",", "3.`", ",", "3.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "1.`", ",", "3.`", ",", "3.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "1.`", ",", "3.`", ",", "3.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "1.`", ",", "3.`", ",", "3.`"}], "}"}]}], 
  "}"}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{{3.882272041403685*^9, 3.882272049027986*^9}, 
   3.8822720803489847`*^9, {3.882272121037684*^9, 3.882272125867433*^9}, 
   3.882272176267364*^9, 3.882272786741789*^9, 3.8822729400748367`*^9, 
   3.8822735669641933`*^9},
 CellLabel->
  "Out[422]=",ExpressionUUID->"e57e7acd-f14d-4717-bd27-2284dc61ef7c"]
}, Open  ]],

Cell["\<\
The variables nout and nin are the numbers of boxes from which sand will be \
moved out or in.
 Their product, nvars, represents the total number of possible sand movements.\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{
  3.747572202183044*^9},ExpressionUUID->"ea38a638-617e-4d6b-a899-\
ec7e7738a359"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nout", "=", 
   RowBox[{"Length", "[", "outboxes", "]"}]}], ";", 
  RowBox[{"nin", "=", 
   RowBox[{"Length", "[", "inboxes", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nvars", "=", 
   RowBox[{"nout", "*", "nin"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellLabel->
  "In[423]:=",ExpressionUUID->"c519f25d-1b4c-4dc7-9014-9beb305424fc"],

Cell["\<\
 
Creating a graph of vertices and edges contributing to the flow (bipartite \
graph of two sets of vertices: source set and target sets) 
EdgeCost: Assigning cost to each edge which is calculated by the Euclidean \
Distance between the two vertices. \
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.7475721628591304`*^9, 
  3.7475721776949883`*^9}},ExpressionUUID->"bdee0d54-c772-4ebf-8f08-\
82b2ac36f63d"],

Cell[BoxData[""], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.732632593343721*^9, 3.7326326650452313`*^9}, {
   3.7475718419541245`*^9, 3.747571856638435*^9}, 3.747571982263337*^9},
 CellLabel->
  "In[425]:=",ExpressionUUID->"9de09c4f-f386-4390-aa08-f48212caebe6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nout", "+", "nin"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.875793799868103*^9, 3.875793802614621*^9}},
 CellLabel->
  "In[426]:=",ExpressionUUID->"9218c163-3a5d-473b-8ad5-586659ceda92"],

Cell[BoxData["48"], "Output",
 InitializationCell->True,
 CellChangeTimes->{
  3.875793820835017*^9, {3.875793888002529*^9, 3.875793952134191*^9}, 
   3.875793984998168*^9, 3.875794019713022*^9, 3.875794102587914*^9, 
   3.875794169302956*^9, {3.876262298902234*^9, 3.8762624729171753`*^9}, 
   3.876303023061964*^9, {3.876303053307283*^9, 3.8763030675195103`*^9}, 
   3.876303173715815*^9, {3.876303303336472*^9, 3.8763033552100153`*^9}, 
   3.876304495365291*^9, {3.8765854203638*^9, 3.8765854444276037`*^9}, 
   3.8766053546908083`*^9, 3.876605443268002*^9, 3.876605619214157*^9, 
   3.87660565196585*^9, 3.876605844734748*^9, 3.876606202738798*^9, 
   3.877899672460102*^9, 3.8822711291318073`*^9, 3.882271207332789*^9, 
   3.882272176357929*^9, 3.882272786836581*^9, 3.882272940299635*^9, 
   3.8822735670699673`*^9},
 CellLabel->
  "Out[426]=",ExpressionUUID->"6542adb6-40a8-4e2f-af88-808f26d20ccb"]
}, Open  ]],

Cell[BoxData[""], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7320488798519497`*^9, 3.7320488811962485`*^9}},
 NumberMarks->False,
 CellLabel->
  "In[427]:=",ExpressionUUID->"dc591b7d-79ea-46d9-9754-d7fe26af0c37"],

Cell[CellGroupData[{

Cell[BoxData["diffarray"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.882271259716155*^9, 3.882271281008009*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"7ce39394-0f08-4bf9-90cb-43b14c3ead99"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1.0863922604202773`*^-11", ",", "2.311618699871094`*^-9", ",", 
         "2.3116186998710925`*^-9", ",", "1.086392260420277`*^-11"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "2.311618699872953`*^-9", ",", "4.91864793719786`*^-7", ",", 
         "4.918647937197858`*^-7", ",", "2.3116186998729545`*^-9"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "2.311618699872952`*^-9", ",", "4.918647937197865`*^-7", ",", 
         "4.918647937197861`*^-7", ",", "2.3116186998729545`*^-9"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "1.0863922604202767`*^-11", ",", "2.3116186998710913`*^-9", ",", 
         "2.31161869987109`*^-9", ",", "1.0863922604202768`*^-11"}], "}"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2.311618699871092`*^-9", ",", "4.918647937197856`*^-7", ",", 
         "4.918647937197857`*^-7", ",", "2.311618699871093`*^-9"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "4.918647937197861`*^-7", ",", "0.00010465868550911432`", ",", 
         "0.00010465868550911432`", ",", "4.918647937197861`*^-7"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "4.918647937197867`*^-7", ",", "0.00010465868550911426`", ",", 
         "0.00010465868550911434`", ",", "4.918647937197869`*^-7"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "2.311618699871093`*^-9", ",", "4.918647937197856`*^-7", ",", 
         "4.918647937197859`*^-7", ",", "2.3116186998710954`*^-9"}], "}"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2.3116186998710917`*^-9", ",", "4.91864793719786`*^-7", ",", 
         "4.91864793719786`*^-7", ",", "2.311618699871094`*^-9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "4.91864793719786`*^-7", ",", "0.00010465868550911434`", ",", 
         "0.00010465868550911437`", ",", "4.918647937197862`*^-7"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "4.918647937197868`*^-7", ",", "0.00010465868550911434`", ",", 
         "0.00010465868550911432`", ",", "4.91864793719787`*^-7"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "2.3116186998710925`*^-9", ",", "4.91864793719786`*^-7", ",", 
         "4.918647937197862`*^-7", ",", "2.311618699871094`*^-9"}], "}"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1.0863922604202777`*^-11", ",", "2.3116186998710933`*^-9", ",", 
         "2.3116186998710913`*^-9", ",", "1.0863922604202767`*^-11"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "2.3116186998729537`*^-9", ",", "4.918647937197856`*^-7", ",", 
         "4.918647937197856`*^-7", ",", "2.3116186998729553`*^-9"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "2.3116186998729537`*^-9", ",", "4.91864793719786`*^-7", ",", 
         "4.918647937197857`*^-7", ",", "2.3116186998729537`*^-9"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "1.0863922604202767`*^-11", ",", "2.311618699871092`*^-9", ",", 
         "2.3116186998710913`*^-9", ",", "1.0863922604202767`*^-11"}], 
        "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "7.085715844924843`*^-10", ",", "1.5076942216359413`*^-7", ",", 
         "1.5076942216359418`*^-7", ",", "7.085715844924852`*^-10"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "1.5076942216359447`*^-7", ",", "0.000032080624120648274`", ",", 
         "0.000032080624120648234`", ",", "1.5076942216359453`*^-7"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "1.5076942216359474`*^-7", ",", "0.00003208062412064826`", ",", 
         "0.00003208062412064824`", ",", "1.507694221635946`*^-7"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "7.085715844924841`*^-10", ",", "1.5076942216359413`*^-7", ",", 
         "1.5076942216359424`*^-7", ",", "7.085715844924845`*^-10"}], "}"}]}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1.5076942216359434`*^-7", ",", "0.000032080624120648166`", ",", 
         "0.00003208062412064816`", ",", "1.5076942216359455`*^-7"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "0.00003208062412064825`", ",", "0.006826095297573079`", ",", 
         "0.006826095297573073`", ",", "0.00003208062412064825`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "0.00003208062412064824`", ",", "0.006826095297573075`", ",", 
         "0.006826095297573073`", ",", "0.00003208062412064821`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "1.507694221635945`*^-7", ",", "0.000032080624120648186`", ",", 
         "0.00003208062412064815`", ",", "1.5076942216359466`*^-7"}], "}"}]}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1.5076942216359442`*^-7", ",", "0.00003208062412064817`", ",", 
         "0.00003208062412064816`", ",", "1.5076942216359463`*^-7"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "0.00003208062412064821`", ",", "0.006826095297573075`", ",", 
         "0.006826095297573072`", ",", "0.00003208062412064824`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "0.00003208062412064823`", ",", "0.006826095297573071`", ",", 
         "0.006826095297573074`", ",", "0.00003208062412064821`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "1.5076942216359453`*^-7", ",", "0.00003208062412064814`", ",", 
         "0.000032080624120648146`", ",", "1.5076942216359482`*^-7"}], 
        "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "7.085715844924843`*^-10", ",", "1.5076942216359413`*^-7", ",", 
         "1.5076942216359413`*^-7", ",", "7.085715844924849`*^-10"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "1.5076942216359447`*^-7", ",", "0.00003208062412064826`", ",", 
         "0.000032080624120648234`", ",", "1.5076942216359437`*^-7"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "1.5076942216359463`*^-7", ",", "0.000032080624120648274`", ",", 
         "0.00003208062412064824`", ",", "1.507694221635946`*^-7"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
        "7.085715844924836`*^-10", ",", "1.5076942216359418`*^-7", ",", 
         "1.5076942216359424`*^-7", ",", "7.085715844924843`*^-10"}], "}"}]}],
       "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "7.032392721850247`*^-10"}], ",", 
         RowBox[{"-", "1.4963481609275778`*^-7"}], ",", 
         RowBox[{"-", "1.4963481609275778`*^-7"}], ",", 
         RowBox[{"-", "7.032392721850246`*^-10"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.4963481609275762`*^-7"}], ",", 
         RowBox[{"-", "0.0000318392032958733`"}], ",", 
         RowBox[{"-", "0.00003183920329587331`"}], ",", 
         RowBox[{"-", "1.4963481609275762`*^-7"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.4963481609275773`*^-7"}], ",", 
         RowBox[{"-", "0.0000318392032958733`"}], ",", 
         RowBox[{"-", "0.000031839203295873284`"}], ",", 
         RowBox[{"-", "1.4963481609275768`*^-7"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "7.032392721850243`*^-10"}], ",", 
         RowBox[{"-", "1.4963481609275768`*^-7"}], ",", 
         RowBox[{"-", "1.4963481609275757`*^-7"}], ",", 
         RowBox[{"-", "7.032392721850245`*^-10"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.4963481609275786`*^-7"}], ",", 
         RowBox[{"-", "0.000031839203295873406`"}], ",", 
         RowBox[{"-", "0.000031839203295873406`"}], ",", 
         RowBox[{"-", "1.4963481609275802`*^-7"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.00003183920329587325`"}], ",", 
         RowBox[{"-", "0.006774725902390451`"}], ",", 
         RowBox[{"-", "0.006774725902390454`"}], ",", 
         RowBox[{"-", "0.000031839203295873196`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.00003183920329587328`"}], ",", 
         RowBox[{"-", "0.006774725902390452`"}], ",", 
         RowBox[{"-", "0.0067747259023904546`"}], ",", 
         RowBox[{"-", "0.00003183920329587321`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.4963481609275797`*^-7"}], ",", 
         RowBox[{"-", "0.00003183920329587342`"}], ",", 
         RowBox[{"-", "0.0000318392032958734`"}], ",", 
         RowBox[{"-", "1.4963481609275802`*^-7"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.4963481609275783`*^-7"}], ",", 
         RowBox[{"-", "0.00003183920329587339`"}], ",", 
         RowBox[{"-", "0.0000318392032958734`"}], ",", 
         RowBox[{"-", "1.4963481609275783`*^-7"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.00003183920329587325`"}], ",", 
         RowBox[{"-", "0.006774725902390453`"}], ",", 
         RowBox[{"-", "0.006774725902390452`"}], ",", 
         RowBox[{"-", "0.00003183920329587322`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.000031839203295873264`"}], ",", 
         RowBox[{"-", "0.006774725902390454`"}], ",", 
         RowBox[{"-", "0.006774725902390453`"}], ",", 
         RowBox[{"-", "0.00003183920329587322`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.496348160927579`*^-7"}], ",", 
         RowBox[{"-", "0.00003183920329587339`"}], ",", 
         RowBox[{"-", "0.000031839203295873365`"}], ",", 
         RowBox[{"-", "1.4963481609275794`*^-7"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "7.032392721850246`*^-10"}], ",", 
         RowBox[{"-", "1.4963481609275757`*^-7"}], ",", 
         RowBox[{"-", "1.4963481609275762`*^-7"}], ",", 
         RowBox[{"-", "7.03239272185025`*^-10"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.4963481609275762`*^-7"}], ",", 
         RowBox[{"-", "0.00003183920329587329`"}], ",", 
         RowBox[{"-", "0.00003183920329587328`"}], ",", 
         RowBox[{"-", "1.4963481609275762`*^-7"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.4963481609275765`*^-7"}], ",", 
         RowBox[{"-", "0.000031839203295873284`"}], ",", 
         RowBox[{"-", "0.00003183920329587327`"}], ",", 
         RowBox[{"-", "1.4963481609275768`*^-7"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "7.03239272185024`*^-10"}], ",", 
         RowBox[{"-", "1.4963481609275762`*^-7"}], ",", 
         RowBox[{"-", "1.4963481609275762`*^-7"}], ",", 
         RowBox[{"-", "7.032392721850242`*^-10"}]}], "}"}]}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.619626253955219`*^-11"}], ",", 
         RowBox[{"-", "3.4462306815952746`*^-9"}], ",", 
         RowBox[{"-", "3.4462306815952713`*^-9"}], ",", 
         RowBox[{"-", "1.6196262539552184`*^-11"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3.446230681598067`*^-9"}], ",", 
         RowBox[{"-", "7.332868272408968`*^-7"}], ",", 
         RowBox[{"-", "7.33286827240897`*^-7"}], ",", 
         RowBox[{"-", "3.446230681598069`*^-9"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3.4462306815980676`*^-9"}], ",", 
         RowBox[{"-", "7.332868272408972`*^-7"}], ",", 
         RowBox[{"-", "7.33286827240897`*^-7"}], ",", 
         RowBox[{"-", "3.4462306815980696`*^-9"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.619626253955221`*^-11"}], ",", 
         RowBox[{"-", "3.4462306815952705`*^-9"}], ",", 
         RowBox[{"-", "3.4462306815952713`*^-9"}], ",", 
         RowBox[{"-", "1.6196262539552207`*^-11"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3.4462306815952676`*^-9"}], ",", 
         RowBox[{"-", "7.332868272408973`*^-7"}], ",", 
         RowBox[{"-", "7.332868272408971`*^-7"}], ",", 
         RowBox[{"-", "3.44623068159527`*^-9"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "7.332868272408952`*^-7"}], ",", 
         RowBox[{"-", "0.0001560283156023084`"}], ",", 
         RowBox[{"-", "0.0001560283156023085`"}], ",", 
         RowBox[{"-", "7.332868272408954`*^-7"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "7.332868272408963`*^-7"}], ",", 
         RowBox[{"-", "0.00015602831560230845`"}], ",", 
         RowBox[{"-", "0.00015602831560230845`"}], ",", 
         RowBox[{"-", "7.332868272408956`*^-7"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3.446230681595266`*^-9"}], ",", 
         RowBox[{"-", "7.332868272408975`*^-7"}], ",", 
         RowBox[{"-", "7.332868272408975`*^-7"}], ",", 
         RowBox[{"-", "3.4462306815952676`*^-9"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3.4462306815952684`*^-9"}], ",", 
         RowBox[{"-", "7.332868272408975`*^-7"}], ",", 
         RowBox[{"-", "7.332868272408969`*^-7"}], ",", 
         RowBox[{"-", "3.4462306815952692`*^-9"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "7.332868272408959`*^-7"}], ",", 
         RowBox[{"-", "0.0001560283156023084`"}], ",", 
         RowBox[{"-", "0.00015602831560230845`"}], ",", 
         RowBox[{"-", "7.332868272408954`*^-7"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "7.332868272408961`*^-7"}], ",", 
         RowBox[{"-", "0.00015602831560230856`"}], ",", 
         RowBox[{"-", "0.0001560283156023085`"}], ",", 
         RowBox[{"-", "7.33286827240896`*^-7"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3.4462306815952667`*^-9"}], ",", 
         RowBox[{"-", "7.332868272408974`*^-7"}], ",", 
         RowBox[{"-", "7.332868272408971`*^-7"}], ",", 
         RowBox[{"-", "3.4462306815952684`*^-9"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.619626253955219`*^-11"}], ",", 
         RowBox[{"-", "3.446230681595272`*^-9"}], ",", 
         RowBox[{"-", "3.4462306815952713`*^-9"}], ",", 
         RowBox[{"-", "1.6196262539552184`*^-11"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3.446230681598068`*^-9"}], ",", 
         RowBox[{"-", "7.33286827240897`*^-7"}], ",", 
         RowBox[{"-", "7.33286827240897`*^-7"}], ",", 
         RowBox[{"-", "3.4462306815980663`*^-9"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3.446230681598067`*^-9"}], ",", 
         RowBox[{"-", "7.332868272408966`*^-7"}], ",", 
         RowBox[{"-", "7.33286827240897`*^-7"}], ",", 
         RowBox[{"-", "3.4462306815980647`*^-9"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.619626253955221`*^-11"}], ",", 
         RowBox[{"-", "3.4462306815952696`*^-9"}], ",", 
         RowBox[{"-", "3.4462306815952696`*^-9"}], ",", 
         RowBox[{"-", "1.6196262539552184`*^-11"}]}], "}"}]}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{{3.882271261523583*^9, 3.882271282069529*^9}, 
   3.8822721764338408`*^9, 3.8822727869110603`*^9, 3.882272940422928*^9, 
   3.882273567152956*^9},
 CellLabel->
  "Out[428]=",ExpressionUUID->"c59b0b91-28cd-40a9-939b-14fccde70c5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["outboxes"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.882272848554525*^9, 3.882272849235661*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"ac6d9e38-7684-4e25-a993-060a9bb69a50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", "1.`", ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.`"}], ",", "1.`", ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.`"}], ",", "1.`", ",", 
     RowBox[{"-", "1.`"}], ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.`"}], ",", "1.`", ",", "1.`", ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.`"}], ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", "1.`", ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", "1.`", ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", "1.`", ",", 
     RowBox[{"-", "1.`"}], ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", "1.`", ",", "1.`", ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "1.`"}], ",", "1.`", ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "1.`"}], ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.`", ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.`", ",", 
     RowBox[{"-", "1.`"}], ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.`", ",", "1.`", ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}], ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", 
     RowBox[{"-", "1.`"}], ",", "1.`", ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", 
     RowBox[{"-", "1.`"}], ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "1.`", ",", 
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "1.`", ",", 
     RowBox[{"-", "1.`"}], ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "1.`", ",", "1.`", ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}]}], 
  "}"}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{3.882272850052783*^9, 3.882272940479404*^9, 
  3.882273567222188*^9},
 CellLabel->
  "Out[429]=",ExpressionUUID->"82b5e038-64f3-4ca1-bc1f-2c5f52ca3062"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["New codes begin here", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.8413586497106695`*^9, 
  3.8413586567506685`*^9}},ExpressionUUID->"117a2483-1641-4b45-8ab7-\
fdf6eea144a7"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "mat0", ",", "i", ",", "j", ",", "mat", ",", "k", ",", "l", ",", "m", ",", 
   "n"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8414455693714323`*^9, 3.841445573032248*^9}, {
  3.841446523782212*^9, 3.8414465288888655`*^9}, {3.8414467553688374`*^9, 
  3.841446758540719*^9}, {3.841447872694888*^9, 3.8414478747358923`*^9}, {
  3.8414801748109426`*^9, 3.8414802033999434`*^9}, {3.841481094388789*^9, 
  3.8414810992017703`*^9}, {3.84148121384779*^9, 3.8414812146497726`*^9}, {
  3.841481352167692*^9, 3.8414813523376937`*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"20972584-798a-4fa8-84b9-0f52f5c85be4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Create", " ", "the", " ", "cost", " ", "matrix", " ", "with", " ", "rows",
     " ", "being", " ", "all", " ", "supplying", " ", "boxes", " ", "and", 
    " ", "columns", " ", "being", " ", "all", " ", "demanding", " ", 
    RowBox[{"boxes", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mat", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{
         RowBox[{"outboxes", "[", 
          RowBox[{"[", "o", "]"}], "]"}], ",", " ", 
         RowBox[{"inboxes", "[", 
          RowBox[{"[", "q", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"o", ",", 
         RowBox[{"Length", "@", "outboxes"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"q", ",", " ", 
         RowBox[{"Length", "@", "inboxes"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "FindMinimumCostFlow", " ", "method", " ", "requires", " ", "the", " ", 
      "columns", " ", "and", " ", "the", " ", "rows", " ", "to", " ", 
      "contain", " ", "all", " ", "boxes"}], ",", 
     RowBox[{
     "no", " ", "matter", " ", "supplying", " ", "or", " ", "demanding"}], 
     ",", " ", 
     RowBox[{
     "though", " ", "I", " ", "think", " ", "the", " ", "method", " ", "will",
       " ", "not", " ", "actually", " ", "use", " ", "the", " ", "diagonally",
       " ", "lower", " ", "half", " ", "of", " ", "the", " ", "matrix"}], ",",
      " ", 
     RowBox[{
      RowBox[{
      "so", " ", "we", " ", "can", " ", "keep", " ", "elements", " ", "in", 
       " ", "that", " ", "part", " ", "quatiling", " ", "to", " ", "0.", " ", 
       "\[IndentingNewLine]", "Now", " ", "create", " ", "a", " ", "zero", 
       " ", "matrix", " ", "with", " ", "#", " ", "of", " ", "columns"}], "=", 
      RowBox[{
       RowBox[{"#", " ", "of", " ", "rows"}], "=", 
       RowBox[{"#", " ", "of", " ", "all", " ", "boxes"}]}]}], ",", " ", 
     RowBox[{
     "and", " ", "put", " ", "the", " ", "cost", " ", "matrix", " ", "from", 
      " ", "previous", " ", "section", " ", "onto", " ", "the", " ", "upper", 
      " ", "right", " ", "part", " ", "of", " ", "the", " ", "zero", " ", 
      "matrix"}], ",", 
     RowBox[{
     "where", " ", "the", " ", "rows", " ", "are", " ", "supplying", " ", 
      "boxes", " ", "and", " ", "columns", " ", "are", " ", "demanding", " ", 
      
      RowBox[{"boxes", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "@", "outboxes"}], "+", 
         RowBox[{"Length", "@", "inboxes"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "@", "outboxes"}], "+", 
         RowBox[{"Length", "@", "inboxes"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", 
      RowBox[{"Length", "@", "outboxes"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", 
        RowBox[{
         RowBox[{"Length", "@", "outboxes"}], "+", "1"}]}], ",", 
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "@", "inboxes"}], "+", 
          RowBox[{"Length", "@", "outboxes"}]}], ")"}]}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"mat", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{"j", "-", 
            RowBox[{"Length", "@", "outboxes"}]}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{
       RowBox[{"Length", "@", "outboxes"}], "+", "1"}]}], ",", 
     RowBox[{"m", "\[LessEqual]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "@", "inboxes"}], "+", 
        RowBox[{"Length", "@", "outboxes"}], "-", "1"}], ")"}]}], ",", 
     RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "@", "outboxes"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "m"}], "]"}], "]"}], "=", 
        RowBox[{"mat", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{"m", "-", 
            RowBox[{"Length", "@", "outboxes"}]}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", "//", "MatrixForm"}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8414481719044375`*^9, 3.841448263199439*^9}, {
   3.8414482987994437`*^9, 3.8414483691114388`*^9}, {3.8414485856880803`*^9, 
   3.8414486575770683`*^9}, 3.8414793839445667`*^9, {3.8414796056779747`*^9, 
   3.8414796184409695`*^9}, {3.8414796666909957`*^9, 
   3.8414796693719974`*^9}, {3.8414797189669995`*^9, 3.841479736503998*^9}, {
   3.8414797957833433`*^9, 3.841479808655347*^9}, {3.8414798408483453`*^9, 
   3.8414798409783597`*^9}, {3.84147992159634*^9, 3.8414800628595266`*^9}, {
   3.841481328512048*^9, 3.8414813388010445`*^9}, 3.875793730245781*^9, {
   3.87660389009202*^9, 3.8766039646544323`*^9}, {3.8766040101822023`*^9, 
   3.876604013907318*^9}, {3.876604069481089*^9, 3.876604084193413*^9}, {
   3.876604188980917*^9, 3.876604207241887*^9}, {3.876604251078076*^9, 
   3.876604256005031*^9}, {3.8766046287970743`*^9, 3.8766046377635937`*^9}},
 CellLabel->
  "In[431]:=",ExpressionUUID->"e30c583a-48db-4e9d-bb1b-a1a9ff7ba5ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "mat0", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.87660465674741*^9, 3.8766046585749807`*^9}},
 CellLabel->
  "In[436]:=",ExpressionUUID->"1a86986b-ebbf-4537-9f3c-311049a309d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"48", ",", "48"}], "}"}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{{3.8766046405721188`*^9, 3.8766046699643087`*^9}, 
   3.876605355140252*^9, 3.876605443781749*^9, 3.8766056199260406`*^9, 
   3.876605652961513*^9, 3.876605846385687*^9, 3.876606204224636*^9, 
   3.8778996725647383`*^9, 3.882271129255864*^9, 3.88227217653233*^9, 
   3.8822727870946283`*^9, 3.882272940764893*^9, 3.88227356732495*^9},
 CellLabel->
  "Out[436]=",ExpressionUUID->"e6e26734-3fc2-4c4d-a617-e8d33a4fea2b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Then", " ", "put", " ", "in", " ", "the", " ", "numbers", " ", "for", " ",
     "the", " ", "upper", " ", "left", " ", "section"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "<=", 
      RowBox[{"Length", "@", "outboxes"}]}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"l", "=", 
        RowBox[{"k", "+", "1"}]}], ",", 
       RowBox[{"l", "\[LessEqual]", 
        RowBox[{"Length", "@", "outboxes"}]}], ",", 
       RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "l"}], "]"}], "]"}], "=", 
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{
          RowBox[{"outboxes", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", " ", 
          RowBox[{"outboxes", "[", 
           RowBox[{"[", "l", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]",
       "]"}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", "//", "MatrixForm"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.841479395850571*^9, 3.8414793960655684`*^9}, {
   3.841479742842001*^9, 3.8414797697763433`*^9}, {3.841479816531345*^9, 
   3.841479843832347*^9}, 3.875793734593319*^9},
 CellLabel->
  "In[437]:=",ExpressionUUID->"0a613f1b-6fd9-4023-83a5-cbba5bcd8639"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"For", " ", "the", " ", "lower", " ", "right"}], ".."}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{
       RowBox[{"Length", "@", "outboxes"}], "+", "1"}]}], ",", 
     RowBox[{"m", "\[LessEqual]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "@", "inboxes"}], "+", 
        RowBox[{"Length", "@", "outboxes"}], "-", "1"}], ")"}]}], ",", 
     RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{"m", "+", "1"}]}], ",", 
       RowBox[{"n", "\[LessEqual]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "@", "inboxes"}], "+", 
          RowBox[{"Length", "@", "outboxes"}]}], ")"}]}], ",", 
       RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"m", ",", "n"}], "]"}], "]"}], "=", 
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{
          RowBox[{"inboxes", "[", 
           RowBox[{"[", 
            RowBox[{"m", "-", 
             RowBox[{"Length", "@", "outboxes"}]}], "]"}], "]"}], ",", " ", 
          RowBox[{"inboxes", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", 
             RowBox[{"Length", "@", "outboxes"}]}], "]"}], "]"}]}], "]"}]}]}],
       "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", "//", "MatrixForm"}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.841479846079341*^9, 3.841479878728359*^9}, {
   3.841481153466199*^9, 3.841481159092202*^9}, 3.8757939306154327`*^9, {
   3.876262330300892*^9, 3.87626235304852*^9}, {3.87630306970643*^9, 
   3.876303071201099*^9}},
 CellLabel->
  "In[439]:=",ExpressionUUID->"c029af73-768c-4108-97fe-6e4710dc2c0c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "mat0", "]"}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[441]:=",ExpressionUUID->"70d6d486-a1c3-4547-8488-cdc7e8c39b2b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"48", ",", "48"}], "}"}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{3.8766046889535093`*^9, 3.876605355358542*^9, 
  3.8766054440529633`*^9, 3.8766056201624107`*^9, 3.876605653444491*^9, 
  3.8766058472473087`*^9, 3.876606204718449*^9, 3.87789967263745*^9, 
  3.882271129331438*^9, 3.882271228707242*^9, 3.882272176631836*^9, 
  3.8822727871837873`*^9, 3.882272940946145*^9, 3.8822735675327272`*^9},
 CellLabel->
  "Out[441]=",ExpressionUUID->"cac58ceb-a69a-49f7-9bd8-24e46cc6c0b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<supplyamount.csv\>\"", ",", "supplyamount", ",", "\"\<CSV\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<demandamount.csv\>\"", ",", "demandamount", ",", "\"\<CSV\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<mat0.csv\>\"", ",", "mat0", ",", "\"\<CSV\>\""}], 
  "]"}]}], "Input",
 InitializationCell->True,
 CellLabel->
  "In[442]:=",ExpressionUUID->"6778bc4a-8474-4cbc-992b-8135442ad2d0"],

Cell[BoxData["\<\"supplyamount.csv\"\>"], "Output",
 InitializationCell->True,
 CellChangeTimes->{3.876605444090106*^9, 3.876605620220331*^9, 
  3.8766056535138807`*^9, 3.876605847319927*^9, 3.876606204790926*^9, 
  3.877899675430635*^9, 3.882271132964574*^9, 3.882272176690205*^9, 
  3.882272787213745*^9, 3.882272941071734*^9, 3.882273567588805*^9},
 CellLabel->
  "Out[442]=",ExpressionUUID->"ec9a3b68-816b-415b-b472-ba772f41afe7"],

Cell[BoxData["\<\"demandamount.csv\"\>"], "Output",
 InitializationCell->True,
 CellChangeTimes->{3.876605444090106*^9, 3.876605620220331*^9, 
  3.8766056535138807`*^9, 3.876605847319927*^9, 3.876606204790926*^9, 
  3.877899675430635*^9, 3.882271132964574*^9, 3.882272176690205*^9, 
  3.882272787213745*^9, 3.882272941071734*^9, 3.882273567604135*^9},
 CellLabel->
  "Out[443]=",ExpressionUUID->"f7087c80-0d40-4e90-9765-37321501cdeb"],

Cell[BoxData["\<\"mat0.csv\"\>"], "Output",
 InitializationCell->True,
 CellChangeTimes->{3.876605444090106*^9, 3.876605620220331*^9, 
  3.8766056535138807`*^9, 3.876605847319927*^9, 3.876606204790926*^9, 
  3.877899675430635*^9, 3.882271132964574*^9, 3.882272176690205*^9, 
  3.882272787213745*^9, 3.882272941071734*^9, 3.882273567611347*^9},
 CellLabel->
  "Out[444]=",ExpressionUUID->"780a74b7-2e34-4d16-a6e2-2dac02005eb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Find", " ", "the", " ", "minimum", " ", "cost", " ", "flow"}], 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"distance", "=", 
   RowBox[{"FindMinimumCostFlow", "[", " ", 
    RowBox[{"mat0", ",", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"supplyamount", ",", "demandamount"}], "]"}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.841479871470343*^9, 3.8414798990173435`*^9}, {
   3.8762622784028587`*^9, 3.8762623497679367`*^9}, {3.876262407259721*^9, 
   3.876262409381081*^9}, 3.8762624633824673`*^9, {3.8763029991594877`*^9, 
   3.876302999420178*^9}, {3.876303041838646*^9, 3.876303057947942*^9}, {
   3.876303192509048*^9, 3.876303195754176*^9}, {3.8763032640470037`*^9, 
   3.876303345178494*^9}, {3.876304469196013*^9, 3.8763044811269207`*^9}, {
   3.876304640583706*^9, 3.8763046407153883`*^9}, 3.8765854310417347`*^9, {
   3.88235403819563*^9, 
   3.882354039695043*^9}},ExpressionUUID->"af01a8e1-9a86-4f77-bf0c-\
bcef528cc5d2"],

Cell[BoxData["0.11327307046402173`"], "Output",
 InitializationCell->True,
 CellChangeTimes->{{3.8762623709534893`*^9, 3.8762624219059963`*^9}, {
   3.876303024203535*^9, 3.876303067926257*^9}, 3.8763031744978313`*^9, {
   3.876303287815226*^9, 3.876303290712359*^9}, {3.876304470531726*^9, 
   3.876304479291031*^9}, {3.876585420906397*^9, 3.876585445007853*^9}, 
   3.8766053554254293`*^9, 3.876605620717754*^9, 3.876605655805501*^9, 
   3.876606207228194*^9, 3.877899675591814*^9, 3.882271133386982*^9, {
   3.8822712211854467`*^9, 3.882271231737917*^9}, 3.882272176757715*^9, 
   3.882272787283279*^9, 3.882272941175708*^9, 3.8822735676680193`*^9},
 CellLabel->
  "Out[445]=",ExpressionUUID->"b150dfa1-d6be-44d2-8f51-a4e0c56b33dd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"totaltime", "=", 
  RowBox[{
   RowBox[{"AbsoluteTime", "[", "]"}], "-", "begint"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8822738087106047`*^9, 3.882273819514697*^9}, {
   3.882354029777781*^9, 3.882354033114147*^9}, 3.882356628071085*^9, 
   3.88235671556569*^9},ExpressionUUID->"4e76986a-849c-4ce9-b4b4-\
12f01df55d6c"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 747},
WindowMargins->{{166, Automatic}, {36, Automatic}},
FrontEndVersion->"13.1 for Mac OS X x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"64969ba6-973d-4c94-9b50-c0ae4e8366c0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 768, 14, 89, "Input",ExpressionUUID->"02a91139-9e12-413c-8074-2b123cf8870f",
 InitializationCell->True],
Cell[1351, 38, 211, 2, 34, "Output",ExpressionUUID->"ff97d060-9e22-407e-846d-3f02ef1d39aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1599, 45, 267, 5, 160, "Title",ExpressionUUID->"5ab48ef2-37b6-4427-9b76-52beb23a2d40",
 InitializationCell->True],
Cell[1869, 52, 818, 23, 81, "Text",ExpressionUUID->"218fb7cb-ad86-4458-be35-483377849491",
 InitializationCell->True],
Cell[2690, 77, 390, 8, 58, "Text",ExpressionUUID->"547b3576-5df0-4ac7-b122-771ad07fe964",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3105, 89, 188, 4, 67, "Section",ExpressionUUID->"d7fc7ce7-81d8-4cbd-9dcf-8cfc9958b6a0",
 InitializationCell->True],
Cell[3296, 95, 333, 8, 35, "Text",ExpressionUUID->"79599781-ac64-4776-9359-b334ce0a95f4",
 InitializationCell->True],
Cell[3632, 105, 1999, 34, 89, "Input",ExpressionUUID->"61d4b75a-5312-41ec-a10d-5b02d98bccd5",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[5656, 143, 3762, 117, 317, "Input",ExpressionUUID->"b5d5b115-91cc-459b-94bc-d68b112b873e",
 InitializationCell->True],
Cell[9421, 262, 1781, 31, 57, "Output",ExpressionUUID->"b66335c7-8625-4bbd-85a8-168659eadcc2",
 InitializationCell->True],
Cell[11205, 295, 1860, 34, 57, "Output",ExpressionUUID->"4f9ea409-3b0a-4cbd-a247-20173d60f6ae",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[13102, 334, 866, 21, 46, "Input",ExpressionUUID->"cd84edeb-706b-48c5-8846-b9c3398f8109",
 InitializationCell->True],
Cell[13971, 357, 155357, 2527, 302, "Output",ExpressionUUID->"cbef7567-bac8-43b1-a53d-6e97570da7ac",
 InitializationCell->True]
}, Open  ]],
Cell[169343, 2887, 516, 10, 104, "Text",ExpressionUUID->"2dc1d979-afd3-404a-9954-c9ca4348457d",
 InitializationCell->True],
Cell[169862, 2899, 3628, 61, 257, "Input",ExpressionUUID->"74e42838-0b56-4c36-af93-919ede059614",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[173515, 2964, 206, 4, 46, "Input",ExpressionUUID->"d03d8e42-57c7-434e-9014-591d89c37f98",
 InitializationCell->True],
Cell[173724, 2970, 438, 8, 34, "Output",ExpressionUUID->"e55663ab-bc22-4a73-bb5b-04c490118c7b",
 InitializationCell->True]
}, Open  ]],
Cell[174177, 2981, 549, 11, 104, "Text",ExpressionUUID->"d75deefd-6513-4d3c-a5eb-5061c90f76bc",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[174751, 2996, 780, 15, 90, "Input",ExpressionUUID->"ca968382-f3a0-4270-a2aa-86f776bc4606",
 InitializationCell->True],
Cell[175534, 3013, 204, 3, 34, "Output",ExpressionUUID->"4a31bcfe-a8f4-4525-9355-71e72c75beb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175775, 3021, 328, 6, 46, "Input",ExpressionUUID->"f5940507-a400-45ac-b81d-783fbb88cfdc",
 InitializationCell->True],
Cell[176106, 3029, 229, 4, 34, "Output",ExpressionUUID->"4f49d38a-ad17-48aa-bc32-158eb40ba4a3"]
}, Open  ]],
Cell[176350, 3036, 382, 8, 68, "Input",ExpressionUUID->"aefbd682-c15f-4f52-9f08-93cb757d27d3",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[176769, 3049, 200, 4, 67, "Section",ExpressionUUID->"fcab4606-304a-44f3-9ce6-a0e9f1cde2bb",
 InitializationCell->True],
Cell[176972, 3055, 251, 6, 35, "Text",ExpressionUUID->"19b38009-530a-4c05-9310-e585f52cffa9",
 InitializationCell->True],
Cell[177226, 3063, 2646, 60, 194, "Input",ExpressionUUID->"b5ce7998-2f93-4cd5-8a56-156a4db3e64b",
 InitializationCell->True],
Cell[179875, 3125, 280, 6, 46, "Input",ExpressionUUID->"c44797cb-1405-4edf-9a26-ea3a4ddfce55",
 InitializationCell->True],
Cell[180158, 3133, 282, 6, 46, "Input",ExpressionUUID->"41d822c9-e515-4619-ba99-33365e4cbe70",
 InitializationCell->True],
Cell[180443, 3141, 780, 13, 127, "Text",ExpressionUUID->"f7320f28-2730-49c2-90ec-36853d63e020",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[181248, 3158, 3290, 81, 194, "Input",ExpressionUUID->"e242a771-8e3e-4bfa-b60c-068cc29cb102",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[184563, 3243, 468, 10, 82, "Print",ExpressionUUID->"74b650e9-a6f2-4022-b33f-fc46379e12c9"],
Cell[185034, 3255, 1022, 18, 177, "Print",ExpressionUUID->"18897248-c04f-4174-bf59-097bbd99fab7"],
Cell[186059, 3275, 470, 10, 82, "Print",ExpressionUUID->"f4ae62f4-0e9c-4d7f-b158-3840532f0e73"],
Cell[186532, 3287, 1025, 18, 177, "Print",ExpressionUUID->"4f1fa562-75df-4220-8990-adff361f2de5"],
Cell[187560, 3307, 467, 10, 82, "Print",ExpressionUUID->"6e8725c2-8152-4c90-90ec-078f65e4b663"],
Cell[188030, 3319, 447, 10, 44, "Print",ExpressionUUID->"fed103f3-6f0d-4694-b1de-4fda1c69116c"],
Cell[188480, 3331, 1024, 18, 177, "Print",ExpressionUUID->"6cd2e674-0018-4a71-ad34-cb8b708e22a7"],
Cell[189507, 3351, 444, 10, 24, "Print",ExpressionUUID->"27492eb9-0629-430d-9e18-c887134febd0"]
}, Open  ]],
Cell[189966, 3364, 178, 2, 34, "Output",ExpressionUUID->"66391476-2ddb-4b00-bc83-176b9ccaac49"]
}, Open  ]],
Cell[190159, 3369, 262, 5, 46, "Input",ExpressionUUID->"2c535cac-ee79-46b1-aea9-a10ae33bb0e8",
 InitializationCell->True],
Cell[190424, 3376, 309, 6, 46, "Input",ExpressionUUID->"755a50a2-2e56-4de3-9cc2-3fd085afa4ca",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[190770, 3387, 257, 5, 67, "Section",ExpressionUUID->"e8243c68-3d6c-445a-8e19-a68e650fe2cc",
 InitializationCell->True],
Cell[191030, 3394, 935, 17, 127, "Text",ExpressionUUID->"092fc363-aaa3-4847-8d32-5984c856c9c1",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[191990, 3415, 298, 6, 46, "Input",ExpressionUUID->"e0835c5c-8e6c-4497-8454-91eae4ac5392",
 InitializationCell->True],
Cell[192291, 3423, 383, 8, 34, "Output",ExpressionUUID->"e90284be-f22a-4316-9fe9-a290bb150175",
 InitializationCell->True],
Cell[192677, 3433, 380, 7, 34, "Output",ExpressionUUID->"f35b2772-52d3-4324-9a3a-644ba71175b4",
 InitializationCell->True]
}, Open  ]],
Cell[193072, 3443, 5981, 132, 467, "Input",ExpressionUUID->"cfe5b9e9-81c7-4f56-8413-dc9f32817438",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[199078, 3579, 305, 7, 46, "Input",ExpressionUUID->"ac9becb4-862a-4679-8bef-0e04f6614b4a",
 InitializationCell->True],
Cell[199386, 3588, 295, 5, 34, "Output",ExpressionUUID->"76450c65-c6f0-41a1-a539-d918bd5f065a",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[199718, 3598, 256, 5, 46, "Input",ExpressionUUID->"9f097671-06e7-48f1-99e8-b47fd3a096c3",
 InitializationCell->True],
Cell[199977, 3605, 1966, 50, 98, "Output",ExpressionUUID->"e57e7acd-f14d-4717-bd27-2284dc61ef7c",
 InitializationCell->True]
}, Open  ]],
Cell[201958, 3658, 326, 8, 58, "Text",ExpressionUUID->"ea38a638-617e-4d6b-a899-ec7e7738a359",
 InitializationCell->True],
Cell[202287, 3668, 399, 11, 68, "Input",ExpressionUUID->"c519f25d-1b4c-4dc7-9014-9beb305424fc",
 InitializationCell->True],
Cell[202689, 3681, 432, 10, 104, "Text",ExpressionUUID->"bdee0d54-c772-4ebf-8f08-82b2ac36f63d",
 InitializationCell->True],
Cell[203124, 3693, 278, 5, 46, "Input",ExpressionUUID->"9de09c4f-f386-4390-aa08-f48212caebe6",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[203427, 3702, 230, 5, 46, "Input",ExpressionUUID->"9218c163-3a5d-473b-8ad5-586659ceda92",
 InitializationCell->True],
Cell[203660, 3709, 905, 15, 34, "Output",ExpressionUUID->"6542adb6-40a8-4e2f-af88-808f26d20ccb",
 InitializationCell->True]
}, Open  ]],
Cell[204580, 3727, 227, 5, 46, "Input",ExpressionUUID->"dc591b7d-79ea-46d9-9754-d7fe26af0c37",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[204832, 3736, 211, 4, 46, "Input",ExpressionUUID->"7ce39394-0f08-4bf9-90cb-43b14c3ead99",
 InitializationCell->True],
Cell[205046, 3742, 16334, 401, 1470, "Output",ExpressionUUID->"c59b0b91-28cd-40a9-939b-14fccde70c5a",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[221417, 4148, 210, 4, 46, "Input",ExpressionUUID->"ac6d9e38-7684-4e25-a993-060a9bb69a50",
 InitializationCell->True],
Cell[221630, 4154, 4383, 136, 182, "Output",ExpressionUUID->"82b5e038-64f3-4ca1-bc1f-2c5f52ca3062",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[226062, 4296, 196, 4, 67, "Section",ExpressionUUID->"117a2483-1641-4b45-8ab7-fdf6eea144a7",
 InitializationCell->True],
Cell[226261, 4302, 683, 13, 46, "Input",ExpressionUUID->"20972584-798a-4fa8-84b9-0f52f5c85be4",
 InitializationCell->True],
Cell[226947, 4317, 6138, 144, 614, "Input",ExpressionUUID->"e30c583a-48db-4e9d-bb1b-a1a9ff7ba5ac",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[233110, 4465, 243, 5, 46, "Input",ExpressionUUID->"1a86986b-ebbf-4537-9f3c-311049a309d5",
 InitializationCell->True],
Cell[233356, 4472, 539, 10, 34, "Output",ExpressionUUID->"e6e26734-3fc2-4c4d-a617-e8d33a4fea2b",
 InitializationCell->True]
}, Open  ]],
Cell[233910, 4485, 1557, 40, 194, "Input",ExpressionUUID->"0a613f1b-6fd9-4023-83a5-cbba5bcd8639",
 InitializationCell->True],
Cell[235470, 4527, 1956, 52, 194, "Input",ExpressionUUID->"c029af73-768c-4108-97fe-6e4710dc2c0c",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[237451, 4583, 176, 4, 46, "Input",ExpressionUUID->"70d6d486-a1c3-4547-8488-cdc7e8c39b2b",
 InitializationCell->True],
Cell[237630, 4589, 536, 10, 34, "Output",ExpressionUUID->"cac58ceb-a69a-49f7-9bd8-24e46cc6c0b2",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[238203, 4604, 521, 14, 89, "Input",ExpressionUUID->"6778bc4a-8474-4cbc-992b-8135442ad2d0",
 InitializationCell->True],
Cell[238727, 4620, 434, 7, 34, "Output",ExpressionUUID->"ec9a3b68-816b-415b-b472-ba772f41afe7",
 InitializationCell->True],
Cell[239164, 4629, 434, 7, 34, "Output",ExpressionUUID->"f7087c80-0d40-4e90-9765-37321501cdeb",
 InitializationCell->True],
Cell[239601, 4638, 426, 7, 34, "Output",ExpressionUUID->"780a74b7-2e34-4d16-a6e2-2dac02005eb3",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[240064, 4650, 1050, 21, 89, "Input",ExpressionUUID->"af01a8e1-9a86-4f77-bf0c-bcef528cc5d2",
 InitializationCell->True],
Cell[241117, 4673, 735, 11, 34, "Output",ExpressionUUID->"b150dfa1-d6be-44d2-8f51-a4e0c56b33dd",
 InitializationCell->True]
}, Open  ]],
Cell[241867, 4687, 369, 8, 46, "Input",ExpressionUUID->"4e76986a-849c-4ce9-b4b4-12f01df55d6c",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}
]
*)

